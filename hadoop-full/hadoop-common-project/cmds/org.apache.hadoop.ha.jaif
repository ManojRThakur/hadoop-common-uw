
package ostrusted.quals:
annotation @OsUntrusted:
package ostrusted.quals:
annotation @OsTrusted:


package org.apache.hadoop.ha:
class ZKFailoverController:
method getParentZnode()Ljava/lang/String;:
local znode:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method createReqInfo()Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$4:
method run()[B:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$ZKAction:
bound 0 & 0:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method printUsage(Ljava/io/PrintStream;)V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method reJoinElection(I)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort$Args:
method parseConfiggedPort(Ljava/lang/String;)Ljava/lang/Integer;:
local nfe:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/ha/HAServiceTarget;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFCRpcServer:
method <init>(Lorg/apache/hadoop/conf/Configuration;Ljava/net/InetSocketAddress;Lorg/apache/hadoop/ha/ZKFailoverController;Lorg/apache/hadoop/security/authorize/PolicyProvider;)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method mainLoop()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method waitForActiveAttempt(I)Lorg/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method initHM()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method recheckElectability()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method getSshConnectTimeout()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method becomeActive()Z:
local oldBreadcrumbStat:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method <init>(Ljava/lang/String;ILjava/lang/String;Ljava/util/List;Ljava/util/List;Lorg/apache/hadoop/ha/ActiveStandbyElector$ActiveStandbyElectorCallback;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method cedeActive(I)V:
insert-annotation Block.statement 0, Try.block, Block.statement 0, ExpressionStatement.expression, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$ElectorCallbacks:
method fenceOldActive([B)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
field zkConnectionState:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/ha/HAServiceTarget;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFCRpcServer:
method <init>(Lorg/apache/hadoop/conf/Configuration;Ljava/net/InetSocketAddress;Lorg/apache/hadoop/ha/ZKFailoverController;Lorg/apache/hadoop/security/authorize/PolicyProvider;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doFence(Lorg/apache/hadoop/ha/HAServiceTarget;)V:
local gracefulWorked:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method gracefulFailoverThroughZKFCs(Lorg/apache/hadoop/ha/HAServiceTarget;)I:
local timeout:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method failover(Lorg/apache/commons/cli/CommandLine;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method setConf(Lorg/apache/hadoop/conf/Configuration;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort$LogAdapter:
method log(ILjava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
field errOut:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method initHM()V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field ERR_CODE_NO_PARENT_ZNODE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$State:
field INIT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
field lastServiceState:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor$State:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field ZK_SESSION_TIMEOUT_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor$MonitorDaemon:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceStatus:
method setNotReadyToBecomeActive(Ljava/lang/String;)Lorg/apache/hadoop/ha/HAServiceStatus;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer$FenceMethodWithArg:
method <init>(Lorg/apache/hadoop/ha/FenceMethod;Ljava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method <init>(Ljava/lang/String;ILjava/lang/String;Ljava/util/List;Ljava/util/List;Lorg/apache/hadoop/ha/ActiveStandbyElector$ActiveStandbyElectorCallback;)V:
parameter 4:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
field rpcTimeoutToNewActive:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method createSession(Ljava/lang/String;Lorg/apache/hadoop/ha/SshFenceByTcpPort$Args;)Lcom/jcraft/jsch/Session;:
local keyFile:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper:
method <init>(Lorg/apache/commons/logging/Log;Ljava/lang/String;Ljava/io/InputStream;Lorg/apache/hadoop/ha/StreamPumper$StreamType;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method failover(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;ZZ)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FenceMethod:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$State:
field STANDBY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$WatcherWithClientRef:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method preFailoverChecks(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;Z)V:
local msg:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor$MonitorDaemon$1:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method doHealthChecks()V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method createFenceMethod(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer$FenceMethodWithArg;:
local clazz:
type:
inner-type 3,0, 2,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin$UsageInfo:
field args:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method cedeActive(I)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method monitorLockNodeAsync()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method getLocalTarget()Lorg/apache/hadoop/ha/HAServiceTarget;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method createFenceMethod(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer$FenceMethodWithArg;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
field appData:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
field targetToMonitor:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthCheckFailedException:
field serialVersionUID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$4:
method run()[B:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method createReqInfo()Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method fenceOldActive()Lorg/apache/zookeeper/data/Stat;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$WatcherWithClientRef:
method setZooKeeperRef(Lorg/apache/zookeeper/ZooKeeper;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$ConnectionState:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor$State:
field HEALTH_MONITOR_FAILED:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper:
method pump()V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method ensureParentZNode()V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method failover(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;ZZ)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method ensureParentZNode()V:
local pathParts:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
field znodeWorkingDir:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method getNewZooKeeper()Lorg/apache/zookeeper/ZooKeeper;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method fenceOldActive([B)V:
local target:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method dataToTarget([B)Lorg/apache/hadoop/ha/HAServiceTarget;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method cedeActive(I)V:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol$StateChangeRequestInfo:
field source:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method processResult(ILjava/lang/String;Ljava/lang/Object;Ljava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class BadFencingConfigurationException:
method <init>(Ljava/lang/String;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper:
method <init>(Lorg/apache/commons/logging/Log;Ljava/lang/String;Ljava/io/InputStream;Lorg/apache/hadoop/ha/StreamPumper$StreamType;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/ha/HAServiceProtocol$RequestSource;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method formatZK(ZZ)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method tryConnect()V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
local e *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method toString()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method parseMethods(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/util/List;:
local lines:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FenceMethod:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$4:
method run()[B:
return:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
field callbacks:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method help([Ljava/lang/String;)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method preFailoverChecks(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;Z)V:
local toSvcStatus:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field ERR_CODE_NO_FENCER:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method setConfAsEnvVars(Ljava/util/Map;)V:
local pair:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
field zkAuthInfo:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
field STANDARD_METHODS:
type:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method addCallback(Lorg/apache/hadoop/ha/HealthMonitor$Callback;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method processResult(ILjava/lang/String;Ljava/lang/Object;Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getZKFCProxy(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ha/ZKFCProtocol;:
local confCopy:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class BadFencingConfigurationException:
field serialVersionUID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
field conf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method runCmd([Ljava/lang/String;)I:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol$RequestSource:
field REQUEST_BY_ZKFC:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
local builder:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method getLastServiceStatus()Lorg/apache/hadoop/ha/HAServiceStatus;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doGracefulFailover()V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method execCommand(Lcom/jcraft/jsch/Session;Ljava/lang/String;)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method setConfAsEnvVars(Ljava/util/Map;)V:
local pair:
type:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method processResult(ILjava/lang/String;Ljava/lang/Object;Ljava/lang/String;)V:
local code:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverFailedException:
method <init>(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$ActiveStandbyElectorCallback:
method becomeActive()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method doFence(Lcom/jcraft/jsch/Session;Ljava/net/InetSocketAddress;)Z:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method setDataWithRetries(Ljava/lang/String;[BI)Lorg/apache/zookeeper/data/Stat;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$3:
method run()Ljava/lang/Void;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method getNewZooKeeper()Lorg/apache/zookeeper/ZooKeeper;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$WatcherWithClientRef:
method process(Lorg/apache/zookeeper/WatchedEvent;)V:
local t:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol:
method getServiceStatus()Lorg/apache/hadoop/ha/HAServiceStatus;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method processWatchEvent(Lorg/apache/zookeeper/ZooKeeper;Lorg/apache/zookeeper/WatchedEvent;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method parseMethods(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/util/List;:
local methods:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method run([Ljava/lang/String;)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field ZK_AUTH_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method parseOpts(Ljava/lang/String;Lorg/apache/commons/cli/Options;[Ljava/lang/String;)Lorg/apache/commons/cli/CommandLine;:
parameter 2:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method clearParentZNode()V:
insert-annotation Block.statement 1, Try.block, Block.statement 1, ExpressionStatement.expression, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method run([Ljava/lang/String;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getAddress()Ljava/net/InetSocketAddress;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
field statRetryCount:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method createFenceMethod(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer$FenceMethodWithArg;:
insert-annotation Block.statement 3, Variable.initializer, TypeCast.expression, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceStatus:
field state:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method createConnection()V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doCedeActive(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getZKFCAddress()Ljava/net/InetSocketAddress;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort$Args:
field sshPort:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol:
method monitorHealth()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method execCommand(Lcom/jcraft/jsch/Session;Ljava/lang/String;)I:
local exec:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method reset()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method checkArgs(Ljava/lang/String;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocolHelper:
method transitionToStandby(Lorg/apache/hadoop/ha/HAServiceProtocol;Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;)V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method getPolicyProvider()Lorg/apache/hadoop/security/authorize/PolicyProvider;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method mainLoop()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method isSessionExpired(Lorg/apache/zookeeper/KeeperException$Code;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method reEstablishSession()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method dataToTarget([B)Lorg/apache/hadoop/ha/HAServiceTarget;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFCRpcServer:
method <init>(Lorg/apache/hadoop/conf/Configuration;Ljava/net/InetSocketAddress;Lorg/apache/hadoop/ha/ZKFailoverController;Lorg/apache/hadoop/security/authorize/PolicyProvider;)V:
local translator:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method initZK()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field conf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method zkDoWithRetries(Lorg/apache/hadoop/ha/ActiveStandbyElector$ZKAction;)Ljava/lang/Object;:
local retry:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method createSession(Ljava/lang/String;Lorg/apache/hadoop/ha/SshFenceByTcpPort$Args;)Lcom/jcraft/jsch/Session;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method joinElection([B)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceStatus:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ServiceFailedException:
method <init>(Ljava/lang/String;Ljava/lang/Throwable;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
field TARGET_PREFIX:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method parseOpts(Ljava/lang/String;Lorg/apache/commons/cli/Options;[Ljava/lang/String;)Lorg/apache/commons/cli/CommandLine;:
local pe:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method deleteWithRetries(Ljava/lang/String;I)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method fence(Lorg/apache/hadoop/ha/HAServiceTarget;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method formatZK(ZZ)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method transitionToStandby(Lorg/apache/commons/cli/CommandLine;)I:
local argv:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method confirmFormat()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method help([Ljava/lang/String;)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFCRpcServer:
method <init>(Lorg/apache/hadoop/conf/Configuration;Ljava/net/InetSocketAddress;Lorg/apache/hadoop/ha/ZKFailoverController;Lorg/apache/hadoop/security/authorize/PolicyProvider;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$2:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method addTargetInfoAsEnvVars(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/util/Map;)V:
local e:
type:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$ElectorCallbacks:
method notifyFatalError(Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method run([Ljava/lang/String;)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method processResult(ILjava/lang/String;Ljava/lang/Object;Lorg/apache/zookeeper/data/Stat;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
field USAGE:
new *5: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method getDataWithRetries(Ljava/lang/String;ZLorg/apache/zookeeper/data/Stat;)[B:
return:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method failover(Lorg/apache/commons/cli/CommandLine;)I:
local forceFence:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
field conf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper:
field type:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FenceMethod:
method checkArgs(Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method parseMethod(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer$FenceMethodWithArg;:
local arg:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method isStaleClient(Ljava/lang/Object;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method getCurrentActive()Lorg/apache/hadoop/ha/HAServiceTarget;:
local ke:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method addFencingParameters(Ljava/util/Map;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method tryConnect()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method resolveTarget(Ljava/lang/String;)Lorg/apache/hadoop/ha/HAServiceTarget;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$ActiveAttemptRecord:
method <init>(ZLjava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method initZK()V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method toString()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method gracefulFailoverThroughZKFCs(Lorg/apache/hadoop/ha/HAServiceTarget;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method terminateConnection()V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocolHelper:
method monitorHealth(Lorg/apache/hadoop/ha/HAServiceProtocol;Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method addFencingParameters(Ljava/util/Map;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method startRPC()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method failover(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;ZZ)V:
local failed:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method processResult(ILjava/lang/String;Ljava/lang/Object;Ljava/lang/String;)V:
local errorMessage:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method initZK()V:
local zkAcls:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$1:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method getDataWithRetries(Ljava/lang/String;ZLorg/apache/zookeeper/data/Stat;)[B:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
field zkAcl:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$1:
method run()Ljava/lang/Integer;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method becomeActive()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol$RequestSource:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method getServiceState(Lorg/apache/commons/cli/CommandLine;)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$ConnectionState:
field CONNECTED:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method preFailoverChecks(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;Z)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field ZKFC_CONF_KEYS:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$ConnectionState:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method targetToData(Lorg/apache/hadoop/ha/HAServiceTarget;)[B:
return:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$WatcherWithClientRef:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol$StateChangeRequestInfo:
method getSource()Lorg/apache/hadoop/ha/HAServiceProtocol$RequestSource;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFCRpcServer:
method cedeActive(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method ensureParentZNode()V:
new *1:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method isSessionExpired(Lorg/apache/zookeeper/KeeperException$Code;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer$FenceMethodWithArg:
method <init>(Lorg/apache/hadoop/ha/FenceMethod;Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getZKFCProxy(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ha/ZKFCProtocol;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$ActiveAttemptRecord:
method <init>(ZLjava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method getCurrentActive()Lorg/apache/hadoop/ha/HAServiceTarget;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method parseMethod(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer$FenceMethodWithArg;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthCheckFailedException:
method <init>(Ljava/lang/String;Ljava/lang/Throwable;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
field STANDARD_METHODS:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method getKeyFiles()Ljava/util/Collection;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort$LogAdapter:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method createFenceMethod(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer$FenceMethodWithArg;:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
local pid:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method tryGetPid(Ljava/lang/Process;)Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method fenceOldActive()Lorg/apache/zookeeper/data/Stat;:
local data:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method parentZNodeExists()Z:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method getNewZooKeeper()Lorg/apache/zookeeper/ZooKeeper;:
local auth:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method removeCallback(Lorg/apache/hadoop/ha/HealthMonitor$Callback;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method help([Ljava/lang/String;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method cedeActive(I)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$6:
method run()Ljava/lang/Void;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$State:
field NEUTRAL:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getFencingParameters()Ljava/util/Map;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method transitionToStandby(Lorg/apache/commons/cli/CommandLine;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method targetToData(Lorg/apache/hadoop/ha/HAServiceTarget;)[B:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method failover(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;ZZ)V:
local cause:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method monitorActiveStatus()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method checkHealth(Lorg/apache/commons/cli/CommandLine;)I:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$ActiveStandbyElectorCallback:
method becomeStandby()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method fenceOldActive([B)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doFence(Lorg/apache/hadoop/ha/HAServiceTarget;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method failover(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;ZZ)V:
local ioe:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method doFence(Lcom/jcraft/jsch/Session;Ljava/net/InetSocketAddress;)Z:
local port:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
field out:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getAddress()Ljava/net/InetSocketAddress;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method create(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method processResult(ILjava/lang/String;Ljava/lang/Object;Lorg/apache/zookeeper/data/Stat;)V:
local errorMessage:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$2:
method run()Ljava/lang/Void;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method shouldRetry(Lorg/apache/zookeeper/KeeperException$Code;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method zkDoWithRetries(Lorg/apache/hadoop/ha/ActiveStandbyElector$ZKAction;)Ljava/lang/Object;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method runCmd([Ljava/lang/String;)I:
local opts:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method initZK()V:
local zkAclConf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method createReqInfo()Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method abbreviate(Ljava/lang/String;I)Ljava/lang/String;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocolHelper:
method monitorHealth(Lorg/apache/hadoop/ha/HAServiceProtocol;Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;)V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
field gracefulFenceConf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method getDataWithRetries(Ljava/lang/String;ZLorg/apache/zookeeper/data/Stat;)[B:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method help([Ljava/lang/String;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method getRpcAddressToBindTo()Ljava/net/InetSocketAddress;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
local outPumper:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method setDataWithRetries(Ljava/lang/String;[BI)Lorg/apache/zookeeper/data/Stat;:
insert-annotation Block.statement 0, Return.expression, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method createSession(Ljava/lang/String;Lorg/apache/hadoop/ha/SshFenceByTcpPort$Args;)Lcom/jcraft/jsch/Session;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method createProxy()Lorg/apache/hadoop/ha/HAServiceProtocol;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method createFenceMethod(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer$FenceMethodWithArg;:
local clazz:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
local args:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method initZK()V:
local zkAuthConf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceStatus:
method setReadyToBecomeActive()Lorg/apache/hadoop/ha/HAServiceStatus;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doFence(Lorg/apache/hadoop/ha/HAServiceTarget;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceStatus:
method getNotReadyReason()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol$StateChangeRequestInfo:
method getSource()Lorg/apache/hadoop/ha/HAServiceProtocol$RequestSource;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method createReqInfo()Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method getNewZooKeeper()Lorg/apache/zookeeper/ZooKeeper;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol:
field versionID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method parseMethods(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/util/List;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$ElectorCallbacks:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper:
method <init>(Lorg/apache/commons/logging/Log;Ljava/lang/String;Ljava/io/InputStream;Lorg/apache/hadoop/ha/StreamPumper$StreamType;)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method gracefulFailoverThroughZKFCs(Lorg/apache/hadoop/ha/HAServiceTarget;)I:
local proxy:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doGracefulFailover()V:
local oldActive:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method getStateForTests()Lorg/apache/hadoop/ha/ActiveStandbyElector$State;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper:
method <init>(Lorg/apache/commons/logging/Log;Ljava/lang/String;Ljava/io/InputStream;Lorg/apache/hadoop/ha/StreamPumper$StreamType;)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method parseOpts(Ljava/lang/String;Lorg/apache/commons/cli/Options;[Ljava/lang/String;)Lorg/apache/commons/cli/CommandLine;:
insert-annotation Block.statement 0, Try.block, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method createConnection()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ServiceFailedException:
method <init>(Ljava/lang/String;Ljava/lang/Throwable;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method addFailoverCliOpts(Lorg/apache/commons/cli/Options;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method printUsage(Ljava/io/PrintStream;)V:
local e:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method failover(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;ZZ)V:
local tryFence:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doFence(Lorg/apache/hadoop/ha/HAServiceTarget;)V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method getRpcTimeoutToNewActive(Lorg/apache/hadoop/conf/Configuration;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
field FORCEFENCE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method isAlive()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method terminateConnection()V:
local tempZk:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method <init>(Ljava/lang/String;ILjava/lang/String;Ljava/util/List;Ljava/util/List;Lorg/apache/hadoop/ha/ActiveStandbyElector$ActiveStandbyElectorCallback;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method parseMethods(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/util/List;:
local line:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
field zkAuthInfo:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method confirmForceManual()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$WatcherWithClientRef:
field hasSetZooKeeper:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method parseOpts(Ljava/lang/String;Lorg/apache/commons/cli/Options;[Ljava/lang/String;)Lorg/apache/commons/cli/CommandLine;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method loopUntilConnected()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method createFenceMethod(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer$FenceMethodWithArg;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$ElectorCallbacks:
method fenceOldActive([B)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method fence(Lorg/apache/hadoop/ha/HAServiceTarget;)Z:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method enterState(Lorg/apache/hadoop/ha/HealthMonitor$State;)V:
local cb:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol$HAServiceState:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method preFailoverChecks(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;Z)V:
local toSvc:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
field state:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field ZKFC_CONF_KEYS:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin$UsageInfo:
method <init>(Ljava/lang/String;Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method setLastHealthState(LHealthMonitor/State;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doRun([Ljava/lang/String;)I:
local i:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$ActiveNotFoundException:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method sleepFor(I)V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$1:
method run()Ljava/lang/Void;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$3:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method reEstablishSession()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method doFence(Lcom/jcraft/jsch/Session;Ljava/net/InetSocketAddress;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method fatalError(Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$6:
method run()Ljava/lang/Void;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method doFence(Lcom/jcraft/jsch/Session;Ljava/net/InetSocketAddress;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method tryGracefulFence(Lorg/apache/hadoop/ha/HAServiceTarget;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method initRPC()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverFailedException:
method <init>(Ljava/lang/String;Ljava/lang/Throwable;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method badArg(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
field STANDARD_METHODS:
insert-annotation Variable.initializer, MethodInvocation.typeArgument 1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method getPolicyProvider()Lorg/apache/hadoop/security/authorize/PolicyProvider;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method enterState(Lorg/apache/hadoop/ha/HealthMonitor$State;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method createWithRetries(Ljava/lang/String;[BLjava/util/List;Lorg/apache/zookeeper/CreateMode;)Ljava/lang/String;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthCheckFailedException:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method failover(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;ZZ)V:
local sfe:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
field ABBREV_LENGTH:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method createWithRetries(Ljava/lang/String;[BLjava/util/List;Lorg/apache/zookeeper/CreateMode;)Ljava/lang/String;:
parameter 2:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method transitionToStandby(Lorg/apache/commons/cli/CommandLine;)I:
local target:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method fenceOldActive()Lorg/apache/zookeeper/data/Stat;:
local stat:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer$FenceMethodWithArg:
method <init>(Lorg/apache/hadoop/ha/FenceMethod;Ljava/lang/String;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method printUsage()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer$FenceMethodWithArg:
field method:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field activeAttemptRecordLock:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method preFailoverChecks(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;Z)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method clearParentZNode()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method printUsage(Ljava/io/PrintStream;Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method doHealthChecks()V:
local t:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol$StateChangeRequestInfo:
method <init>(Lorg/apache/hadoop/ha/HAServiceProtocol$RequestSource;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method transitionToActive(Lorg/apache/commons/cli/CommandLine;)I:
local target:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method tryDeleteOwnBreadCrumbNode()V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method gracefulFailoverThroughZKFCs(Lorg/apache/hadoop/ha/HAServiceTarget;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method createWithRetries(Ljava/lang/String;[BLjava/util/List;Lorg/apache/zookeeper/CreateMode;)Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method isAlive()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method becomeActive()V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method preFailoverChecks(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;Z)V:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field USAGE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method failover(Lorg/apache/commons/cli/CommandLine;)I:
local args:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method scheduleRecheck(J)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
field USAGE:
insert-annotation Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method dataToTarget([B)Lorg/apache/hadoop/ha/HAServiceTarget;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method failover(Lorg/apache/commons/cli/CommandLine;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method tryGracefulFence(Lorg/apache/hadoop/ha/HAServiceTarget;)Z:
local sfe:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method waitForActiveAttempt(I)Lorg/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method runCmd([Ljava/lang/String;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method waitForActiveAttempt(I)Lorg/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$ZKAction:
method run()Ljava/lang/Object;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method runCmd([Ljava/lang/String;)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method getLocalTarget()Lorg/apache/hadoop/ha/HAServiceTarget;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getProxy(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ha/HAServiceProtocol;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFCRpcServer:
field zkfc:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method tryDeleteOwnBreadCrumbNode()V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doCedeActive(I)V:
local timeout:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$ActiveAttemptRecord:
method <init>(ZLjava/lang/String;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method addTargetInfoAsEnvVars(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/util/Map;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method doHealthChecks()V:
local healthy:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method getCurrentActive()Lorg/apache/hadoop/ha/HAServiceTarget;:
local oldActive:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field elector:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$1:
method run()Ljava/lang/Void;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer$FenceMethodWithArg:
field arg:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFCRpcServer:
method stopAndJoin()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
field proxy:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper:
method <init>(Lorg/apache/commons/logging/Log;Ljava/lang/String;Ljava/io/InputStream;Lorg/apache/hadoop/ha/StreamPumper$StreamType;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
field zkAcl:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method fatalError(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method getCurrentActive()Lorg/apache/hadoop/ha/HAServiceTarget;:
local activeData:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method fence(Lorg/apache/hadoop/ha/HAServiceTarget;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method failover(Lorg/apache/commons/cli/CommandLine;)I:
local args:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
field NUM_RETRIES:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method checkArgs(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method fenceOldActive()Lorg/apache/zookeeper/data/Stat;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field ZK_PARENT_ZNODE_DEFAULT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method setDataWithRetries(Ljava/lang/String;[BI)Lorg/apache/zookeeper/data/Stat;:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$ActiveStandbyElectorCallback:
method notifyFatalError(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method joinElection([B)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
local e *2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
field PORT_SUBST_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getFencingParameters()Ljava/util/Map;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method <init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method transitionToStandby(Lorg/apache/commons/cli/CommandLine;)I:
local argv:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method createReqInfo()Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method failover(Lorg/apache/commons/cli/CommandLine;)I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method <init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$ZKAction:
method run()Ljava/lang/Object;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method ensureParentZNode()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
field FORCEACTIVE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method createFenceMethod(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer$FenceMethodWithArg;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceStatus:
method setReadyToBecomeActive()Lorg/apache/hadoop/ha/HAServiceStatus;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort$LogAdapter:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol$HAServiceState:
field INITIALIZING:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/ha/HAServiceProtocol$RequestSource;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method zkDoWithRetries(Lorg/apache/hadoop/ha/ActiveStandbyElector$ZKAction;)Ljava/lang/Object;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doFence(Lorg/apache/hadoop/ha/HAServiceTarget;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getFencer()Lorg/apache/hadoop/ha/NodeFencer;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
local p:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
field BREADCRUMB_FILENAME:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$WatcherWithClientRef:
field zk:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method createLockNodeAsync()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method recordActiveAttempt(Lorg/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method confirmFormat()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer$FenceMethodWithArg:
method toString()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor$Callback:
method enteredState(Lorg/apache/hadoop/ha/HealthMonitor$State;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
field USAGE:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol$HAServiceState:
method toString()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method printUsage(Ljava/io/PrintStream;Ljava/lang/String;)V:
local usage:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthCheckFailedException:
method <init>(Ljava/lang/String;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort$Args:
field user:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$1:
method run()Ljava/lang/Integer;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method addTargetInfoAsEnvVars(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/util/Map;)V:
local key:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method fenceOldActive()Lorg/apache/zookeeper/data/Stat;:
new *1:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method reJoinElection(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getProxy(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ha/HAServiceProtocol;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method createSession(Ljava/lang/String;Lorg/apache/hadoop/ha/SshFenceByTcpPort$Args;)Lcom/jcraft/jsch/Session;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
field FORCEMANUAL:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method joinElectionInternal()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method isSuccess(Lorg/apache/zookeeper/KeeperException$Code;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper$StreamType:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method failover(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;ZZ)V:
local ffe:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceStatus:
method getState()Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method createWithRetries(Ljava/lang/String;[BLjava/util/List;Lorg/apache/zookeeper/CreateMode;)Ljava/lang/String;:
parameter 1:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$ActiveAttemptRecord:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getFencingParameters()Ljava/util/Map;:
insert-annotation Block.statement 0, Variable.initializer, MethodInvocation.typeArgument 1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
field USAGE:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method becomeActive()V:
instanceof *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method becomeActive()V:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method getHealthState()Lorg/apache/hadoop/ha/HealthMonitor$State;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort$Args:
method <init>(Ljava/lang/String;)V:
local m:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
field CONF_IDENTITIES_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceStatus:
method isReadyToBecomeActive()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method addTargetInfoAsEnvVars(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/util/Map;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method getZKSessionIdForTests()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field ERR_CODE_NO_ZK:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field lastActiveAttemptRecord:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method transitionToStandby(Lorg/apache/commons/cli/CommandLine;)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor$MonitorDaemon$1:
method uncaughtException(Ljava/lang/Thread;Ljava/lang/Throwable;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort$Args:
field DEFAULT_SSH_PORT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthCheckFailedException:
method <init>(Ljava/lang/String;Ljava/lang/Throwable;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doGracefulFailover()V:
local attempt:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
field callbacks:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method processWatchEvent(Lorg/apache/zookeeper/ZooKeeper;Lorg/apache/zookeeper/WatchedEvent;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getFencingParameters()Ljava/util/Map;:
return:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field ZKFC_CONF_KEYS:
new *0:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper:
field logPrefix:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method shouldRetry(Lorg/apache/zookeeper/KeeperException$Code;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
field USAGE:
type:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$ElectorCallbacks:
method notifyFatalError(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer$FenceMethodWithArg:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
field zkSessionTimeout:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin$UsageInfo:
field help:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method createFenceMethod(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer$FenceMethodWithArg;:
local method:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method createFenceMethod(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer$FenceMethodWithArg;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$3:
method run()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method tryGracefulFence(Lorg/apache/hadoop/ha/HAServiceTarget;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method doHealthChecks()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocolHelper:
method transitionToStandby(Lorg/apache/hadoop/ha/HAServiceProtocol;Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method getNewZooKeeper()Lorg/apache/zookeeper/ZooKeeper;:
local zk:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol:
method getServiceStatus()Lorg/apache/hadoop/ha/HAServiceStatus;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method transitionToStandby(Lorg/apache/commons/cli/CommandLine;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field ZKFC_CONF_KEYS:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getZKFCProxy(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ha/ZKFCProtocol;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
field zkBreadCrumbPath:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method create(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method isStaleClient(Ljava/lang/Object;)Z:
insert-annotation Block.statement 0, ExpressionStatement.expression, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method checkHealth(Lorg/apache/commons/cli/CommandLine;)I:
local proto:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method printUsage(Ljava/io/PrintStream;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor$State:
field INITIALIZING:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method reEstablishSession()Z:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doRun([Ljava/lang/String;)I:
local force:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method transitionToActive(Lorg/apache/commons/cli/CommandLine;)I:
local argv:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method checkArgs(Ljava/lang/String;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method parseMethods(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/util/List;:
insert-annotation Block.statement 1, Variable.initializer, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method resolveTarget(Ljava/lang/String;)Lorg/apache/hadoop/ha/HAServiceTarget;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method createReqInfo()Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
field USAGE:
insert-annotation Variable.initializer, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.methodSelect, MemberSelect.expression, MethodInvocation.typeArgument 1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method parseMethod(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer$FenceMethodWithArg;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper:
field started:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method cleanup(Lcom/jcraft/jsch/ChannelExec;)V:
local t:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method tryGracefulFence(Lorg/apache/hadoop/ha/HAServiceTarget;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method initZK()V:
local zkAuths:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method getServiceState(Lorg/apache/commons/cli/CommandLine;)I:
local argv:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method createFenceMethod(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer$FenceMethodWithArg;:
local clazz:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method isStaleClient(Ljava/lang/Object;)Z:
typecast *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method run([Ljava/lang/String;)I:
insert-annotation Block.statement 2, Try.block, Block.statement 0, Return.expression, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
field gracefulFenceTimeout:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method execCommand(Lcom/jcraft/jsch/Session;Ljava/lang/String;)I:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/ha/HAServiceTarget;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method processWatchEvent(Lorg/apache/zookeeper/ZooKeeper;Lorg/apache/zookeeper/WatchedEvent;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method isSuccess(Lorg/apache/zookeeper/KeeperException$Code;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field fatalError:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
field callbacks:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method processResult(ILjava/lang/String;Ljava/lang/Object;Ljava/lang/String;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method getServiceAddr(Ljava/lang/String;)Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
field appData:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper:
method pump()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method getServiceAddr(Ljava/lang/String;)Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method gracefulFailoverThroughZKFCs(Lorg/apache/hadoop/ha/HAServiceTarget;)I:
local sfe:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method deleteWithRetries(Ljava/lang/String;I)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method preFailoverChecks(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;Z)V:
local hce:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol$RequestSource:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper$1:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method targetToData(Lorg/apache/hadoop/ha/HAServiceTarget;)[B:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method shutdown()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFCRpcServer:
field HANDLER_COUNT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
field sleepAfterDisconnectMillis:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method badArg(Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method initRPC()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method getElectorForTests()Lorg/apache/hadoop/ha/ActiveStandbyElector;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method becomeActive()V:
local msg *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$HealthCallbacks:
method enteredState(LHealthMonitor/State;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method fenceOldActive([B)V:
local t:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method run([Ljava/lang/String;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method setDataWithRetries(Ljava/lang/String;[BI)Lorg/apache/zookeeper/data/Stat;:
parameter 1:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method getKeyFiles()Ljava/util/Collection;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method zkDoWithRetries(Lorg/apache/hadoop/ha/ActiveStandbyElector$ZKAction;)Ljava/lang/Object;:
bound 0 & 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method parseMethod(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer$FenceMethodWithArg;:
local className *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method failover(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;ZZ)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method tryGetPid(Ljava/lang/Process;)Ljava/lang/String;:
local f:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method scheduleRecheck(J)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin$UsageInfo:
method <init>(Ljava/lang/String;Ljava/lang/String;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceStatus:
field readyToBecomeActive:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method printUsage(Ljava/io/PrintStream;Ljava/lang/String;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor$MonitorDaemon:
method run()V:
local ie:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method transitionToActive(Lorg/apache/commons/cli/CommandLine;)I:
local argv:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method deleteWithRetries(Ljava/lang/String;I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceStatus:
method <init>(Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$ActiveAttemptRecord:
field status:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method setDataWithRetries(Ljava/lang/String;[BI)Lorg/apache/zookeeper/data/Stat;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFCRpcServer:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method getZKSessionIdForTests()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method parseMethod(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer$FenceMethodWithArg;:
local className:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method formatZK(ZZ)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method preFailoverChecks(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;Z)V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
local serviceAddr:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method preFailoverChecks(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;Z)V:
local e *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getProxy(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ha/HAServiceProtocol;:
local confCopy:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$HealthCallbacks:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method recordActiveAttempt(Lorg/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doRun([Ljava/lang/String;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method preFailoverChecks(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;Z)V:
local notReadyReason:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method addTargetInfoAsEnvVars(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/util/Map;)V:
parameter 1:
type:
inner-type 3,1: @ostrusted.quals.OsTrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort$Args:
method <init>(Ljava/lang/String;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doCedeActive(I)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method gracefulFailoverThroughZKFCs(Lorg/apache/hadoop/ha/HAServiceTarget;)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method isAutoFailoverEnabled()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
field methods:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class BadFencingConfigurationException:
method <init>(Ljava/lang/String;Ljava/lang/Throwable;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method formatZK(ZZ)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doCedeActive(I)V:
local ioe:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method becomeActive()V:
local t:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method isNodeExists(Lorg/apache/zookeeper/KeeperException$Code;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method start()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method failover(Lorg/apache/commons/cli/CommandLine;)I:
local toNode:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method gracefulFailoverToYou()V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method createWithRetries(Ljava/lang/String;[BLjava/util/List;Lorg/apache/zookeeper/CreateMode;)Ljava/lang/String;:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method formatZK(ZZ)I:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method getCurrentActive()Lorg/apache/hadoop/ha/HAServiceTarget;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/ha/HAServiceProtocol$RequestSource;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthCheckFailedException:
method <init>(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
field CONF_CONNECT_TIMEOUT_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method gracefulFailoverToYou()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method getActiveData()[B:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doRun([Ljava/lang/String;)I:
local interactive:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$WatcherWithClientRef:
method setZooKeeperRef(Lorg/apache/zookeeper/ZooKeeper;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method failover(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;ZZ)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method create(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper:
method <init>(Lorg/apache/commons/logging/Log;Ljava/lang/String;Ljava/io/InputStream;Lorg/apache/hadoop/ha/StreamPumper$StreamType;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method preFailoverChecks(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;Z)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method gracefulFailoverToYou()V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field rpcServer:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method createSession(Ljava/lang/String;Lorg/apache/hadoop/ha/SshFenceByTcpPort$Args;)Lcom/jcraft/jsch/Session;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doFence(Lorg/apache/hadoop/ha/HAServiceTarget;)V:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort$LogAdapter:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method getActiveData()[B:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method runCmd([Ljava/lang/String;)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method run([Ljava/lang/String;)I:
local rte:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method ensureParentZNode()V:
local pathParts:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor$Callback:
method enteredState(Lorg/apache/hadoop/ha/HealthMonitor$State;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method processResult(ILjava/lang/String;Ljava/lang/Object;Lorg/apache/zookeeper/data/Stat;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$ElectorCallbacks:
method becomeActive()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor$State:
field SERVICE_UNHEALTHY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method getNewZooKeeper()Lorg/apache/zookeeper/ZooKeeper;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFCRpcServer:
method <init>(Lorg/apache/hadoop/conf/Configuration;Ljava/net/InetSocketAddress;Lorg/apache/hadoop/ha/ZKFailoverController;Lorg/apache/hadoop/security/authorize/PolicyProvider;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field healthMonitor:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doGracefulFailover()V:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol$HAServiceState:
field ACTIVE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthCheckFailedException:
method <init>(Ljava/lang/String;Ljava/lang/Throwable;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFCRpcServer:
method gracefulFailover()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method transitionToActive(Lorg/apache/commons/cli/CommandLine;)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$ActiveStandbyElectorCallback:
method notifyFatalError(Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol$HAServiceState:
method <init>(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$WatcherWithClientRef:
method waitForZKConnectionEvent(I)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$State:
field ACTIVE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method processWatchEvent(Lorg/apache/zookeeper/ZooKeeper;Lorg/apache/zookeeper/WatchedEvent;)V:
local eventType:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method recheckElectability()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method getProxy()Lorg/apache/hadoop/ha/HAServiceProtocol;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$3:
method run()Ljava/lang/Void;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/ha/HAServiceProtocol$RequestSource;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method getRpcServerForTests()Lorg/apache/hadoop/ha/ZKFCRpcServer;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method fenceOldActive()Lorg/apache/zookeeper/data/Stat;:
insert-annotation Block.statement 3, Try.block, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FenceMethod:
method checkArgs(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method initZK()V:
local zkTimeout:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method getActiveData()[B:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFCProtocol:
method cedeActive(I)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method parseOpts(Ljava/lang/String;Lorg/apache/commons/cli/Options;[Ljava/lang/String;)Lorg/apache/commons/cli/CommandLine;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method run([Ljava/lang/String;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFCRpcServer:
field server:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper:
method pump()V:
local inputStreamReader:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method clearParentZNode()V:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method becomeActive()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method failover(Lorg/apache/commons/cli/CommandLine;)I:
local forceActive:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getFencingParameters()Ljava/util/Map;:
local ret:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol$HAServiceState:
field STANDBY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method initZK()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method getCurrentActive()Lorg/apache/hadoop/ha/HAServiceTarget;:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method checkArgs(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method getGracefulFenceTimeout(Lorg/apache/hadoop/conf/Configuration;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method initZK()V:
insert-annotation Block.statement 9, If.elseStatement, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doFence(Lorg/apache/hadoop/ha/HAServiceTarget;)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort$Args:
method parseConfiggedPort(Ljava/lang/String;)Ljava/lang/Integer;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doRun([Ljava/lang/String;)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$3:
method run()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method createFenceMethod(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer$FenceMethodWithArg;:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
field zkClient:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FenceMethod:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method create(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceStatus:
method isReadyToBecomeActive()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method getRpcServerForTests()Lorg/apache/hadoop/ha/ZKFCRpcServer;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getZKFCAddress()Ljava/net/InetSocketAddress;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFCRpcServer:
method cedeActive(I)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$HealthCallbacks:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method parseOpts(Ljava/lang/String;Lorg/apache/commons/cli/Options;[Ljava/lang/String;)Lorg/apache/commons/cli/CommandLine;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method <init>(Ljava/lang/String;ILjava/lang/String;Ljava/util/List;Ljava/util/List;Lorg/apache/hadoop/ha/ActiveStandbyElector$ActiveStandbyElectorCallback;)V:
parameter 4:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort$LogAdapter:
method isEnabled(I)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method cedeActive(I)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
field connectRetryInterval:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
field CLASS_WITH_ARGUMENT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method initZK()V:
local zkAcls:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
field CLASS_WITHOUT_ARGUMENT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doRun([Ljava/lang/String;)I:
local ke:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field ZK_ACL_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method doFence(Lcom/jcraft/jsch/Session;Ljava/net/InetSocketAddress;)Z:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$ActiveAttemptRecord:
field succeeded:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method clearParentZNode()V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
field daemon:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method becomeActive()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort$LogAdapter:
method isEnabled(I)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
field CONF_CONNECT_TIMEOUT_DEFAULT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method getLastServiceStatus()Lorg/apache/hadoop/ha/HAServiceStatus;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method getScopeInsideParentNode()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getZKFCProxy(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ha/ZKFCProtocol;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ServiceFailedException:
method <init>(Ljava/lang/String;Ljava/lang/Throwable;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
field zkHostPort:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getProxy(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ha/HAServiceProtocol;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method run([Ljava/lang/String;)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
implements 1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method processResult(ILjava/lang/String;Ljava/lang/Object;Lorg/apache/zookeeper/data/Stat;)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$ElectorCallbacks:
method enterNeutralMode()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method isAutoFailoverEnabled()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method execCommand(Lcom/jcraft/jsch/Session;Ljava/lang/String;)I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$HealthCallbacks:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method failover(Lorg/apache/commons/cli/CommandLine;)I:
local ffe:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFCProtocol:
method gracefulFailover()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method reEstablishSession()Z:
local connectionRetryCount:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
field state:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method joinElection([B)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFCRpcServer:
method <init>(Lorg/apache/hadoop/conf/Configuration;Ljava/net/InetSocketAddress;Lorg/apache/hadoop/ha/ZKFailoverController;Lorg/apache/hadoop/security/authorize/PolicyProvider;)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort$Args:
field USER_PORT_RE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field zkQuorum:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol:
method transitionToActive(Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocolHelper:
method transitionToActive(Lorg/apache/hadoop/ha/HAServiceProtocol;Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method createReqInfo()Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method join()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$4:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method isStaleClient(Ljava/lang/Object;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort$Args:
method <init>(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doGracefulFailover()V:
local timeout:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method createReqInfo()Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceStatus:
method <init>(Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method zkDoWithRetries(Lorg/apache/hadoop/ha/ActiveStandbyElector$ZKAction;)Ljava/lang/Object;:
typeparam 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor$MonitorDaemon$1:
method uncaughtException(Ljava/lang/Thread;Ljava/lang/Throwable;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$ElectorCallbacks:
method fenceOldActive([B)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ServiceFailedException:
method <init>(Ljava/lang/String;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method isNodeDoesNotExist(Lorg/apache/zookeeper/KeeperException$Code;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper:
method pump()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method createWithRetries(Ljava/lang/String;[BLjava/util/List;Lorg/apache/zookeeper/CreateMode;)Ljava/lang/String;:
insert-annotation Block.statement 0, Return.expression, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
field callbacks:
insert-annotation Variable.initializer, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$ElectorCallbacks:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method getDataWithRetries(Ljava/lang/String;ZLorg/apache/zookeeper/data/Stat;)[B:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method setConf(Lorg/apache/hadoop/conf/Configuration;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method fenceOldActive([B)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method abbreviate(Ljava/lang/String;I)Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method parentZNodeExists()Z:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$WatcherWithClientRef:
method waitForZKConnectionEvent(I)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort$LogAdapter:
method log(ILjava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method getCurrentActive()Lorg/apache/hadoop/ha/HAServiceTarget;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol$HAServiceState:
field STOPPING:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method tryGetPid(Ljava/lang/Process;)Ljava/lang/String;:
local clazz:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$HealthCallbacks:
method enteredState(LHealthMonitor/State;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper$StreamType:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method zkDoWithRetries(Lorg/apache/hadoop/ha/ActiveStandbyElector$ZKAction;)Ljava/lang/Object;:
local ke:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doGracefulFailover()V:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$WatcherWithClientRef:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverFailedException:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method checkArgs(Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
field appClient:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method execCommand(Lcom/jcraft/jsch/Session;Ljava/lang/String;)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method checkHealth(Lorg/apache/commons/cli/CommandLine;)I:
local argv:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method writeBreadCrumbNode(Lorg/apache/zookeeper/data/Stat;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method addFencingParameters(Ljava/util/Map;)V:
parameter 0:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method createFenceMethod(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer$FenceMethodWithArg;:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$ElectorCallbacks:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method execCommand(Lcom/jcraft/jsch/Session;Ljava/lang/String;)I:
local outPumper:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$ActiveAttemptRecord:
field nanoTime:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method deleteWithRetries(Ljava/lang/String;I)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method quitElection(Z)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
field HASH_COMMENT_RE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method run([Ljava/lang/String;)I:
local ioe:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method preFailoverChecks(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;Z)V:
new *5: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method reJoinElectionAfterFailureToBecomeActive()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ServiceFailedException:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$WatcherWithClientRef:
method process(Lorg/apache/zookeeper/WatchedEvent;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method enterNeutralMode()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method loginAsFCUser()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method checkEligibleForFailover()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$WatcherWithClientRef:
field hasReceivedEvent:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method tryGetPid(Ljava/lang/Process;)Ljava/lang/String;:
local t:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method ensureParentZNode()V:
local sb:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
field shouldRun:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$ActiveStandbyElectorCallback:
method fenceOldActive([B)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method reEstablishSession()Z:
local success:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method tryGracefulFence(Lorg/apache/hadoop/ha/HAServiceTarget;)Z:
local ioe:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method fenceOldActive()Lorg/apache/zookeeper/data/Stat;:
local data:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method processResult(ILjava/lang/String;Ljava/lang/Object;Lorg/apache/zookeeper/data/Stat;)V:
local code:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFCRpcServer:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method execCommand(Lcom/jcraft/jsch/Session;Ljava/lang/String;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method getProxy()Lorg/apache/hadoop/ha/HAServiceProtocol;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFCProtocol:
field versionID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class BadFencingConfigurationException:
method <init>(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method setDataWithRetries(Ljava/lang/String;[BI)Lorg/apache/zookeeper/data/Stat;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort$LogAdapter:
method log(ILjava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method confirmFormat()Z:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
field ADDRESS_SUBST_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
field STANDARD_METHODS:
type:
inner-type 3,1, 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method <init>(Ljava/lang/String;ILjava/lang/String;Ljava/util/List;Ljava/util/List;Lorg/apache/hadoop/ha/ActiveStandbyElector$ActiveStandbyElectorCallback;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method doFence(Lcom/jcraft/jsch/Session;Ljava/net/InetSocketAddress;)Z:
local rc:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method abbreviate(Ljava/lang/String;I)Ljava/lang/String;:
local firstHalf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method failover(Lorg/apache/commons/cli/CommandLine;)I:
local fromNode:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method fenceOldActive()Lorg/apache/zookeeper/data/Stat;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method cedeActive(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol$HAServiceState:
method toString()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method transitionToActive(Lorg/apache/commons/cli/CommandLine;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class BadFencingConfigurationException:
method <init>(Ljava/lang/String;Ljava/lang/Throwable;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method confirmFormat()Z:
local parentZnode:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method setLastHealthState(LHealthMonitor/State;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper:
field stream:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
field sessionReestablishLockForTests:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method isNodeExists(Lorg/apache/zookeeper/KeeperException$Code;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/ha/HAServiceTarget;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method tryGetPid(Ljava/lang/Process;)Ljava/lang/String;:
local clazz:
type:
inner-type 3,0, 2,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doGracefulFailover()V:
local oldZkfc:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
field sessionReestablishLockForTests:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method run([Ljava/lang/String;)I:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$1:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method fenceOldActive()Lorg/apache/zookeeper/data/Stat;:
local ke:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method ensureParentZNode()V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method parseMethods(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/util/List;:
local lines:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method cleanup(Lcom/jcraft/jsch/ChannelExec;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method setConfAsEnvVars(Ljava/util/Map;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method joinElection([B)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method createWithRetries(Ljava/lang/String;[BLjava/util/List;Lorg/apache/zookeeper/CreateMode;)Ljava/lang/String;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method checkManualStateManagementOK(Lorg/apache/hadoop/ha/HAServiceTarget;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method getParentZnode()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
field STANDARD_METHODS:
type:
inner-type 3,1, 3,0, 2,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method processResult(ILjava/lang/String;Ljava/lang/Object;Ljava/lang/String;)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method addCallback(Lorg/apache/hadoop/ha/HealthMonitor$Callback;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$WatcherWithClientRef:
method waitForZKConnectionEvent(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ServiceFailedException:
method <init>(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method preFailoverChecks(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;Z)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor$MonitorDaemon:
method <init>()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method checkManualStateManagementOK(Lorg/apache/hadoop/ha/HAServiceTarget;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method isStaleClient(Ljava/lang/Object;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceStatus:
field notReadyReason:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method help([Ljava/lang/String;)I:
local usageInfo:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method addTargetInfoAsEnvVars(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/util/Map;)V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method preFailoverChecks(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;Z)V:
new *4: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method execCommand(Lcom/jcraft/jsch/Session;Ljava/lang/String;)I:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method joinElection([B)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
local ie:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method joinElection([B)V:
new *1:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceStatus:
method setNotReadyToBecomeActive(Ljava/lang/String;)Lorg/apache/hadoop/ha/HAServiceStatus;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocolHelper:
method transitionToStandby(Lorg/apache/hadoop/ha/HAServiceProtocol;Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method getRpcTimeoutToNewActive(Lorg/apache/hadoop/conf/Configuration;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method createSession(Ljava/lang/String;Lorg/apache/hadoop/ha/SshFenceByTcpPort$Args;)Lcom/jcraft/jsch/Session;:
local session:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol$HAServiceState:
field name:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol$RequestSource:
field REQUEST_BY_USER_FORCED:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFCRpcServer:
method <init>(Lorg/apache/hadoop/conf/Configuration;Ljava/net/InetSocketAddress;Lorg/apache/hadoop/ha/ZKFailoverController;Lorg/apache/hadoop/security/authorize/PolicyProvider;)V:
local service:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
field wantToBeInElection:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method transitionToActive(Lorg/apache/commons/cli/CommandLine;)I:
local proto:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method run([Ljava/lang/String;)I:
local iae:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method quitElection(Z)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$WatcherWithClientRef:
method waitForZKConnectionEvent(I)V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$State:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method deleteWithRetries(Ljava/lang/String;I)V:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method run([Ljava/lang/String;)I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method setLastServiceStatus(Lorg/apache/hadoop/ha/HAServiceStatus;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method sleepFor(I)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/ha/HAServiceTarget;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper:
method pump()V:
local br:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doGracefulFailover()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method fence(Lorg/apache/hadoop/ha/HAServiceTarget;)Z:
local method:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method targetToData(Lorg/apache/hadoop/ha/HAServiceTarget;)[B:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getFencingParameters()Ljava/util/Map;:
local ret:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method getDataWithRetries(Ljava/lang/String;ZLorg/apache/zookeeper/data/Stat;)[B:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
field STANDARD_METHODS:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer$FenceMethodWithArg:
method toString()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method parseMethods(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/util/List;:
return:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method create(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer;:
local confStr:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method addTargetInfoAsEnvVars(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/util/Map;)V:
parameter 1:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method addFencingParameters(Ljava/util/Map;)V:
parameter 0:
type:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
field checkIntervalMillis:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$WatcherWithClientRef:
method process(Lorg/apache/zookeeper/WatchedEvent;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method getStateForTests()Lorg/apache/hadoop/ha/ActiveStandbyElector$State;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol:
method transitionToActive(Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper$1:
method run()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method scheduleRecheck(J)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method checkManualStateManagementOK(Lorg/apache/hadoop/ha/HAServiceTarget;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method sleepFor(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method getUsageString()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method <init>(Ljava/lang/String;ILjava/lang/String;Ljava/util/List;Ljava/util/List;Lorg/apache/hadoop/ha/ActiveStandbyElector$ActiveStandbyElectorCallback;)V:
parameter 3:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getProxy(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ha/HAServiceProtocol;:
local factory:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
field USAGE:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method zkDoWithRetries(Lorg/apache/hadoop/ha/ActiveStandbyElector$ZKAction;)Ljava/lang/Object;:
parameter 0:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method dataToTarget([B)Lorg/apache/hadoop/ha/HAServiceTarget;:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method createSession(Ljava/lang/String;Lorg/apache/hadoop/ha/SshFenceByTcpPort$Args;)Lcom/jcraft/jsch/Session;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method getUsageString()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method getServiceState(Lorg/apache/commons/cli/CommandLine;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method getActiveData()[B:
local stat:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper:
field thread:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method createWithRetries(Ljava/lang/String;[BLjava/util/List;Lorg/apache/zookeeper/CreateMode;)Ljava/lang/String;:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field localTarget:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method becomeActive()V:
local msg:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method run([Ljava/lang/String;)I:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method becomeActive()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method failover(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;ZZ)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$ConnectionState:
field TERMINATED:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method getActiveData()[B:
return:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method gracefulFailoverToYou()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol$StateChangeRequestInfo:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method failover(Lorg/apache/commons/cli/CommandLine;)I:
local numOpts:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol$RequestSource:
field REQUEST_BY_USER:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method processWatchEvent(Lorg/apache/zookeeper/ZooKeeper;Lorg/apache/zookeeper/WatchedEvent;)V:
local path:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort$Args:
method parseConfiggedPort(Ljava/lang/String;)Ljava/lang/Integer;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getZKFCProxy(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ha/ZKFCProtocol;:
local factory:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getZKFCProxy(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ha/ZKFCProtocol;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field delayJoiningUntilNanotime:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method removeCallback(Lorg/apache/hadoop/ha/HealthMonitor$Callback;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method addFailoverCliOpts(Lorg/apache/commons/cli/Options;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method badArg(Ljava/lang/String;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper$StreamType:
field STDOUT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method deleteWithRetries(Ljava/lang/String;I)V:
insert-annotation Block.statement 0, ExpressionStatement.expression, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method becomeStandby()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method preFailoverChecks(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;Z)V:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper$1:
method run()V:
local t:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor$State:
field SERVICE_NOT_RESPONDING:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method doFence(Lcom/jcraft/jsch/Session;Ljava/net/InetSocketAddress;)Z:
local e *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method parseOpts(Ljava/lang/String;Lorg/apache/commons/cli/Options;[Ljava/lang/String;)Lorg/apache/commons/cli/CommandLine;:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method resolveTarget(Ljava/lang/String;)Lorg/apache/hadoop/ha/HAServiceTarget;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method fenceOldActive()Lorg/apache/zookeeper/data/Stat;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$2:
method run()[B:
return:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method parentZNodeExists()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field ZK_ACL_DEFAULT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method fatalError(Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method createFenceMethod(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer$FenceMethodWithArg;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field ERR_CODE_AUTO_FAILOVER_NOT_ENABLED:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method runCmd([Ljava/lang/String;)I:
local cmdLine:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method getServiceState(Lorg/apache/commons/cli/CommandLine;)I:
local proto:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol:
method transitionToStandby(Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method failover(Lorg/apache/commons/cli/CommandLine;)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method <init>(Ljava/lang/String;ILjava/lang/String;Ljava/util/List;Ljava/util/List;Lorg/apache/hadoop/ha/ActiveStandbyElector$ActiveStandbyElectorCallback;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol:
method transitionToStandby(Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getFencingParameters()Ljava/util/Map;:
insert-annotation Block.statement 0, Variable.initializer, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method recheckElectability()V:
local remainingDelay:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$4:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceStatus:
method getState()Lorg/apache/hadoop/ha/HAServiceProtocol$HAServiceState;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol$HAServiceState:
method <init>(Ljava/lang/String;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method getCurrentActive()Lorg/apache/hadoop/ha/HAServiceTarget;:
local activeData:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method checkHealth(Lorg/apache/commons/cli/CommandLine;)I:
local argv:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceStatus:
method setNotReadyToBecomeActive(Ljava/lang/String;)Lorg/apache/hadoop/ha/HAServiceStatus;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocolHelper:
method transitionToActive(Lorg/apache/hadoop/ha/HAServiceProtocol;Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getZKFCProxy(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ha/ZKFCProtocol;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method ensureParentZNode()V:
local i:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
field STANDARD_METHODS:
insert-annotation Variable.initializer, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor$MonitorDaemon:
method run()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method getDataWithRetries(Ljava/lang/String;ZLorg/apache/zookeeper/data/Stat;)[B:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFCRpcServer:
method getAddress()Ljava/net/InetSocketAddress;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method becomeStandby()V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getFencingParameters()Ljava/util/Map;:
local ret:
type:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method help([Ljava/lang/String;)I:
local cmd:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field lastHealthState:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method reEstablishSession()Z:
local e *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getFencingParameters()Ljava/util/Map;:
return:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverFailedException:
method <init>(Ljava/lang/String;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocolHelper:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method getDataWithRetries(Ljava/lang/String;ZLorg/apache/zookeeper/data/Stat;)[B:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort$Args:
method parseConfiggedPort(Ljava/lang/String;)Ljava/lang/Integer;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method createFenceMethod(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer$FenceMethodWithArg;:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doRun([Ljava/lang/String;)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocol$StateChangeRequestInfo:
method <init>(Lorg/apache/hadoop/ha/HAServiceProtocol$RequestSource;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverFailedException:
method <init>(Ljava/lang/String;Ljava/lang/Throwable;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method setDataWithRetries(Ljava/lang/String;[BI)Lorg/apache/zookeeper/data/Stat;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method setConfAsEnvVars(Ljava/util/Map;)V:
parameter 0:
type:
inner-type 3,1: @ostrusted.quals.OsTrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method tryDeleteOwnBreadCrumbNode()V:
local data:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$ActiveNotFoundException:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method getRpcAddressToBindTo()Ljava/net/InetSocketAddress;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method createSession(Ljava/lang/String;Lorg/apache/hadoop/ha/SshFenceByTcpPort$Args;)Lcom/jcraft/jsch/Session;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method execCommand(Lcom/jcraft/jsch/Session;Ljava/lang/String;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method becomeStandby()V:
local timeout:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method parseMethod(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer$FenceMethodWithArg;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/ha/HAServiceProtocol$RequestSource;)V:
local gracefulFenceConnectRetries:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doFence(Lorg/apache/hadoop/ha/HAServiceTarget;)V:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method doFence(Lcom/jcraft/jsch/Session;Ljava/net/InetSocketAddress;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$ElectorCallbacks:
method toString()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method checkHealth(Lorg/apache/commons/cli/CommandLine;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method waitForActiveAttempt(I)Lorg/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord;:
local waitUntil:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method <init>(Ljava/lang/String;ILjava/lang/String;Ljava/util/List;Ljava/util/List;Lorg/apache/hadoop/ha/ActiveStandbyElector$ActiveStandbyElectorCallback;)V:
parameter 5:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort$LogAdapter:
method isEnabled(I)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method checkRpcAdminAccess()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$WatcherWithClientRef:
field hasReceivedEvent:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
field SLEEP_AFTER_FAILURE_TO_BECOME_ACTIVE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method checkHealth(Lorg/apache/commons/cli/CommandLine;)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method checkHealth(Lorg/apache/commons/cli/CommandLine;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method processWatchEvent(Lorg/apache/zookeeper/ZooKeeper;Lorg/apache/zookeeper/WatchedEvent;)V:
local prevConnectionState:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method getServiceAddr(Ljava/lang/String;)Ljava/lang/String;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFCRpcServer:
method <init>(Lorg/apache/hadoop/conf/Configuration;Ljava/net/InetSocketAddress;Lorg/apache/hadoop/ha/ZKFailoverController;Lorg/apache/hadoop/security/authorize/PolicyProvider;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doRun([Ljava/lang/String;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
field zkLockFilePath:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doGracefulFailover()V:
local msg:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method waitForActiveAttempt(I)Lorg/apache/hadoop/ha/ZKFailoverController$ActiveAttemptRecord;:
local st:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method isNodeDoesNotExist(Lorg/apache/zookeeper/KeeperException$Code;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method parseOpts(Ljava/lang/String;Lorg/apache/commons/cli/Options;[Ljava/lang/String;)Lorg/apache/commons/cli/CommandLine;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method becomeActive()Z:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$2:
method run()Ljava/lang/Void;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field delayExecutor:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method createSession(Ljava/lang/String;Lorg/apache/hadoop/ha/SshFenceByTcpPort$Args;)Lcom/jcraft/jsch/Session;:
local jsch:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$5:
method run()Lorg/apache/zookeeper/data/Stat;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class BadFencingConfigurationException:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field ZK_SESSION_TIMEOUT_DEFAULT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method printUsage(Ljava/io/PrintStream;)V:
local usage:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
field USAGE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method tryDeleteOwnBreadCrumbNode()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFCProtocol:
method cedeActive(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method runCmd([Ljava/lang/String;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method setConfAsEnvVars(Ljava/util/Map;)V:
local pair:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$5:
method run()Lorg/apache/zookeeper/data/Stat;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method preFailoverChecks(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;Z)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method parseMethod(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer$FenceMethodWithArg;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method initHM()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor$MonitorDaemon:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/ha/HAServiceTarget;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FenceMethod:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method getParentZnode()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$1:
method run()Ljava/lang/Integer;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$ActiveStandbyElectorCallback:
method fenceOldActive([B)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field ZK_QUORUM_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method setConfAsEnvVars(Ljava/util/Map;)V:
parameter 0:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
field requestSource:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field delayExecutor:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doCedeActive(I)V:
local needFence:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getProxy(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ha/HAServiceProtocol;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
field USAGE:
new *4: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
local rc:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method parseMethods(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/util/List;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field ERR_CODE_FORMAT_DENIED:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method checkEligibleForFailover()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
field createRetryCount:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method getServiceState(Lorg/apache/commons/cli/CommandLine;)I:
local argv:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method transitionToActive(Lorg/apache/commons/cli/CommandLine;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocolHelper:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method getLastHealthState()Lorg/apache/hadoop/ha/HealthMonitor$State;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method fence(Lorg/apache/hadoop/ha/HAServiceTarget;)Z:
local i:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method processResult(ILjava/lang/String;Ljava/lang/Object;Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverFailedException:
field serialVersionUID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method failover(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;ZZ)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/ha/HAServiceTarget;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method confirmForceManual()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method createConnection()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doGracefulFailover()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method clearParentZNode()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$ActiveStandbyElectorCallback:
method enterNeutralMode()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
field requestSource:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method processResult(ILjava/lang/String;Ljava/lang/Object;Lorg/apache/zookeeper/data/Stat;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method setConfAsEnvVars(Ljava/util/Map;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method getSshConnectTimeout()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method addTargetInfoAsEnvVars(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/util/Map;)V:
local e:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method getServiceState(Lorg/apache/commons/cli/CommandLine;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$ElectorCallbacks:
method toString()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
local session:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
field watcher:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method allowSessionReestablishmentForTests()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method ensureParentZNode()V:
local prefixPath:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method <init>(Ljava/lang/String;ILjava/lang/String;Ljava/util/List;Ljava/util/List;Lorg/apache/hadoop/ha/ActiveStandbyElector$ActiveStandbyElectorCallback;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper:
method <init>(Lorg/apache/commons/logging/Log;Ljava/lang/String;Ljava/io/InputStream;Lorg/apache/hadoop/ha/StreamPumper$StreamType;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method checkFencingConfigured()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor$MonitorDaemon$1:
method uncaughtException(Ljava/lang/Thread;Ljava/lang/Throwable;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$1:
method run()Ljava/lang/Integer;:
local t:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$6:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method doRun([Ljava/lang/String;)I:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method getGracefulFenceTimeout(Lorg/apache/hadoop/conf/Configuration;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
local host:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFCRpcServer:
method <init>(Lorg/apache/hadoop/conf/Configuration;Ljava/net/InetSocketAddress;Lorg/apache/hadoop/ha/ZKFailoverController;Lorg/apache/hadoop/security/authorize/PolicyProvider;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method getScopeInsideParentNode()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method ensureParentZNode()V:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFCRpcServer:
method getAddress()Ljava/net/InetSocketAddress;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method tryDeleteOwnBreadCrumbNode()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method abbreviate(Ljava/lang/String;I)Ljava/lang/String;:
local rem:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method parseMethods(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/util/List;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method parentZNodeExists()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
field USAGE:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method fenceOldActive([B)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method cedeActive(I)V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method setDataWithRetries(Ljava/lang/String;[BI)Lorg/apache/zookeeper/data/Stat;:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method printUsage(Ljava/io/PrintStream;Ljava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class BadFencingConfigurationException:
method <init>(Ljava/lang/String;Ljava/lang/Throwable;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$2:
method run()[B:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method parseMethod(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Lorg/apache/hadoop/ha/NodeFencer$FenceMethodWithArg;:
local m:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort$Args:
method <init>(Ljava/lang/String;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$5:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceStatus:
method getNotReadyReason()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort$Args:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
local logPrefix:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper:
method join()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$3:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin$UsageInfo:
method <init>(Ljava/lang/String;Ljava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
field rpcTimeout:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method failover(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;ZZ)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort$LogAdapter:
implements 0:
inner-type 1,0, 1,0, 1,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverFailedException:
method <init>(Ljava/lang/String;Ljava/lang/Throwable;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method getKeyFiles()Ljava/util/Collection;:
return:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method failover(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;ZZ)V:
local msg:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method ensureParentZNode()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method recheckElectability()V:
local healthy:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
field LOCK_FILENAME:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method initZK()V:
local zkAuths:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getProxy(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ha/HAServiceProtocol;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method preFailoverChecks(Lorg/apache/hadoop/ha/HAServiceTarget;Lorg/apache/hadoop/ha/HAServiceTarget;Z)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method getDataWithRetries(Ljava/lang/String;ZLorg/apache/zookeeper/data/Stat;)[B:
insert-annotation Block.statement 0, Return.expression, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method fenceOldActive([B)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method createWithRetries(Ljava/lang/String;[BLjava/util/List;Lorg/apache/zookeeper/CreateMode;)Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method runCmd([Ljava/lang/String;)I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper:
method start()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method getActiveData()[B:
local code:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method printUsage(Ljava/io/PrintStream;)V:
local cmd:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field ZK_PARENT_ZNODE_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
local errPumper:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method getDataWithRetries(Ljava/lang/String;ZLorg/apache/zookeeper/data/Stat;)[B:
new *0:
inner-type 3,0, 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocolHelper:
method transitionToActive(Lorg/apache/hadoop/ha/HAServiceProtocol;Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;)V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method createProxy()Lorg/apache/hadoop/ha/HAServiceProtocol;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method run([Ljava/lang/String;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method clearParentZNode()V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getZKFCProxy(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ha/ZKFCProtocol;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method tryDeleteOwnBreadCrumbNode()V:
local data:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method tryGetPid(Ljava/lang/Process;)Ljava/lang/String;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor$State:
field SERVICE_HEALTHY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method gracefulFailoverToYou()V:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method tryGracefulFence(Lorg/apache/hadoop/ha/HAServiceTarget;)Z:
local proxy:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method isStaleClient(Ljava/lang/Object;)Z:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$4:
method run()V:
local t:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method writeBreadCrumbNode(Lorg/apache/zookeeper/data/Stat;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method getHealthState()Lorg/apache/hadoop/ha/HealthMonitor$State;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper:
field log:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$ActiveNotFoundException:
field serialVersionUID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper$StreamType:
field STDERR:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort:
method execCommand(Lcom/jcraft/jsch/Session;Ljava/lang/String;)I:
local errPumper:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
field CLASS_RE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$2:
method run()[B:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method printUsage(Ljava/io/PrintStream;)V:
local e:
type:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method runCmd([Ljava/lang/String;)I:
local cmd:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method parseMethods(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)Ljava/util/List;:
local methods:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method tryDeleteOwnBreadCrumbNode()V:
local stat:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method setLastServiceStatus(Lorg/apache/hadoop/ha/HAServiceStatus;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method tryFence(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/lang/String;)Z:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method fatalError(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
field lastServiceState:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$2:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$WatcherWithClientRef:
field hasSetZooKeeper:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFCRpcServer:
method start()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
field USAGE:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class FailoverController:
method createReqInfo()Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getProxy(Lorg/apache/hadoop/conf/Configuration;I)Lorg/apache/hadoop/ha/HAServiceProtocol;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method setDataWithRetries(Ljava/lang/String;[BI)Lorg/apache/zookeeper/data/Stat;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method getDataWithRetries(Ljava/lang/String;ZLorg/apache/zookeeper/data/Stat;)[B:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method createWithRetries(Ljava/lang/String;[BLjava/util/List;Lorg/apache/zookeeper/CreateMode;)Ljava/lang/String;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method <init>(Lorg/apache/hadoop/conf/Configuration;Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method run([Ljava/lang/String;)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$State:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor$State:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin$UsageInfo:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
field activeAttemptRecordLock:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
field callbacks:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
method getFencer()Lorg/apache/hadoop/ha/NodeFencer;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method enterState(Lorg/apache/hadoop/ha/HealthMonitor$State;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$ElectorCallbacks:
method becomeStandby()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method getActiveData()[B:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method createWithRetries(Ljava/lang/String;[BLjava/util/List;Lorg/apache/zookeeper/CreateMode;)Ljava/lang/String;:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method getElectorForTests()Lorg/apache/hadoop/ha/ActiveStandbyElector;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method parseOpts(Ljava/lang/String;Lorg/apache/commons/cli/Options;[Ljava/lang/String;)Lorg/apache/commons/cli/CommandLine;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
field methods:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method <init>(Ljava/lang/String;ILjava/lang/String;Ljava/util/List;Ljava/util/List;Lorg/apache/hadoop/ha/ActiveStandbyElector$ActiveStandbyElectorCallback;)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method fence(Lorg/apache/hadoop/ha/HAServiceTarget;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method becomeActive()V:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController$4:
method run()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method terminateConnection()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method abbreviate(Ljava/lang/String;I)Ljava/lang/String;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class SshFenceByTcpPort$Args:
method parseConfiggedPort(Ljava/lang/String;)Ljava/lang/Integer;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method printUsage(Ljava/io/PrintStream;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method fenceOldActive()Lorg/apache/zookeeper/data/Stat;:
new *1:
inner-type 3,0, 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method processResult(ILjava/lang/String;Ljava/lang/Object;Lorg/apache/zookeeper/data/Stat;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceProtocolHelper:
method monitorHealth(Lorg/apache/hadoop/ha/HAServiceProtocol;Lorg/apache/hadoop/ha/HAServiceProtocol$StateChangeRequestInfo;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HealthMonitor:
method doHealthChecks()V:
local status:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method initRPC()V:
local bindAddr:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$ConnectionState:
field DISCONNECTED:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
field rpcTimeoutForChecks:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method gracefulFailoverToYou()V:
insert-annotation Block.statement 0, Try.block, Block.statement 0, ExpressionStatement.expression, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method tryGetPid(Ljava/lang/Process;)Ljava/lang/String;:
local clazz:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method preventSessionReestablishmentForTests()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAServiceTarget:
field HOST_SUBST_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$ZKAction:
typeparam 0 : @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector:
method getActiveData()[B:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ServiceFailedException:
field serialVersionUID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method failover(Lorg/apache/commons/cli/CommandLine;)I:
local fc:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method getLastHealthState()Lorg/apache/hadoop/ha/HealthMonitor$State;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class NodeFencer:
method fence(Lorg/apache/hadoop/ha/HAServiceTarget;)Z:
local t:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class HAAdmin:
method transitionToStandby(Lorg/apache/commons/cli/CommandLine;)I:
local proto:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method checkArgs(Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ZKFailoverController:
method becomeStandby()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ShellCommandFencer:
method addTargetInfoAsEnvVars(Lorg/apache/hadoop/ha/HAServiceTarget;Ljava/util/Map;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class StreamPumper:
method pump()V:
local line:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.ha:
class ActiveStandbyElector$ActiveStandbyElectorCallback:
method fenceOldActive([B)V:
receiver:  @ostrusted.quals.OsUntrusted

