
package ostrusted.quals:
annotation @OsUntrusted:
package ostrusted.quals:
annotation @OsTrusted:


package org.apache.hadoop.net.unix:
class DomainSocket$Status:
method setClosed()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method connect0(Ljava/lang/String;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method getAttribute0(II)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
field validateBindPaths:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method <init>(Ljava/lang/String;I)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method writeArray0(I[BII)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainChannel:
method read(Ljava/nio/ByteBuffer;)I:
local nread:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method recvFileInputStreams([Ljava/io/FileInputStream;[BII)I:
local t *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method getAttribute(I)I:
local exc:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method recvFileInputStreams([Ljava/io/FileInputStream;[BII)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method write0(II)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method receiveFileDescriptors([Ljava/io/FileDescriptor;[BII)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method sendFileDescriptors0(I[Ljava/io/FileDescriptor;[BII)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method receiveFileDescriptors0(I[Ljava/io/FileDescriptor;[BII)I:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method getAttribute(I)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
field RECEIVE_TIMEOUT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method setAttribute(II)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainInputStream:
method available()I:
local nAvailable:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method recvFileInputStreams([Ljava/io/FileInputStream;[BII)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method bindAndListen(Ljava/lang/String;)Lorg/apache/hadoop/net/unix/DomainSocket;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method accept()Lorg/apache/hadoop/net/unix/DomainSocket;:
local exc:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method recvFileInputStreams([Ljava/io/FileInputStream;[BII)I:
local ret:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method getChannel()Lorg/apache/hadoop/net/unix/DomainSocket$DomainChannel;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$Status:
method reference()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainInputStream:
method read([BII)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainOutputStream:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method receiveFileDescriptors([Ljava/io/FileDescriptor;[BII)I:
local exc:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method recvFileInputStreams([Ljava/io/FileInputStream;[BII)I:
local descriptors:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method bind0(Ljava/lang/String;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method getAttribute0(II)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method recvFileInputStreams([Ljava/io/FileInputStream;[BII)I:
local i:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method sendFileDescriptors([Ljava/io/FileDescriptor;[BII)V:
local exc:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method writeArray0(I[BII)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method receiveFileDescriptors([Ljava/io/FileDescriptor;[BII)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainInputStream:
method read([BII)I:
local nRead:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method getOutputStream()Lorg/apache/hadoop/net/unix/DomainSocket$DomainOutputStream;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
staticinit *0:
local t:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$Status:
method getReferenceCount()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
field path:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method connect(Ljava/lang/String;)Lorg/apache/hadoop/net/unix/DomainSocket;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method setAttribute0(III)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$Status:
method setClosed()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainInputStream:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method readByteBufferDirect0(ILjava/nio/ByteBuffer;II)I:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method recvFileInputStreams([Ljava/io/FileInputStream;[BII)I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method connect0(Ljava/lang/String;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method getPath()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method sendFileDescriptors([Ljava/io/FileDescriptor;[BII)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method readByteBufferDirect0(ILjava/nio/ByteBuffer;II)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$Status:
method unreference(Z)V:
local newCount:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method available0(I)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method receiveFileDescriptors([Ljava/io/FileDescriptor;[BII)I:
local nBytes:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method accept()Lorg/apache/hadoop/net/unix/DomainSocket;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method readByteBufferDirect0(ILjava/nio/ByteBuffer;II)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method receiveFileDescriptors([Ljava/io/FileDescriptor;[BII)I:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method getAttribute(I)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method accept0(I)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method getInputStream()Lorg/apache/hadoop/net/unix/DomainSocket$DomainInputStream;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$Status:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method setAttribute(II)V:
local exc:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainChannel:
method isOpen()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method getAttribute(I)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method recvFileInputStreams([Ljava/io/FileInputStream;[BII)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
field channel:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainInputStream:
method available()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method getAttribute0(II)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method sendFileDescriptors0(I[Ljava/io/FileDescriptor;[BII)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method recvFileInputStreams([Ljava/io/FileInputStream;[BII)I:
local descriptors:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method writeArray0(I[BII)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainInputStream:
method read([BII)I:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method toString()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$Status:
method unreference(Z)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainChannel:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainChannel:
method read(Ljava/nio/ByteBuffer;)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainOutputStream:
method write(I)V:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainInputStream:
method available()I:
local exc:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method setAttribute(II)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method sendFileDescriptors([Ljava/io/FileDescriptor;[BII)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method writeArray0(I[BII)V:
parameter 1:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method bindAndListen(Ljava/lang/String;)Lorg/apache/hadoop/net/unix/DomainSocket;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method sendFileDescriptors0(I[Ljava/io/FileDescriptor;[BII)V:
parameter 4:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method getAttribute(I)I:
local attribute:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method sendFileDescriptors([Ljava/io/FileDescriptor;[BII)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainOutputStream:
method write([BII)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method close()V:
local e *2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainInputStream:
method read()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainInputStream:
method read([BII)I:
local exc:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method isOpen()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method close()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method receiveFileDescriptors0(I[Ljava/io/FileDescriptor;[BII)I:
parameter 2:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainOutputStream:
method close()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainInputStream:
method available()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method receiveFileDescriptors0(I[Ljava/io/FileDescriptor;[BII)I:
parameter 4:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method getPath()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method receiveFileDescriptors([Ljava/io/FileDescriptor;[BII)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainOutputStream:
method write(I)V:
local b:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method accept()Lorg/apache/hadoop/net/unix/DomainSocket;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
field RECEIVE_BUFFER_SIZE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainInputStream:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method readByteBufferDirect0(ILjava/nio/ByteBuffer;II)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
field fd:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method recvFileInputStreams([Ljava/io/FileInputStream;[BII)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainChannel:
method read(Ljava/nio/ByteBuffer;)I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method recvFileInputStreams([Ljava/io/FileInputStream;[BII)I:
local i *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainChannel:
method read(Ljava/nio/ByteBuffer;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$Status:
method getReferenceCount()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method receiveFileDescriptors0(I[Ljava/io/FileDescriptor;[BII)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainOutputStream:
method write(I)V:
local exc:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method sendFileDescriptors([Ljava/io/FileDescriptor;[BII)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method readByteBufferDirect0(ILjava/nio/ByteBuffer;II)I:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method receiveFileDescriptors([Ljava/io/FileDescriptor;[BII)I:
parameter 1:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method <init>(Ljava/lang/String;I)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method available0(I)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method <init>(Ljava/lang/String;I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method recvFileInputStreams([Ljava/io/FileInputStream;[BII)I:
local t:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$Status:
field bits:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method receiveFileDescriptors0(I[Ljava/io/FileDescriptor;[BII)I:
parameter 1:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method readArray0(I[BII)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method recvFileInputStreams([Ljava/io/FileInputStream;[BII)I:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method getEffectivePath(Ljava/lang/String;I)Ljava/lang/String;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method receiveFileDescriptors0(I[Ljava/io/FileDescriptor;[BII)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
field status:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method bindAndListen(Ljava/lang/String;)Lorg/apache/hadoop/net/unix/DomainSocket;:
local fd:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainOutputStream:
method write(I)V:
new *0:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method receiveFileDescriptors([Ljava/io/FileDescriptor;[BII)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainChannel:
method read(Ljava/nio/ByteBuffer;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainInputStream:
method read([BII)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method recvFileInputStreams([Ljava/io/FileInputStream;[BII)I:
local success:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method receiveFileDescriptors([Ljava/io/FileDescriptor;[BII)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method validateSocketPathSecurity0(Ljava/lang/String;I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainOutputStream:
method write(I)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method accept0(I)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainInputStream:
method close()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method setAttribute(II)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method bind0(Ljava/lang/String;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method receiveFileDescriptors0(I[Ljava/io/FileDescriptor;[BII)I:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainOutputStream:
method write([BII)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method writeArray0(I[BII)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method readArray0(I[BII)I:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$Status:
field STATUS_CLOSED_MASK:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method close0(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method recvFileInputStreams([Ljava/io/FileInputStream;[BII)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainChannel:
method read(Ljava/nio/ByteBuffer;)I:
local exc:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method getOutputStream()Lorg/apache/hadoop/net/unix/DomainSocket$DomainOutputStream;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$Status:
method setClosed()I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method shutdown0(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method sendFileDescriptors0(I[Ljava/io/FileDescriptor;[BII)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method accept()Lorg/apache/hadoop/net/unix/DomainSocket;:
local ret:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method recvFileInputStreams([Ljava/io/FileInputStream;[BII)I:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method readArray0(I[BII)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainInputStream:
method read()I:
local b:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$Status:
method isOpen()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainInputStream:
method read()I:
new *0:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method connect(Ljava/lang/String;)Lorg/apache/hadoop/net/unix/DomainSocket;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method readArray0(I[BII)I:
parameter 1:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainChannel:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method readArray0(I[BII)I:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method sendFileDescriptors([Ljava/io/FileDescriptor;[BII)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainOutputStream:
method write([BII)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainInputStream:
method read()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method recvFileInputStreams([Ljava/io/FileInputStream;[BII)I:
new *0:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method write0(II)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
field loadingFailureReason:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainOutputStream:
method write(I)V:
local b:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method validateSocketPathSecurity0(Ljava/lang/String;I)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method recvFileInputStreams([Ljava/io/FileInputStream;[BII)I:
local i *2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method recvFileInputStreams([Ljava/io/FileInputStream;[BII)I:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method close()V:
local refCount:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
field outputStream:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$Status:
field bits:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method connect(Ljava/lang/String;)Lorg/apache/hadoop/net/unix/DomainSocket;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainInputStream:
method read([BII)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$Status:
method unreference(Z)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainInputStream:
method read([BII)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method bindAndListen(Ljava/lang/String;)Lorg/apache/hadoop/net/unix/DomainSocket;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainChannel:
method close()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method readArray0(I[BII)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method getChannel()Lorg/apache/hadoop/net/unix/DomainSocket$DomainChannel;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$Status:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method sendFileDescriptors([Ljava/io/FileDescriptor;[BII)V:
parameter 1:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainOutputStream:
method write([BII)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainOutputStream:
method write(I)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainChannel:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainOutputStream:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method close()V:
local e *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainOutputStream:
method write([BII)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method bindAndListen(Ljava/lang/String;)Lorg/apache/hadoop/net/unix/DomainSocket;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
staticinit *0:
local problem:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method close()V:
local didShutdown:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainInputStream:
method read()I:
local exc:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$Status:
method reference()V:
local curBits:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method close()V:
local interrupted:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method sendFileDescriptors0(I[Ljava/io/FileDescriptor;[BII)V:
parameter 1:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method setAttribute0(III)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method receiveFileDescriptors0(I[Ljava/io/FileDescriptor;[BII)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method recvFileInputStreams([Ljava/io/FileInputStream;[BII)I:
parameter 1:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method getAttribute0(II)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainInputStream:
method read()I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainOutputStream:
method write([BII)V:
local exc:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$Status:
method setClosed()I:
local curBits:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$Status:
method isOpen()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
field SEND_TIMEOUT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method setAttribute0(III)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method sendFileDescriptors([Ljava/io/FileDescriptor;[BII)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
field outputStream:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$Status:
method reference()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method getLoadingFailureReason()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
field channel:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method accept()Lorg/apache/hadoop/net/unix/DomainSocket;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method getEffectivePath(Ljava/lang/String;I)Ljava/lang/String;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$Status:
method unreference(Z)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method receiveFileDescriptors([Ljava/io/FileDescriptor;[BII)I:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainInputStream:
method read([BII)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method connect(Ljava/lang/String;)Lorg/apache/hadoop/net/unix/DomainSocket;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainOutputStream:
method write(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method getInputStream()Lorg/apache/hadoop/net/unix/DomainSocket$DomainInputStream;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method close()V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
field inputStream:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainChannel:
method isOpen()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method toString()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
field SEND_BUFFER_SIZE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainInputStream:
method read()I:
local ret:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method getEffectivePath(Ljava/lang/String;I)Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method connect(Ljava/lang/String;)Lorg/apache/hadoop/net/unix/DomainSocket;:
local fd:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method sendFileDescriptors0(I[Ljava/io/FileDescriptor;[BII)V:
parameter 2:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method <init>(Ljava/lang/String;I)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method isOpen()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
field inputStream:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket$DomainInputStream:
method read()I:
local b:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method sendFileDescriptors0(I[Ljava/io/FileDescriptor;[BII)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.net.unix:
class DomainSocket:
method closeFileDescriptor0(Ljava/io/FileDescriptor;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted

