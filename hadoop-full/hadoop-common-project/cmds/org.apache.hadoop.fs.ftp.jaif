
package ostrusted.quals:
annotation @OsUntrusted:
package ostrusted.quals:
annotation @OsTrusted:


package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method exists(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Z:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method mkdirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
field uri:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FtpConfigKeys:
field BYTES_PER_CHECKSUM_DEFAULT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method delete(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Z)Z:
local dirEntries:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method rename(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method listStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
local i:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method connect()Lorg/apache/commons/net/ftp/FTPClient;:
local host:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;:
local is:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
local workDir:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method delete(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Z)Z:
local fileStat:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
local length:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
local stats:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPFile;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
local modTime:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FtpConfigKeys:
field CHECKSUM_TYPE_DEFAULT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
new *4: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem$1:
method close()V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getPermissions(Lorg/apache/commons/net/ftp/FTPFile;)Lorg/apache/hadoop/fs/permission/FsPermission;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method mkdirs(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
local parent:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method delete(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method connect()Lorg/apache/commons/net/ftp/FTPClient;:
local password:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method rename(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FtpFs:
method <init>(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method seek(J)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method rename(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method <init>(Ljava/io/InputStream;Lorg/apache/commons/net/ftp/FTPClient;LFileSystem/Statistics;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method listStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
local fileStat:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method delete(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Z)Z:
local dirEntries:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method close()V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
return:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPFile;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
local isDir:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method read([BII)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getPermissions(Lorg/apache/commons/net/ftp/FTPFile;)Lorg/apache/hadoop/fs/permission/FsPermission;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPFile;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
local blockSize:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method rename(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method delete(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Z)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FtpConfigKeys:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method mkdirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
local success:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
field DEFAULT_BUFFER_SIZE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
local status:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
local port:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FtpConfigKeys:
field STREAM_BUFFER_SIZE_DEFAULT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFsAction(ILorg/apache/commons/net/ftp/FTPFile;)Lorg/apache/hadoop/fs/permission/FsAction;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPFile;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
local group:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method delete(Lorg/apache/hadoop/fs/Path;Z)Z:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method makeAbsolute(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method isFile(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Z:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method connect()Lorg/apache/commons/net/ftp/FTPClient;:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method delete(Lorg/apache/hadoop/fs/Path;Z)Z:
local client:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getUri()Ljava/net/URI;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method seekToNewSource(J)Z:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FtpConfigKeys:
field CLIENT_WRITE_PACKET_SIZE_DEFAULT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
parameter 5:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FtpConfigKeys:
field ENCRYPT_DATA_TRANSFER_DEFAULT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPFile;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method connect()Lorg/apache/commons/net/ftp/FTPClient;:
local conf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method getPos()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem$1:
method <init>(Ljava/io/OutputStream;Lorg/apache/hadoop/fs/FileSystem/Statistics;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method isFile(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Z:
local ioe:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method listStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method delete(Lorg/apache/hadoop/fs/Path;Z)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
field closed:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFsAction(ILorg/apache/commons/net/ftp/FTPFile;)Lorg/apache/hadoop/fs/permission/FsAction;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
local userPasswdInfo:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getWorkingDirectory()Lorg/apache/hadoop/fs/Path;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;:
new *4: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FtpFs:
method <init>(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem$1:
method close()V:
local cmdCompleted:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method delete(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Z)Z:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem$1:
method close()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getHomeDirectory()Lorg/apache/hadoop/fs/Path;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method listStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method listStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
local workDir:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method markSupported()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;:
local workDir:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method delete(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Z)Z:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method connect()Lorg/apache/commons/net/ftp/FTPClient;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
local ftpFiles:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method read()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method disconnect(Lorg/apache/commons/net/ftp/FTPClient;)V:
local logoutSuccess:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method getPos()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method read([BII)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method mkdirs(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
local workDir:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method delete(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Z)Z:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method read([BII)I:
local result:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FtpFs:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method delete(Lorg/apache/hadoop/fs/Path;Z)Z:
local success:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method rename(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local to:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method markSupported()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method seek(J)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method isFile(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method exists(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method makeAbsolute(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
local isDir:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
local absolute:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method isFile(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method mkdirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method listStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;:
local fis:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPFile;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method isFile(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method rename(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method rename(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local from:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method rename(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getScheme()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
local pathName:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method mkdirs(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
local parentDir:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FtpConfigKeys:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getHomeDirectory()Lorg/apache/hadoop/fs/Path;:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method mkdirs(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method mkdirs(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
local pathName:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FtpConfigKeys:
field BLOCK_SIZE_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local client:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method close()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method delete(Lorg/apache/hadoop/fs/Path;Z)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method rename(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
local workDir:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method mkdirs(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPException:
method <init>(Ljava/lang/String;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method rename(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local absoluteDst:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getHomeDirectory()Lorg/apache/hadoop/fs/Path;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method listStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
local absolute:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFsAction(ILorg/apache/commons/net/ftp/FTPFile;)Lorg/apache/hadoop/fs/permission/FsAction;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method seekToNewSource(J)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method mkdirs(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
local client:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method isFile(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Z:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method append(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method close()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;:
local client:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method close()V:
local cmdCompleted:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getScheme()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method listStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
new *2:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
local userPasswdInfo:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
parameter 6:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method listStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPException:
method <init>(Ljava/lang/String;Ljava/lang/Throwable;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method makeAbsolute(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method seekToNewSource(J)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method disconnect(Lorg/apache/commons/net/ftp/FTPClient;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method delete(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Z)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
local client:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FtpFs:
method getUriDefaultPort()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method delete(Lorg/apache/hadoop/fs/Path;Z)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method listStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
new *1:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method mkdirs(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
local absolute:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method delete(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Z)Z:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method append(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method listStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
local fileStat:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPException:
method <init>(Ljava/lang/Throwable;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
field wrappedStream:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method listStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
local fileStats:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FtpConfigKeys:
method getServerDefaults()Lorg/apache/hadoop/fs/FsServerDefaults;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method listStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
return:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method reset()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method append(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem$1:
method <init>(Ljava/io/OutputStream;Lorg/apache/hadoop/fs/FileSystem/Statistics;)V:
parameter 0:
type:
inner-type 1,0, 1,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method rename(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local absoluteSrc:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method mkdirs(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
local created:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method rename(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getUri()Ljava/net/URI;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getHomeDirectory()Lorg/apache/hadoop/fs/Path;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method close()V:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
field stats:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FtpFs:
method <init>(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method read([BII)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPFile;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
local user:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
local host:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
local parent:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method <init>(Ljava/io/InputStream;Lorg/apache/commons/net/ftp/FTPClient;LFileSystem/Statistics;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FtpConfigKeys:
field STREAM_BUFFER_SIZE_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method mkdirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
local client:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FtpFs:
method <init>(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;:
local parent:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method mark(I)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method mkdirs(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getWorkingDirectory()Lorg/apache/hadoop/fs/Path;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPFile;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getPermissions(Lorg/apache/commons/net/ftp/FTPFile;)Lorg/apache/hadoop/fs/permission/FsPermission;:
local user:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method listStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
local fileStats:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method mkdirs(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method listStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FtpConfigKeys:
field REPLICATION_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FtpFs:
method getServerDefaults()Lorg/apache/hadoop/fs/FsServerDefaults;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method listStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getHomeDirectory()Lorg/apache/hadoop/fs/Path;:
local homeDir:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPException:
method <init>(Ljava/lang/Throwable;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPException:
method <init>(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method isFile(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Z:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPFile;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
local permission:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
local modTime:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FtpConfigKeys:
field REPLICATION_DEFAULT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
local client:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPFile;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
local blockSize:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method disconnect(Lorg/apache/commons/net/ftp/FTPClient;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method exists(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Z:
local ioe:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method connect()Lorg/apache/commons/net/ftp/FTPClient;:
local port:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method makeAbsolute(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method delete(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Z)Z:
local pathName:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FtpConfigKeys:
field FS_TRASH_INTERVAL_DEFAULT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method connect()Lorg/apache/commons/net/ftp/FTPClient;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getPermissions(Lorg/apache/commons/net/ftp/FTPFile;)Lorg/apache/hadoop/fs/permission/FsPermission;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method read()I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPException:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method mkdirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FtpConfigKeys:
method getServerDefaults()Lorg/apache/hadoop/fs/FsServerDefaults;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getHomeDirectory()Lorg/apache/hadoop/fs/Path;:
local ioe *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getHomeDirectory()Lorg/apache/hadoop/fs/Path;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method reset()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method setWorkingDirectory(Lorg/apache/hadoop/fs/Path;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPFile;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
local length:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method disconnect(Lorg/apache/commons/net/ftp/FTPClient;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
field pos:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FtpConfigKeys:
field BLOCK_SIZE_DEFAULT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method delete(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Z)Z:
local workDir:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;:
local absolute:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method read()I:
local byteRead:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
new *5: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method rename(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local renamed:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
local stats:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
parameter 4:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method read([BII)I:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem$1:
method <init>(Ljava/io/OutputStream;Lorg/apache/hadoop/fs/FileSystem/Statistics;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method read([BII)I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method <init>(Ljava/io/InputStream;Lorg/apache/commons/net/ftp/FTPClient;LFileSystem/Statistics;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
local userAndPassword:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method delete(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Z:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
new *4: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPFile;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
local accessTime:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
local fos:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method <init>(Ljava/io/InputStream;Lorg/apache/commons/net/ftp/FTPClient;LFileSystem/Statistics;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method makeAbsolute(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method delete(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method <init>(Ljava/io/InputStream;Lorg/apache/commons/net/ftp/FTPClient;LFileSystem/Statistics;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;:
local fileStat:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
local root:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method exists(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Z:
local fnfe:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPFile;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
local filePath:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method delete(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Z)Z:
local absolute:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method connect()Lorg/apache/commons/net/ftp/FTPClient;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method append(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method rename(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local parentSrc:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method mark(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getPermissions(Lorg/apache/commons/net/ftp/FTPFile;)Lorg/apache/hadoop/fs/permission/FsPermission;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFsAction(ILorg/apache/commons/net/ftp/FTPFile;)Lorg/apache/hadoop/fs/permission/FsAction;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method read()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPFile;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPException:
method <init>(Ljava/lang/String;Ljava/lang/Throwable;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method exists(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
field client:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
local ftpFile:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FtpFs:
method getServerDefaults()Lorg/apache/hadoop/fs/FsServerDefaults;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method read([BII)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method delete(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Z)Z:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method read([BII)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
local absolute:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method append(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method connect()Lorg/apache/commons/net/ftp/FTPClient;:
local reply:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method exists(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local success:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method rename(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local parentDst:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method seek(J)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method connect()Lorg/apache/commons/net/ftp/FTPClient;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem$1:
method close()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method <init>(Ljava/io/InputStream;Lorg/apache/commons/net/ftp/FTPClient;LFileSystem/Statistics;)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method rename(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local workDir:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FtpConfigKeys:
field CLIENT_WRITE_PACKET_SIZE_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method delete(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Z)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPFile;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
local ftpFiles:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getHomeDirectory()Lorg/apache/hadoop/fs/Path;:
local ioe:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method setWorkingDirectory(Lorg/apache/hadoop/fs/Path;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method listStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
local ftpFiles:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPInputStream:
method seekToNewSource(J)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FtpConfigKeys:
field BYTES_PER_CHECKSUM_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method listStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
local ftpFiles:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPException:
method <init>(Ljava/lang/String;Ljava/lang/Throwable;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method append(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPFile;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
local blockReplication:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getHomeDirectory()Lorg/apache/hadoop/fs/Path;:
local client:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method delete(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Z)Z:
local i:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
local parentPath:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method mkdirs(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FtpFs:
method getUriDefaultPort()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method mkdirs(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method connect()Lorg/apache/commons/net/ftp/FTPClient;:
local client:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method rename(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method exists(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Z:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method delete(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFileStatus(Lorg/apache/commons/net/ftp/FTPClient;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
local blockReplication:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
field DEFAULT_BLOCK_SIZE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method getFsAction(ILorg/apache/commons/net/ftp/FTPFile;)Lorg/apache/hadoop/fs/permission/FsAction;:
local action:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method connect()Lorg/apache/commons/net/ftp/FTPClient;:
local user:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPException:
field serialVersionUID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.ftp:
class FTPFileSystem:
method mkdirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
receiver:  @ostrusted.quals.OsUntrusted

