
package ostrusted.quals:
annotation @OsUntrusted:
package ostrusted.quals:
annotation @OsTrusted:


package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method finished()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
field stream:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method checkAndSkipBytesUntilNull()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method executeHeaderState()V:
local doneWithComment:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibDeflater:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method processBasicHeader()V:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor$CompressionHeader:
field DEFAULT_HEADER:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method getCompressionStrategy(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionStrategy:
method <init>(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor$CompressionHeader:
field windowBits:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
field windowBits:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
field trailerBytesRead:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method setInput([BII)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method checkAndSkipBytes(I)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor$GzipStateLabel:
field HEADER_EXTRA_FIELD:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor$GzipStateLabel:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method decompress([BII)I:
local dfe:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method getZlibDecompressorType(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
field userBufLen:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method construct(Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionHeader;I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionHeader:
method <init>(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method compress([BII)I:
local n:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor$GzipStateLabel:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
field header:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibDeflater:
method reinit(Lorg/apache/hadoop/conf/Configuration;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method readUIntLE([BI)J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method setInput([BII)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method decompress([BII)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method reset(J)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method setInput([BII)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method setInput([BII)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method compress([BII)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method <init>(Lorg/apache/hadoop/io/compress/zlib/ZlibDecompressor$CompressionHeader;I)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionHeader:
field GZIP_FORMAT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibDeflater:
method compress([BII)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method setDictionary([BII)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method setInputFromSavedData()V:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
field userBufOff:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method needsInput()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method getBytesWritten(J)J:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method setDictionary([BII)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method reset()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method executeHeaderState()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method decompress([BII)I:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method getRemaining(J)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
field DEFAULT_DIRECT_BUFFER_SIZE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method finished()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method setInput([BII)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method getCompressionLevel(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;:
insert-annotation Block.statement 0, Return.expression, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method setDictionary(J[BII)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
field userBuf:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
field userBufLen:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method setDictionary(J[BII)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionHeader:
method windowBits()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
field GZIP_MAGIC_ID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor$CompressionHeader:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor$GzipStateLabel:
field TRAILER_SIZE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method readUShortLE([BI)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method processBasicHeader()V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibInflater:
method decompress([BII)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibDeflater:
method compress([BII)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibDeflater:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method isNativeZlibLoaded(Lorg/apache/hadoop/conf/Configuration;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
field numExtraFieldBytesRemaining:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method finished()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
field userBufOff:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionLevel:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method compress([BII)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
field hasExtraField:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionStrategy:
method compressionStrategy()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method processBasicHeader()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method readUIntLE([BI)J:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method setInput([BII)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method executeHeaderState()V:
local headerCRC:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method copyBytesToLocal(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method processBasicHeader()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method setDictionary(J[BII)V:
parameter 1:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method <init>(Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionHeader;I)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibInflater:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method getZlibDecompressor(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/Decompressor;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method <init>(Lorg/apache/hadoop/io/compress/zlib/ZlibDecompressor$CompressionHeader;I)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method checkAndSkipBytesUntilNull()Z:
local hitNull:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method processBasicHeader()V:
local flg:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method getLibraryName()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor$CompressionHeader:
method windowBits()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method getBytesWritten(J)J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibDeflater:
method compress([BII)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method init(III)J:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method compress([BII)I:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method getBytesRead()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method setDictionary([BII)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method setDictionary([BII)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
field GZIP_FLAGBIT_COMMENT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionLevel:
field compressionLevel:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
field strategy:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method inflateBytesDirect()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionLevel:
field NO_COMPRESSION:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method setDictionary(J[BII)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionHeader:
method windowBits()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method setDictionary(J[BII)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method readUByte([BI)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method needsDictionary()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method end()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method init(III)J:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibInflater:
method decompress([BII)I:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method readUIntLE([BI)J:
typecast *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method readUShortLE([BI)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method setCompressionLevel(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;)V:
insert-annotation Block.statement 0, ExpressionStatement.expression, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method setDictionary([BII)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method isNativeZlibLoaded()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method setInput([BII)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method readUIntLE([BI)J:
typecast *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method executeHeaderState()V:
local n *3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibInflater:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibDeflater:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionStrategy:
method compressionStrategy()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method checkStream()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method finished()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method getZlibDecompressor(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/Decompressor;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
field headerBytesRead:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method checkStream()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
field userBufLen:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method setDictionary([BII)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
field nativeZlibLoaded:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
field compressedDirectBufOff:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method getCompressionLevel(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method decompress([BII)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method <init>(Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionHeader;I)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionStrategy:
field FIXED:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method readUByte([BI)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method decompress([BII)I:
local n:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method setDictionary(J[BII)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method setInput([BII)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibInflater:
method <init>(Z)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method construct(Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionHeader;I)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method isNativeZlibLoaded()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method finished()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method readUByte([BI)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor$CompressionHeader:
method <init>(I)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method executeTrailerState()V:
local n:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method setDictionary([BII)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method end(J)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
field uncompressedDirectBufLen:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method setDictionary(J[BII)V:
parameter 1:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor$CompressionHeader:
method <init>(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method decompress([BII)I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method reinit(Lorg/apache/hadoop/conf/Configuration;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
field finished:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method getZlibCompressor(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/Compressor;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibInflater:
method decompress([BII)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method executeHeaderState()V:
local n *2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method readUIntLE([BI)J:
typecast *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method executeTrailerState()V:
local n *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method readUIntLE([BI)J:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method getBytesWritten(J)J:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method isNativeZlibLoaded(Lorg/apache/hadoop/conf/Configuration;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
field clazz:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method init(I)J:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method decompress([BII)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method getZlibDecompressorType(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;:
return:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method getBytesRead(J)J:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method needsInput()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method readUByte([BI)I:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method decompress([BII)I:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
field stream:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibDeflater:
method <init>(IZ)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
field localBuf:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
field finished:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method inflateBytesDirect()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibDeflater:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method setInput([BII)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibInflater:
method decompress([BII)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
field nativeZlibLoaded:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
field compressedDirectBuf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibDeflater:
method <init>(IZ)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method getZlibDecompressor(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/Decompressor;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method setInput([BII)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
field uncompressedDirectBuf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor$CompressionHeader:
field GZIP_FORMAT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method checkStream()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor$GzipStateLabel:
field HEADER_FILENAME:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method getRemaining(J)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionHeader:
method <init>(I)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibDeflater:
method reinit(Lorg/apache/hadoop/conf/Configuration;)V:
local strategy:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
field hasComment:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
field DEFAULT_DIRECT_BUFFER_SIZE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method setDictionary([BII)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method decompress([BII)I:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
staticinit *0:
local t:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method getBytesRead()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method setInput([BII)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method checkAndCopyBytesToLocal(I)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method needsDictionary()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
field compressedDirectBufLen:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method needsDictionary()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
field localBufOff:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method decompress([BII)I:
typecast *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method getBytesRead(J)J:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibInflater:
method decompress([BII)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method <init>(Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionHeader;I)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor$CompressionHeader:
field NO_HEADER:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibDeflater:
method <init>(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method getCompressionStrategy(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method setInputFromSavedData()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
field hasHeaderCRC:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
field clazz:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method readUShortLE([BI)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
field localBuf:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method setInput([BII)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method getRemaining()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method executeTrailerState()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionHeader:
field windowBits:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor$GzipStateLabel:
field DEFLATE_STREAM:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
field localBuf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibDeflater:
method compress([BII)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method setDictionary([BII)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method needsInput()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method setDictionary([BII)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
field GZIP_FLAGBIT_HEADER_CRC:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method readUShortLE([BI)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method readUIntLE([BI)J:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method reset()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method setCompressionStrategy(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;)V:
insert-annotation Block.statement 0, ExpressionStatement.expression, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method getRemaining()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method <init>(Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionHeader;I)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method setCompressionStrategy(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionStrategy:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method getZlibDecompressorType(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method readUIntLE([BI)J:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method decompress([BII)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionStrategy:
field DEFAULT_STRATEGY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method setInput([BII)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method getCompressionStrategy(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;:
insert-annotation Block.statement 0, Return.expression, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method setInput([BII)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method <init>(Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionHeader;I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
field localBuf:
new *0:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method checkAndCopyBytesToLocal(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method decompress([BII)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method decompress([BII)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibDeflater:
method reinit(Lorg/apache/hadoop/conf/Configuration;)V:
local ill:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method copyBytesToLocal(I)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionLevel:
method <init>(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method decompress([BII)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor$GzipStateLabel:
field HEADER_CRC:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method finalize()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
field GZIP_FLAGBIT_EXTRA_FIELD:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method <init>(Lorg/apache/hadoop/conf/Configuration;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
field inflater:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method <init>(Lorg/apache/hadoop/io/compress/zlib/ZlibDecompressor$CompressionHeader;I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method <init>(Lorg/apache/hadoop/conf/Configuration;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
field directBufferSize:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method compress([BII)I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method readUByte([BI)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method setDictionary([BII)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method setInput([BII)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method setInput([BII)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method setDictionary([BII)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method finished()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method getCompressionLevel(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method setDictionary([BII)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
field userBuf:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method compress([BII)I:
typecast *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method needsDictionary()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor$GzipStateLabel:
field FINISHED:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
field inflater:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
field crc:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
field userBuf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method executeHeaderState()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionLevel:
field DEFAULT_COMPRESSION:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method getZlibCompressor(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/Compressor;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
field userBufOff:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibInflater:
method decompress([BII)I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method getZlibCompressorType(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;:
return:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method construct(Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionHeader;I)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method getBytesRead()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionStrategy:
field compressionStrategy:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibInflater:
method decompress([BII)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method decompress([BII)I:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method getBytesRead(J)J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
field crc:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method setInput([BII)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibInflater:
method decompress([BII)I:
local dfe:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionStrategy:
field FILTERED:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method getBytesWritten()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor$CompressionHeader:
method windowBits()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method construct(Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionHeader;I)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method compress([BII)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method setInput([BII)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
field uncompressedDirectBuf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method getZlibCompressor(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/Compressor;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method compress([BII)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionLevel:
field BEST_COMPRESSION:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
field userBuf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method end(J)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method checkAndSkipBytesUntilNull()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibInflater:
method <init>(Z)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method compress([BII)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method getBytesRead()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor$CompressionHeader:
field AUTODETECT_GZIP_ZLIB:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method end()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionStrategy:
field HUFFMAN_ONLY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method setCompressionLevel(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibDeflater:
method reinit(Lorg/apache/hadoop/conf/Configuration;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionHeader:
field DEFAULT_HEADER:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionLevel:
field BEST_SPEED:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
field compressedDirectBuf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method executeTrailerState()V:
local inputSize:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibDeflater:
method <init>(I)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor$GzipStateLabel:
field HEADER_COMMENT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method end()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method executeHeaderState()V:
local doneWithFilename:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method reset(J)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method getBytesRead()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
field userBuf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method setDictionary([BII)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
field GZIP_FLAGBIT_FILENAME:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method compress([BII)I:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method setDictionary([BII)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method decompress([BII)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method setDictionary(J[BII)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method executeTrailerState()V:
local streamCRC:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method setInputFromSavedData()V:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method setCompressionLevel(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method init(III)J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionHeader:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method getBytesWritten()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method setInput([BII)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method getBytesRead()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method executeTrailerState()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method readUIntLE([BI)J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor$GzipStateLabel:
field HEADER_BASIC:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
field needDict:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method checkAndSkipBytes(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method deflateBytesDirect()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method checkStream()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method getBytesWritten()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method setInputFromSavedData()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method reinit(Lorg/apache/hadoop/conf/Configuration;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionLevel:
method compressionLevel()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method decompress([BII)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method decompress([BII)I:
local bytesRemaining:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method setDictionary(J[BII)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method getZlibCompressorType(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;:
return:
inner-type 3,0, 2,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
field userBuf:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method getBytesWritten(J)J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method setCompressionStrategy(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method getBytesRead(J)J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method readUShortLE([BI)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibDeflater:
method compress([BII)I:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method setDictionary([BII)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method setDictionary(J[BII)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method setInput([BII)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method decompress([BII)I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
field level:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionLevel:
method compressionLevel()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method getZlibCompressorType(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibDeflater:
method <init>(IZ)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method getZlibCompressorType(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
field directBufferSize:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method readUByte([BI)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method getZlibDecompressor(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/Decompressor;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
field finish:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method setDictionary([BII)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionStrategy:
field RLE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method needsInput()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method decompress([BII)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionHeader:
field NO_HEADER:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method getLibraryName()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
staticinit *0:
local t:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method executeHeaderState()V:
local n:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibDeflater:
method compress([BII)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
field keepUncompressedBuf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method setInput([BII)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method finish()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
field hasFilename:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor$GzipStateLabel:
field TRAILER_CRC:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
field GZIP_FLAGBITS_RESERVED:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method getZlibCompressor(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/io/compress/Compressor;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method compress([BII)I:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method getRemaining()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method setInputFromSavedData()V:
local len:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method needsInput()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
field nativeZlibLoaded:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method setDictionary([BII)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method init(I)J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method getRemaining()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method setDictionary([BII)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method getBytesWritten()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method construct(Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionLevel;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionStrategy;Lorg/apache/hadoop/io/compress/zlib/ZlibCompressor$CompressionHeader;I)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
field state:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInZlibInflater:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method executeTrailerState()V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method deflateBytesDirect()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method reset()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionLevel:
method <init>(I)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
field uncompressedDirectBufOff:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor:
method init(III)J:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibDecompressor:
method needsInput()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibCompressor$CompressionStrategy:
method <init>(I)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
field GZIP_DEFLATE_METHOD:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class ZlibFactory:
method getZlibDecompressorType(Lorg/apache/hadoop/conf/Configuration;)Ljava/lang/Class;:
return:
inner-type 3,0, 2,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method executeHeaderState()V:
local n *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.compress.zlib:
class BuiltInGzipDecompressor:
method decompress([BII)I:
local numAvailBytes:
type: @ostrusted.quals.OsUntrusted

