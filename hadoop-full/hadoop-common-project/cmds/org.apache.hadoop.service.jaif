
package ostrusted.quals:
annotation @OsUntrusted:
package ostrusted.quals:
annotation @OsTrusted:


package org.apache.hadoop.service:
class CompositeService:
field STOP_ONLY_STARTED_SERVICES:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations$ServiceListeners:
field listeners:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method removeBlocker(Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method getStartTime()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method start()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
method isValidStateTransition(LService/STATE;LService/STATE;)Z:
local row:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method isInState(Lorg/apache/hadoop/service/Service$STATE;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method putBlocker(Ljava/lang/String;Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations$ServiceListeners:
method notifyListeners(Lorg/apache/hadoop/service/Service;)V:
local callbacks:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method recordLifecycleEvent()V:
local event:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method registerServiceListener(Lorg/apache/hadoop/service/ServiceStateChangeListener;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method setConfig(Lorg/apache/hadoop/conf/Configuration;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method removeService(Lorg/apache/hadoop/service/Service;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService$CompositeServiceShutdownHook:
method <init>(Lorg/apache/hadoop/service/CompositeService;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
method <init>(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateException:
field serialVersionUID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateException:
method convert(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
field stateModel:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method toString()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method serviceInit(Lorg/apache/hadoop/conf/Configuration;)V:
local service:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service$STATE:
method getValue()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method recordLifecycleEvent()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class LifecycleEvent:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method init(Lorg/apache/hadoop/conf/Configuration;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class LifecycleEvent:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method start()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method stop(IZ)V:
local ex:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
field blockerMap:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations$ServiceListeners:
method notifyListeners(Lorg/apache/hadoop/service/Service;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method getServices()Ljava/util/List;:
return:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
method <init>(Ljava/lang/String;LService/STATE;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method getStartTime()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service$STATE:
method <init>(ILjava/lang/String;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations$ServiceListeners:
field listeners:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
field statemap:
type:
inner-type 0,0, 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method <init>(Ljava/lang/String;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method getBlockers()Ljava/util/Map;:
return:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations$ServiceListeners:
method add(Lorg/apache/hadoop/service/ServiceStateChangeListener;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method waitForServiceToStop(J)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method getLifecycleHistory()Ljava/util/List;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method addIfService(Ljava/lang/Object;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class LifecycleEvent:
field state:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method getFailureCause()Ljava/lang/Throwable;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
field failureState:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method stop(IZ)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
method ensureCurrentState(LService/STATE;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
method isInState(LService/STATE;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations$ServiceListeners:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
field stateChangeLock:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method getFailureState()Lorg/apache/hadoop/service/Service$STATE;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method unregisterGlobalListener(Lorg/apache/hadoop/service/ServiceStateChangeListener;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method stop(IZ)V:
local service:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateException:
method <init>(Ljava/lang/String;Ljava/lang/Throwable;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method waitForServiceToStop(J)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations$ServiceListeners:
method notifyListeners(Lorg/apache/hadoop/service/Service;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method serviceInit(Lorg/apache/hadoop/conf/Configuration;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateException:
method convert(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method addIfService(Ljava/lang/Object;)Z:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
field serviceList:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations:
method stopQuietly(Lorg/apache/commons/logging/Log;Lorg/apache/hadoop/service/Service;)Ljava/lang/Exception;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
method checkStateTransition(Ljava/lang/String;LService/STATE;LService/STATE;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method stop()V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method getLifecycleHistory()Ljava/util/List;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method waitForServiceToStop(J)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method serviceInit(Lorg/apache/hadoop/conf/Configuration;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method close()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method getBlockers()Ljava/util/Map;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateException:
method <init>(Ljava/lang/String;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method getFailureState()Lorg/apache/hadoop/service/Service$STATE;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService$CompositeServiceShutdownHook:
method run()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method serviceStop()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service$STATE:
method getValue()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class LifecycleEvent:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations$ServiceListeners:
method notifyListeners(Lorg/apache/hadoop/service/Service;)V:
local l:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
method enterState(LService/STATE;)LService/STATE;:
local oldState:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method getStartTime()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method getStartTime()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method stop(IZ)V:
local state:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
method isInState(LService/STATE;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method getServiceState()Lorg/apache/hadoop/service/Service$STATE;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
field name:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateChangeListener:
method stateChanged(Lorg/apache/hadoop/service/Service;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method removeService(Lorg/apache/hadoop/service/Service;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method stop()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method registerServiceListener(Lorg/apache/hadoop/service/ServiceStateChangeListener;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method getBlockers()Ljava/util/Map;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations$ServiceListeners:
method remove(Lorg/apache/hadoop/service/ServiceStateChangeListener;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method getServices()Ljava/util/List;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method getBlockers()Ljava/util/Map;:
local map:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations$ServiceListeners:
method remove(Lorg/apache/hadoop/service/ServiceStateChangeListener;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
field lifecycleHistory:
new *0:
inner-type 3,0: @ostrusted.quals.OsTrusted
package org.apache.hadoop.service:
class CompositeService:
method stop(IZ)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method getServiceState()Lorg/apache/hadoop/service/Service$STATE;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
field statemap:
new *4: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method waitForServiceToStop(J)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
field statemap:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method registerGlobalListener(Lorg/apache/hadoop/service/ServiceStateChangeListener;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class LifecycleEvent:
field time:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method unregisterServiceListener(Lorg/apache/hadoop/service/ServiceStateChangeListener;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
field statemap:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method getBlockers()Ljava/util/Map;:
local map:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method notifyListeners()V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method serviceInit(Lorg/apache/hadoop/conf/Configuration;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method getBlockers()Ljava/util/Map;:
return:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method getName()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method serviceStart()V:
local services:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method waitForServiceToStop(J)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method serviceStart()V:
local service:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class LoggingStateChangeListener:
method <init>(Lorg/apache/commons/logging/Log;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
field serviceList:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method getBlockers()Ljava/util/Map;:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class LoggingStateChangeListener:
method stateChanged(Lorg/apache/hadoop/service/Service;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method serviceInit(Lorg/apache/hadoop/conf/Configuration;)V:
local services:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method getFailureState()Lorg/apache/hadoop/service/Service$STATE;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method waitForServiceToStop(J)Z:
local completed:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
method toString()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
field blockerMap:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations$ServiceListeners:
method notifyListeners(Lorg/apache/hadoop/service/Service;)V:
new *0:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service$STATE:
field statename:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations$ServiceListeners:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class LifecycleEvent:
field serialVersionUID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService$CompositeServiceShutdownHook:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method getConfig()Lorg/apache/hadoop/conf/Configuration;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService$CompositeServiceShutdownHook:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateException:
method convert(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service$STATE:
field STARTED:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method unregisterServiceListener(Lorg/apache/hadoop/service/ServiceStateChangeListener;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method stop(IZ)V:
local services:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method isInState(Lorg/apache/hadoop/service/Service$STATE;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method unregisterServiceListener(Lorg/apache/hadoop/service/ServiceStateChangeListener;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method addIfService(Ljava/lang/Object;)Z:
instanceof *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method stop(IZ)V:
local firstException:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method init(Lorg/apache/hadoop/conf/Configuration;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class LoggingStateChangeListener:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method toString()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
method isInState(LService/STATE;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method getName()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
method isValidStateTransition(LService/STATE;LService/STATE;)Z:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class LoggingStateChangeListener:
field log:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class LoggingStateChangeListener:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
field serviceList:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method start()V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateException:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method init(Lorg/apache/hadoop/conf/Configuration;)V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method serviceStop()V:
local numOfServicesToStop:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class LoggingStateChangeListener:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method stop(IZ)V:
local i:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations$ServiceListeners:
method notifyListeners(Lorg/apache/hadoop/service/Service;)V:
insert-annotation Block.statement 1, Synchronized.block, Block.statement 0, ExpressionStatement.expression, Assignment.expression, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateException:
method <init>(Ljava/lang/String;Ljava/lang/Throwable;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations$ServiceListeners:
method notifyListeners(Lorg/apache/hadoop/service/Service;)V:
local callbacks:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
field globalListeners:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations:
method stop(Lorg/apache/hadoop/service/Service;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method putBlocker(Ljava/lang/String;Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method getConfig()Lorg/apache/hadoop/conf/Configuration;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method addService(Lorg/apache/hadoop/service/Service;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
field blockerMap:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method close()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateException:
method convert(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/lang/RuntimeException;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method isInState(LService/STATE;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
method isValidStateTransition(LService/STATE;LService/STATE;)Z:
local row:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
field statemap:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class LoggingStateChangeListener:
method <init>(Lorg/apache/commons/logging/Log;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method init(Lorg/apache/hadoop/conf/Configuration;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
method checkStateTransition(Ljava/lang/String;LService/STATE;LService/STATE;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method isInState(LService/STATE;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateException:
method convert(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/lang/RuntimeException;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateChangeListener:
method stateChanged(Lorg/apache/hadoop/service/Service;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
method getState()LService/STATE;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateException:
method convert(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/lang/RuntimeException;:
instanceof *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method isInState(LService/STATE;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations:
method stopQuietly(Lorg/apache/hadoop/service/Service;)Ljava/lang/Exception;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method serviceStop()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
field lifecycleHistory:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations$ServiceListeners:
method add(Lorg/apache/hadoop/service/ServiceStateChangeListener;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service$STATE:
field value:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method unregisterServiceListener(Lorg/apache/hadoop/service/ServiceStateChangeListener;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method enterState(Lorg/apache/hadoop/service/Service$STATE;)Lorg/apache/hadoop/service/Service$STATE;:
local oldState:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method getFailureCause()Ljava/lang/Throwable;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method enterState(Lorg/apache/hadoop/service/Service$STATE;)Lorg/apache/hadoop/service/Service$STATE;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service$STATE:
method <init>(ILjava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method getBlockers()Ljava/util/Map;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method getLifecycleHistory()Ljava/util/List;:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service$STATE:
method <init>(ILjava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method enterState(Lorg/apache/hadoop/service/Service$STATE;)Lorg/apache/hadoop/service/Service$STATE;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
method enterState(LService/STATE;)LService/STATE;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class LoggingStateChangeListener:
method stateChanged(Lorg/apache/hadoop/service/Service;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateException:
method convert(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/lang/RuntimeException;:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method addIfService(Ljava/lang/Object;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method serviceInit(Lorg/apache/hadoop/conf/Configuration;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method getFailureCause()Ljava/lang/Throwable;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method init(Lorg/apache/hadoop/conf/Configuration;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
field state:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service$STATE:
method toString()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations:
method stopQuietly(Lorg/apache/hadoop/service/Service;)Ljava/lang/Exception;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
method <init>(Ljava/lang/String;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
field name:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method setConfig(Lorg/apache/hadoop/conf/Configuration;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service$STATE:
field STOPPED:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method getLifecycleHistory()Ljava/util/List;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
field failureCause:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
method checkStateTransition(Ljava/lang/String;LService/STATE;LService/STATE;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
method toString()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations:
method stopQuietly(Lorg/apache/commons/logging/Log;Lorg/apache/hadoop/service/Service;)Ljava/lang/Exception;:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService$CompositeServiceShutdownHook:
field compositeService:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateException:
method <init>(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method putBlocker(Ljava/lang/String;Ljava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method <init>(Ljava/lang/String;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method getBlockers()Ljava/util/Map;:
return:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method getConfig()Lorg/apache/hadoop/conf/Configuration;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method getBlockers()Ljava/util/Map;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method getLifecycleHistory()Ljava/util/List;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method noteFailure(Ljava/lang/Exception;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
method enterState(LService/STATE;)LService/STATE;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method removeService(Lorg/apache/hadoop/service/Service;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations$ServiceListeners:
method notifyListeners(Lorg/apache/hadoop/service/Service;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method getLifecycleHistory()Ljava/util/List;:
return:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
field startTime:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method registerServiceListener(Lorg/apache/hadoop/service/ServiceStateChangeListener;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method getBlockers()Ljava/util/Map;:
local map:
type:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations$ServiceListeners:
field listeners:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
field globalListeners:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method removeBlocker(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations$ServiceListeners:
method reset()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations:
method stopQuietly(Lorg/apache/commons/logging/Log;Lorg/apache/hadoop/service/Service;)Ljava/lang/Exception;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method serviceInit(Lorg/apache/hadoop/conf/Configuration;)V:
local services:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations$ServiceListeners:
method remove(Lorg/apache/hadoop/service/ServiceStateChangeListener;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method waitForServiceToStop(J)Z:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
field terminationNotification:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service$STATE:
method toString()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method <init>(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method getServiceState()Lorg/apache/hadoop/service/Service$STATE;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method getBlockers()Ljava/util/Map;:
return:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateException:
method <init>(Ljava/lang/Throwable;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method getServices()Ljava/util/List;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method getName()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
method checkStateTransition(Ljava/lang/String;LService/STATE;LService/STATE;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService$CompositeServiceShutdownHook:
method <init>(Lorg/apache/hadoop/service/CompositeService;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method getServices()Ljava/util/List;:
insert-annotation Block.statement 0, Synchronized.block, Block.statement 0, Return.expression, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateException:
method convert(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/lang/RuntimeException;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
field config:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
method isValidStateTransition(LService/STATE;LService/STATE;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method stop()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method enterState(Lorg/apache/hadoop/service/Service$STATE;)Lorg/apache/hadoop/service/Service$STATE;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
field listeners:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method <init>(Ljava/lang/String;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
field lifecycleHistory:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method <init>(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method getBlockers()Ljava/util/Map;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method unregisterGlobalListener(Lorg/apache/hadoop/service/ServiceStateChangeListener;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method getName()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
field listeners:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateException:
method convert(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;:
instanceof *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method init(Lorg/apache/hadoop/conf/Configuration;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
field statemap:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method isInState(Lorg/apache/hadoop/service/Service$STATE;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
field blockerMap:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method waitForServiceToStop(J)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateException:
method <init>(Ljava/lang/String;Ljava/lang/Throwable;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method addIfService(Ljava/lang/Object;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
field blockerMap:
type:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateException:
method convert(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/lang/RuntimeException;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
method enterState(LService/STATE;)LService/STATE;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateException:
method <init>(Ljava/lang/Throwable;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
field serviceList:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method getLifecycleHistory()Ljava/util/List;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
method <init>(Ljava/lang/String;LService/STATE;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
method getState()LService/STATE;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
field terminationNotification:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
method <init>(Ljava/lang/String;LService/STATE;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method notifyListeners()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
field lifecycleHistory:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method getServiceState()Lorg/apache/hadoop/service/Service$STATE;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations:
method stopQuietly(Lorg/apache/commons/logging/Log;Lorg/apache/hadoop/service/Service;)Ljava/lang/Exception;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
field statemap:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method serviceStart()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method serviceStart()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method getLifecycleHistory()Ljava/util/List;:
return:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method registerServiceListener(Lorg/apache/hadoop/service/ServiceStateChangeListener;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
method isValidStateTransition(LService/STATE;LService/STATE;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method getFailureState()Lorg/apache/hadoop/service/Service$STATE;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method getConfig()Lorg/apache/hadoop/conf/Configuration;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method serviceStart()V:
local services:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
field stateChangeLock:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service$STATE:
field NOTINITED:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service$STATE:
field INITED:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
field statemap:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method stop(IZ)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method noteFailure(Ljava/lang/Exception;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateException:
method convert(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method recordLifecycleEvent()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
method ensureCurrentState(LService/STATE;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method addService(Lorg/apache/hadoop/service/Service;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service$STATE:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class Service:
method getFailureCause()Ljava/lang/Throwable;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
method getBlockers()Ljava/util/Map;:
new *0:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class AbstractService:
field blockerMap:
new *0:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class CompositeService:
method stop(IZ)V:
local services:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class LoggingStateChangeListener:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceStateModel:
method ensureCurrentState(LService/STATE;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.service:
class ServiceOperations$ServiceListeners:
field listeners:
type: @ostrusted.quals.OsUntrusted

