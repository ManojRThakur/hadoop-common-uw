
package ostrusted.quals:
annotation @OsUntrusted:
package ostrusted.quals:
annotation @OsTrusted:


package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method getCompressor()Lorg/apache/hadoop/io/compress/Compressor;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$DataIndex:
method getDefaultCompressionAlgorithm()Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
field valueBuffer:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method seekTo(Lorg/apache/hadoop/io/file/tfile/RawComparable;Z)Z:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method isLastChunk()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method read([BII)I:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class ByteArray:
field buffer:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
method getChunkBufferSize(Lorg/apache/hadoop/conf/Configuration;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$BlockRegion:
method <init>(JJJ)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method append([BII[BII)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$DataIndex:
method <init>(Ljava/io/DataInput;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method addEntry(Lorg/apache/hadoop/io/file/tfile/TFile$TFileIndexEntry;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
field blkInProgress:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method <init>(Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/conf/Configuration;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$MemcmpRawComparator:
method compare(Ljava/lang/Object;Ljava/lang/Object;)I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
field AB_MAGIC_BCFILE:
typecast *7: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$MetaBlockRegister:
method register(JJJ)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method append([B[B)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareDataBlock()Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method compareTo(IJ)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndex:
method addEntry(Lorg/apache/hadoop/io/file/tfile/BCFile$MetaIndexEntry;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
method getFSOutputBufferSize(Lorg/apache/hadoop/conf/Configuration;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method <init>(Lorg/apache/hadoop/fs/FSDataOutputStream;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$RBlockState:
method getBlockRegion()Lorg/apache/hadoop/io/file/tfile/BCFile$BlockRegion;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer$KeyRegister:
method close()V:
local lastKey:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method createDecompressionStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;I)Ljava/io/InputStream;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper$Align:
method format(Ljava/lang/String;ILorg/apache/hadoop/io/file/tfile/TFileDumper$Align;)Ljava/lang/String;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getValue([BI)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method append([BII[BII)V:
local dosValue:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(ILjava/io/DataInput;Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
new *8: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method compareKeys(Lorg/apache/hadoop/io/file/tfile/RawComparable;Lorg/apache/hadoop/io/file/tfile/RawComparable;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
implements 0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;)I:
bound 0 & 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
method main([Ljava/lang/String;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method lowerBound(Lorg/apache/hadoop/io/file/tfile/RawComparable;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getValue([BI)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method equals(Ljava/lang/Object;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
method <init>([BIIJ)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method createCompressionStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;I)Ljava/io/OutputStream;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method read([B)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getMetaBlock(Ljava/lang/String;)Ljava/io/DataInputStream;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndex:
method write(Ljava/io/DataOutput;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local b:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getComparator()Ljava/util/Comparator;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$BlockRegister:
method register(JJJ)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
field COMPRESSION_NONE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method get(Lorg/apache/hadoop/io/BytesWritable;Lorg/apache/hadoop/io/BytesWritable;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class SimpleBufferedOutputStream:
method write([BII)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method advance()Z:
local curBid:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method append([B[B)V:
parameter 1:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method close()V:
local appender:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
typeparam 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;)I:
local midVal:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method getRecordCount()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method getMetaBlock(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/BCFile$Reader$BlockReader;:
local imeBCIndex:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$BlockReader:
method getRawSize()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method createDecompressionStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;I)Ljava/io/InputStream;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getBlockContainsKey(Lorg/apache/hadoop/io/file/tfile/RawComparable;Z)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$MemcmpRawComparator:
method compare(Ljava/lang/Object;Ljava/lang/Object;)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method read([B)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local rawSize:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class RawComparable:
method offset()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getEntryComparator()Ljava/util/Comparator;:
return:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class SimpleBufferedOutputStream:
method write([BII)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class ByteArray:
method <init>(Lorg/apache/hadoop/io/BytesWritable;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local e *4:
type:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method writeKey(Ljava/io/OutputStream;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method close()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getValueStream()Ljava/io/DataInputStream;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method isSupported()Z:
local extClazz:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local blkLen:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getKey([BI)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getBlockContainsKey(Lorg/apache/hadoop/io/file/tfile/RawComparable;Z)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method <init>(Lorg/apache/hadoop/io/file/tfile/TFile$Reader;Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method createCompressionStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;I)Ljava/io/OutputStream;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method getEntry(I)Lorg/apache/hadoop/io/file/tfile/TFile$TFileIndexEntry;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression:
method getSupportedAlgorithms()[Ljava/lang/String;:
local algos:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local metaBlkEntrySet:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method read([BII)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method getDefaultCompressionName()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class RawComparable:
method size()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$BlockAppender:
method close()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$WBlockState:
method <init>(Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;Lorg/apache/hadoop/fs/FSDataOutputStream;Lorg/apache/hadoop/io/BytesWritable;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method isSupported()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
field keyDataInputStream:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method upperBound([BII)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$DataIndex:
method <init>(Ljava/io/DataInput;)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method getBCFileVersion()Lorg/apache/hadoop/io/file/tfile/Utils$Version;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$SingleChunkEncoder:
method write(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method setFirstKey([BII)V:
new *1:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$MetaBlockRegister:
method register(JJJ)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$Scalar:
method magnitude()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method upperBound([BII)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeVLong(Ljava/io/DataOutput;J)V:
typecast *6: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(ILjava/io/DataInput;Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method end()Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
field AB_MAGIC_BCFILE:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndex:
method <init>(Ljava/io/DataInput;)V:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
local ret:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method <init>(Ljava/lang/String;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getValue([BI)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method createCompressionStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;I)Ljava/io/OutputStream;:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method <init>(Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/conf/Configuration;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
field blkReader:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method isSorted()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
field out:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class SimpleBufferedOutputStream:
method <init>(Ljava/io/OutputStream;[B)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeVLong(Ljava/io/DataOutput;J)V:
typecast *12: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$BlockRegion:
method getCompressedSize()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method entry()Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner$Entry;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method prepareMetaBlock(Ljava/lang/String;Ljava/lang/String;)Ljava/io/DataOutputStream;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method readString(Ljava/io/DataInput;)Ljava/lang/String;:
local buffer:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
implements 0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method rewind()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
method size()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getKeyBuffer()[B:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method inBlockAdvance(Lorg/apache/hadoop/io/file/tfile/RawComparable;Z)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class ByteArray:
method <init>([BII)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getKeyNear(J)Lorg/apache/hadoop/io/file/tfile/RawComparable;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$BytesComparator:
method compare([BII[BII)I:
parameter 3:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method seekTo([BII)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
field vlen:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer$State:
field END_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method lowerBound([BII)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method close()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
bound 0 & 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScannerByKey([B[B)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getValue(Lorg/apache/hadoop/io/BytesWritable;)J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$1:
method compare(LScanner/Entry;LScanner/Entry;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method createCompressionStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;I)Ljava/io/OutputStream;:
local bos1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method createCompressionStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;I)Ljava/io/OutputStream;:
local cos:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$MemcmpRawComparator:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
field AB_MAGIC_BCFILE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer$ValueRegister:
method <init>(Ljava/io/OutputStream;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method lowerBound([BII)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method makeComparator(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method writeBufData([BII)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method compareKeys(Lorg/apache/hadoop/io/file/tfile/RawComparable;Lorg/apache/hadoop/io/file/tfile/RawComparable;)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
field DATA_IBUF_SIZE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer$KeyRegister:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getBlockContainsKey(Lorg/apache/hadoop/io/file/tfile/RawComparable;Z)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(ILjava/io/DataInput;Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
new *6:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getComparatorName()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$FinishOnFlushCompressionStream:
method <init>(Lorg/apache/hadoop/io/compress/CompressionOutputStream;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;)I:
parameter 0:
type:
inner-type 3,0, 2,0, 3,0, 2,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method getAPIVersion()Lorg/apache/hadoop/io/file/tfile/Utils$Version;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method <init>(Lorg/apache/hadoop/fs/FSDataOutputStream;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method prepareAppendValue(I)Ljava/io/DataOutputStream;:
new *5: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method getRecordNumByLocation(LReader/Location;)J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
method write(Ljava/io/DataOutput;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getValue([BI)I:
local n:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$DataBlockRegister:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method createCompressionStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;I)Ljava/io/OutputStream;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getEntryComparator()Ljava/util/Comparator;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method getCodec()Lorg/apache/hadoop/io/compress/CompressionCodec;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class SimpleBufferedOutputStream:
method size()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer$KeyRegister:
method close()V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScannerByKey([B[B)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method createDecompressionStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;I)Ljava/io/InputStream;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method <init>(Ljava/io/DataInputStream;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method prepareMetaBlock(Ljava/lang/String;Ljava/lang/String;)Ljava/io/DataOutputStream;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$ScalarComparator:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScanner(Lorg/apache/hadoop/io/file/tfile/RawComparable;Lorg/apache/hadoop/io/file/tfile/RawComparable;)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class ByteArray:
method size()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$MetaBlockRegister:
method <init>(Ljava/lang/String;Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method <init>(Lorg/apache/hadoop/fs/FSDataInputStream;JJ)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$SingleChunkEncoder:
field out:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndexEntry:
method getRegion()Lorg/apache/hadoop/io/file/tfile/BCFile$BlockRegion;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method checkTFileDataIndex()V:
local brIndex:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
field AB_MAGIC_BCFILE:
typecast *13: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareDataBlock()Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
local wbs:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$SingleChunkEncoder:
method write([BII)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method createCompressionStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;I)Ljava/io/OutputStream;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$WBlockState:
method getCurrentPos()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method getDecompressor()Lorg/apache/hadoop/io/compress/Decompressor;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
field MAX_KEY_SIZE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression:
method getSupportedAlgorithms()[Ljava/lang/String;:
return:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$MemcmpRawComparator:
method compare([BII[BII)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method write(Ljava/io/DataOutput;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
field conf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method checkTFileDataIndex()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$BlockAppender:
method <init>(Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockRegister;Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$WBlockState;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$BlockReader:
field closed:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;)I:
typeparam 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;)I:
local ret:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local it *4:
type:
inner-type 3,0, 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local e *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareMetaBlock(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getBlockContainsKey(Lorg/apache/hadoop/io/file/tfile/RawComparable;Z)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;:
local blkIndex:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper$Align:
method calculateWidth(Ljava/lang/String;J)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
field API_VERSION:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
field valueChecked:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method seekTo(Lorg/apache/hadoop/io/file/tfile/RawComparable;Z)Z:
local l:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
field oneByte:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper$Align:
field RIGHT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method getDataBlock(I)Lorg/apache/hadoop/io/file/tfile/BCFile$Reader$BlockReader;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
field keyBuffer:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
field CONF_LZO_CLASS:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndexEntry:
method getCompressionAlgorithm()Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$BlockRegion:
method getOffset()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$MetaBlockRegister:
method <init>(Ljava/lang/String;Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method compareKeys([BII[BII)I:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method markSupported()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
method write(Ljava/io/DataOutput;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
method size()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
field in:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method getEntry(I)Lorg/apache/hadoop/io/file/tfile/TFile$TFileIndexEntry;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
field endLocation:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareMetaBlock(Ljava/lang/String;Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;)Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
new *4: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$DataIndex:
method getBlockRegionList()Ljava/util/ArrayList;:
return:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$RBlockState:
method <init>(Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;Lorg/apache/hadoop/fs/FSDataInputStream;Lorg/apache/hadoop/io/file/tfile/BCFile$BlockRegion;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local calculateCompression:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getKeyNear(J)Lorg/apache/hadoop/io/file/tfile/RawComparable;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(ILjava/io/DataInput;Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;)I:
typeparam 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method makeComparator(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;:
typecast *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class ByteArray:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local e *2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method prepareMetaBlock(Ljava/lang/String;Ljava/lang/String;)Ljava/io/DataOutputStream;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method compareTo(IJ)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$SingleChunkEncoder:
method write([BII)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method close()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
field out:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method getBlockIndexNear(J)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method finishDataBlock(Z)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method equals(Ljava/lang/Object;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method compareTo([B)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local blkCompression:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper$Align:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method read([BII)I:
local n:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
method main([Ljava/lang/String;)V:
local file:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method close()V:
local offsetIndexMeta:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$BytesComparator:
method compare([BII[BII)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getValueStream()Ljava/io/DataInputStream;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(ILjava/io/DataInput;Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper$Align:
field ZERO_PADDED:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(ILjava/io/DataInput;Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
local i:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method readString(Ljava/io/DataInput;)Ljava/lang/String;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method clone()Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$BlockReader:
method close()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
field valueBuffer:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method compareKeys([BII[BII)I:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local e *3:
type:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class RawComparable:
method size()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndex:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$DataBlockRegister:
method register(JJJ)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
method <init>(Ljava/io/DataInput;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method skip(J)J:
local ret:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
method <init>(SS)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method <init>(IJ)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method advance()Z:
local curRid:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method read([BII)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;)I:
local midVal:
type:
inner-type 3,0, 2,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class RawComparable:
method buffer()[B:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$WBlockState:
method getStartPos()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local key:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$BlockRegion:
field compressedSize:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method <init>(Lorg/apache/hadoop/io/file/tfile/TFile$Reader;Lorg/apache/hadoop/io/file/tfile/RawComparable;Lorg/apache/hadoop/io/file/tfile/RawComparable;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method prepareAppendValue(I)Ljava/io/DataOutputStream;:
new *4: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeString(Ljava/io/DataOutput;Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method markSupported()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method lowerBound(Lorg/apache/hadoop/io/file/tfile/RawComparable;)I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$FinishOnFlushCompressionStream:
method write([BII)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method upperBound(Lorg/apache/hadoop/io/file/tfile/RawComparable;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
field currentLocation:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
field tfileIndex:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local offset:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local maxKeyLength:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method read([BII)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local entrySet:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getValueLength()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method isSupported()Z:
insert-annotation Block.statement 0, If.thenStatement, Block.statement 3, Try.block, Block.statement 1, ExpressionStatement.expression, Assignment.expression, TypeCast.expression, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method createReader(Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;Lorg/apache/hadoop/io/file/tfile/BCFile$BlockRegion;)Lorg/apache/hadoop/io/file/tfile/BCFile$Reader$BlockReader;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$WBlockState:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndex:
field index:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method <init>(Lorg/apache/hadoop/fs/FSDataOutputStream;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$ScalarComparator:
method compare(Lorg/apache/hadoop/io/file/tfile/CompareUtils$Scalar;Lorg/apache/hadoop/io/file/tfile/CompareUtils$Scalar;)I:
local diff:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getValue([BI)I:
local nextOffset:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
field COMPARATOR_MEMCMP:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeString(Ljava/io/DataOutput;Ljava/lang/String;)V:
local buffer:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
field AB_MAGIC_BCFILE:
typecast *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method createReader(Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;Lorg/apache/hadoop/io/file/tfile/BCFile$BlockRegion;)Lorg/apache/hadoop/io/file/tfile/BCFile$Reader$BlockReader;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
field NONE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
field writerBCF:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getKey([BI)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class SimpleBufferedOutputStream:
method write([BII)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$1:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$DataIndex:
method <init>(Ljava/lang/String;)V:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method seekTo(Lorg/apache/hadoop/io/file/tfile/RawComparable;Z)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
method write(Ljava/io/DataOutput;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$BytesComparator:
method <init>(Lorg/apache/hadoop/io/RawComparator;)V:
parameter 0:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$BlockRegion:
method getCompressedSize()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method writeChunk([BIIZ)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method read()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method setFirstKey([BII)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method checkEOF()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$WBlockState:
method <init>(Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;Lorg/apache/hadoop/fs/FSDataOutputStream;Lorg/apache/hadoop/io/BytesWritable;Lorg/apache/hadoop/conf/Configuration;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getLocationByRecordNum(J)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method lowerBound(Lorg/apache/hadoop/io/file/tfile/RawComparable;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$BytesComparator:
method compare([BII[BII)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
field state:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$BlockReader:
method <init>(Lorg/apache/hadoop/io/file/tfile/BCFile$Reader$RBlockState;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method read([BII)I:
local ret:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class MetaBlockAlreadyExists:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
method entries()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
method hashCode()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer$KeyRegister:
method close()V:
local tmp:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method createDecompressionStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;I)Ljava/io/InputStream;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local b *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile:
field API_VERSION:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$DataIndex:
method getBlockRegionList()Ljava/util/ArrayList;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
field API_VERSION:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScannerByKey([B[B)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method prepareMetaBlock(Ljava/lang/String;Ljava/lang/String;)Ljava/io/DataOutputStream;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
field AB_MAGIC_BCFILE:
typecast *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer$State:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$SingleChunkEncoder:
method close()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$WBlockState:
method getOutputStream()Ljava/io/OutputStream;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getKeyStream()Ljava/io/DataInputStream;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method entry()Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner$Entry;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class ByteArray:
method size()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScanner([B[B)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndexEntry:
method <init>(Ljava/io/DataInput;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method read([BII)I:
local n:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
field AB_MAGIC_BCFILE:
typecast *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method incRecordIndex()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
parameter 2:
type:
inner-type 3,0, 2,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer$KeyRegister:
method close()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method write(Ljava/io/DataOutput;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class MetaBlockDoesNotExist:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method readString(Ljava/io/DataInput;)Ljava/lang/String;:
new *0:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$BytesComparator:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method <init>(Lorg/apache/hadoop/fs/FSDataOutputStream;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$BlockAppender:
method getRawSize()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local metaIndexSize:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method getLastKey()Lorg/apache/hadoop/io/file/tfile/RawComparable;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndexEntry:
method getCompressionAlgorithm()Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$SingleChunkEncoder:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
method getSupportedCompressionAlgorithms()[Ljava/lang/String;:
return:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local blkLenWidth:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method getBlockIndexNear(J)I:
insert-annotation Block.statement 1, Variable.initializer, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
method compatibleWith(Lorg/apache/hadoop/io/file/tfile/Utils$Version;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper$Align:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
field valTransferBuffer:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method returnDecompressor(Lorg/apache/hadoop/io/compress/Decompressor;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class SimpleBufferedOutputStream:
method write(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method hashCode()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeString(Ljava/io/DataOutput;Ljava/lang/String;)V:
local buffer:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class ByteArray:
method <init>([BII)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method read([B)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$DataIndex:
field listRegions:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method compareTo([BII)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class SimpleBufferedOutputStream:
field buf:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method write([B)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
field dataIndex:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method getRecordIndex()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$DataBlockRegister:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method close()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$DataBlockRegister:
method register(JJJ)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method compareTo([BII)I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local blkIDWidth2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method equals(Ljava/lang/Object;)Z:
instanceof *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$BlockRegion:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method isSupported()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareDataBlock()Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getEntryComparator()Ljava/util/Comparator;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
field metaIndex:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getLocationNear(J)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;:
local blockIndex:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method writeValue(Ljava/io/OutputStream;)J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
method main([Ljava/lang/String;)V:
local conf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
method getSupportedCompressionAlgorithms()[Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
method hashCode()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$MemcmpRawComparator:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method writeBufData([BII)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$RBlockState:
method getCompressionName()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getValue(Lorg/apache/hadoop/io/BytesWritable;)J:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$WBlockState:
method getStartPos()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$BlockAppender:
method getCompressedSize()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;)I:
local low:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareMetaBlock(Ljava/lang/String;Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;)Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$BlockRegion:
method <init>(JJJ)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
method entries()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScannerByKey([B[B)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;)I:
local ret:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
field conf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
field COMPRESSION_LZO:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeString(Ljava/io/DataOutput;Ljava/lang/String;)V:
local text:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method compareTo([BII)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer$KeyRegister:
method close()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScanner()Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$BlockRegion:
method getOffset()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method flushBuffer()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method upperBound([BII)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local e *2:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method readVInt(Ljava/io/DataInput;)I:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method hashCode()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$FinishOnFlushCompressionStream:
method flush()V:
local cout:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
field minor:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class RawComparable:
method buffer()[B:
return:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local e *1:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method <init>(Lorg/apache/hadoop/fs/FSDataOutputStream;ILjava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method seekTo(Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class ByteArray:
field len:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local dataSize:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method read([B)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$WBlockState:
field compressor:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method writeValue(Ljava/io/OutputStream;)J:
local dis:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method <init>(Ljava/io/DataInputStream;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$RBlockState:
method <init>(Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;Lorg/apache/hadoop/fs/FSDataInputStream;Lorg/apache/hadoop/io/file/tfile/BCFile$BlockRegion;Lorg/apache/hadoop/conf/Configuration;)V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method hashCode()I:
local result:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method initDataBlock()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$BytesComparator:
method compare([BII[BII)I:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScannerByKey([B[B)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method read([BII)I:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareMetaBlock(Ljava/lang/String;Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;)Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local leftOverBytes:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$BytesComparator:
method compare([BII[BII)I:
parameter 4:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$BlockRegion:
method <init>(Ljava/io/DataInput;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method getBlockIndexNear(J)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method getRecordNumByLocation(LReader/Location;)J:
local blkIndex:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method createCompressionStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;I)Ljava/io/OutputStream;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local properties:
type:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method entry()Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner$Entry;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getLocationNear(J)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
method <init>([BIIJ)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScannerByKey([B[B)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$BlockRegion:
method magnitude()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression:
method getCompressionAlgorithmByName(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;:
local algos:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method getRecordCount()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method clone()Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method createCompressionStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;I)Ljava/io/OutputStream;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method isClosed()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
method <init>([BIIJ)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method compareKeys([BII[BII)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getLocationByRecordNum(J)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$DataIndex:
method <init>(Ljava/io/DataInput;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method makeComparator(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local maxNameLen:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$MetaBlockRegister:
method register(JJJ)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method <init>(Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/conf/Configuration;)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method getRecordIndex()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
field metaIndex:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method compareKeys(Lorg/apache/hadoop/io/file/tfile/RawComparable;Lorg/apache/hadoop/io/file/tfile/RawComparable;)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method finishDataBlock(Z)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getMetaBlock(Ljava/lang/String;)Ljava/io/DataInputStream;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$DataIndex:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
method getChunkBufferSize(Lorg/apache/hadoop/conf/Configuration;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer$ValueRegister:
field closed:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method advance()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression:
method getCompressionAlgorithmByName(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;:
local a:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareMetaBlock(Ljava/lang/String;Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;)Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScannerByKey(Lorg/apache/hadoop/io/file/tfile/RawComparable;Lorg/apache/hadoop/io/file/tfile/RawComparable;)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method close()V:
local outIndex:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer$State:
field IN_VALUE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$RBlockState:
method <init>(Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;Lorg/apache/hadoop/fs/FSDataInputStream;Lorg/apache/hadoop/io/file/tfile/BCFile$BlockRegion;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper$Align:
method format(Ljava/lang/String;ILorg/apache/hadoop/io/file/tfile/TFileDumper$Align;)Ljava/lang/String;:
local alignAdjusted:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$DataIndex:
method <init>(Ljava/lang/String;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
typecast *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(ILjava/io/DataInput;Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
new *1:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScannerByRecordNum(JJ)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
field recordNumIndex:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method <init>(Lorg/apache/hadoop/fs/FSDataOutputStream;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(ILjava/io/DataInput;Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
new *9: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(ILjava/io/DataInput;Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareDataBlock()Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method <init>(Lorg/apache/hadoop/io/file/tfile/TFile$Reader;JJ)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method <init>(Ljava/lang/String;)V:
parameter 0:
type:
inner-type 1,0, 1,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method compareTo([BII)I:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$BlockReader:
method getCompressedSize()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method setFirstKey([BII)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndex:
method <init>()V:
new *0:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local it *4:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method getMetaBlock(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/BCFile$Reader$BlockReader;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method inBlockAdvance(Lorg/apache/hadoop/io/file/tfile/RawComparable;Z)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method getDecompressor()Lorg/apache/hadoop/io/compress/Decompressor;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
parameter 0:
type:
inner-type 3,0, 2,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$MemcmpRawComparator:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class SimpleBufferedOutputStream:
method <init>(Ljava/io/OutputStream;[B)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method upperBound(Lorg/apache/hadoop/io/file/tfile/RawComparable;)I:
insert-annotation Block.statement 2, Variable.initializer, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndex:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScanner([B[B)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method <init>(Lorg/apache/hadoop/io/file/tfile/TFile$Reader;Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;)V:
new *6: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method set(Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndex:
field index:
type:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method <init>(Lorg/apache/hadoop/fs/FSDataOutputStream;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getBlockContainsKey(Lorg/apache/hadoop/io/file/tfile/RawComparable;Z)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScannerByByteRange(JJ)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
method getChunkBufferSize(Lorg/apache/hadoop/conf/Configuration;)I:
local ret:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$BytesComparator:
field cmp:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
method main([Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method reset(Ljava/io/DataInputStream;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
field AB_MAGIC_BCFILE:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;)I:
parameter 0:
type:
inner-type 3,0, 2,0, 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$BytesComparator:
implements 0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method get(Lorg/apache/hadoop/io/BytesWritable;Lorg/apache/hadoop/io/BytesWritable;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
new *1:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method getRecordNum()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method compareTo(IJ)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method getCompressor()Lorg/apache/hadoop/io/compress/Compressor;:
local codec:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper$Align:
method calculateWidth(Ljava/lang/String;J)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$BlockRegister:
method register(JJJ)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method inBlockAdvance(J)V:
local i:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method setFirstKey([BII)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method <init>(Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/conf/Configuration;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$BlockReader:
method getStartPos()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer$KeyRegister:
method <init>(I)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
method readAndVerify(Ljava/io/DataInput;)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local it *3:
type:
inner-type 3,0, 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$SingleChunkEncoder:
method write([BII)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method makeComparator(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareMetaBlock(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$DataIndex:
field listRegions:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$RBlockState:
field decompressor:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScannerByKey(Lorg/apache/hadoop/io/file/tfile/RawComparable;Lorg/apache/hadoop/io/file/tfile/RawComparable;)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method getDefaultCompressionAlgorithm()Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local it *1:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$SingleChunkEncoder:
method write([BII)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method equals(Ljava/lang/Object;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
method <init>([BIIJ)V:
new *0:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method readVLong(Ljava/io/DataInput;)J:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$MetaBlockRegister:
field compressAlgo:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method setFirstKey([BII)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class SimpleBufferedOutputStream:
field count:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
field AB_MAGIC_BCFILE:
typecast *8: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$WBlockState:
method getCurrentPos()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeVLong(Ljava/io/DataOutput;J)V:
typecast *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method compareKeys([BII[BII)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method getCompressor()Lorg/apache/hadoop/io/compress/Compressor;:
local compressor:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method createDecompressionStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;I)Ljava/io/InputStream;:
local cis:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method getVersion()Lorg/apache/hadoop/io/file/tfile/Utils$Version;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local sampleLen:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$DataIndex:
method getDefaultCompressionAlgorithm()Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method getDefaultCompressionAlgorithm()Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getKey([B)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method lowerBound(Lorg/apache/hadoop/io/file/tfile/RawComparable;)I:
local ret:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method compareTo(Lorg/apache/hadoop/io/file/tfile/RawComparable;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method finishDataBlock(Z)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$1:
method compare(LScanner/Entry;LScanner/Entry;)I:
parameter 0:
type:
inner-type 1,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(ILjava/io/DataInput;Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
local idx:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScanner(Lorg/apache/hadoop/io/file/tfile/RawComparable;Lorg/apache/hadoop/io/file/tfile/RawComparable;)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$DataIndex:
method getBlockRegionList()Ljava/util/ArrayList;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$MetaBlockRegister:
method register(JJJ)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
method <init>([BIIJ)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method equals(Ljava/lang/Object;)Z:
local other:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
field in:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
field AB_MAGIC_BCFILE:
typecast *5: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
field BLOCK_NAME:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
field MAX_VAL_TRANSFER_BUF_SIZE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method <init>(Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/conf/Configuration;)V:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method <init>(Lorg/apache/hadoop/fs/FSDataOutputStream;ILjava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 4:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getRecordNumNear(J)J:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local compressionWidth:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$DataIndex:
field defaultCompressionAlgorithm:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method compareKeys(Lorg/apache/hadoop/io/file/tfile/RawComparable;Lorg/apache/hadoop/io/file/tfile/RawComparable;)I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class ByteArray:
method offset()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method compareTo(Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class SimpleBufferedOutputStream:
method flush()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method compareTo(IJ)I:
local ret:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method <init>(Lorg/apache/hadoop/fs/FSDataInputStream;JJ)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
local midVal:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(ILjava/io/DataInput;Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
new *11: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
implements 0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getComparator()Ljava/util/Comparator;:
return:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$SingleChunkEncoder:
method <init>(Ljava/io/DataOutputStream;I)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$ScalarLong:
method magnitude()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method available()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method getBlockCount()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
field begin:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local it *4:
type:
inner-type 3,0, 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getKeyNear(J)Lorg/apache/hadoop/io/file/tfile/RawComparable;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$SingleChunkEncoder:
method flush()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$BlockAppender:
method <init>(Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockRegister;Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$WBlockState;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method createCompressionStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;I)Ljava/io/OutputStream;:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method <init>(Lorg/apache/hadoop/fs/FSDataOutputStream;ILjava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local entrySet:
type:
inner-type 3,0, 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local records:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local it *1:
type:
inner-type 3,0, 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
field AB_MAGIC_BCFILE:
typecast *15: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndexEntry:
method <init>(Ljava/io/DataInput;)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method <init>(Lorg/apache/hadoop/fs/FSDataOutputStream;ILjava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method <init>(Lorg/apache/hadoop/io/file/tfile/TFile$Reader;Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;)V:
new *4: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$FinishOnFlushCompressionStream:
method write([BII)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getLocationNear(J)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
field codec:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class ByteArray:
method buffer()[B:
return:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local recordsWidth:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method checkKey()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
field BLOCK_NAME:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
method toString()Ljava/lang/String;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getKeyLength()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(ILjava/io/DataInput;Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
method equals(Ljava/lang/Object;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method prepareAppendKey(I)Ljava/io/DataOutputStream;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndexEntry:
method <init>(Ljava/io/DataInput;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareMetaBlock(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$FinishOnFlushCompressionStream:
method flush()V:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method prepareAppendValue(I)Ljava/io/DataOutputStream;:
new *1:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method seekTo([BII)Z:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(ILjava/io/DataInput;Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
new *4: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method <init>(Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/conf/Configuration;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method prepareMetaBlock(Ljava/lang/String;)Ljava/io/DataOutputStream;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method append([B[B)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method getLocationByRecordNum(J)LReader/Location;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getValue([B)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method seekTo(Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method getMetaBlock(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/BCFile$Reader$BlockReader;:
local region:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$BytesComparator:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method write([B)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method readVInt(Ljava/io/DataInput;)I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local it *3:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method <init>(Ljava/io/DataInput;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method getMetaBlock(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/BCFile$Reader$BlockReader;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
bound 0 & 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method <init>(Lorg/apache/hadoop/fs/FSDataOutputStream;ILjava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V:
new *4: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression:
method getCompressionAlgorithmByName(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local maxKeySampleLen:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
local high:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method reset()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method getLocationByRecordNum(J)LReader/Location;:
insert-annotation Block.statement 0, Variable.initializer, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScannerByByteRange(JJ)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method read([BII)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method compareTo(Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method writeValue(Ljava/io/OutputStream;)J:
local size:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
method getFSInputBufferSize(Lorg/apache/hadoop/conf/Configuration;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local blkName:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$BlockAppender:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method append([BII[BII)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method upperBound([B)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method getMetaBlock(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/BCFile$Reader$BlockReader;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method skip(J)J:
local len:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method compareTo(Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
field index:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$WBlockState:
method <init>(Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;Lorg/apache/hadoop/fs/FSDataOutputStream;Lorg/apache/hadoop/io/BytesWritable;Lorg/apache/hadoop/conf/Configuration;)V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method <init>(Lorg/apache/hadoop/io/file/tfile/TFile$Reader;Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getKey(Lorg/apache/hadoop/io/BytesWritable;)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
field mark:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$SingleChunkEncoder:
method <init>(Ljava/io/DataOutputStream;I)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method available()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
method getMinor()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method append([BII[BII)V:
parameter 4:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
method <init>(Ljava/io/DataInput;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$MemcmpRawComparator:
method compare([BII[BII)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method <init>(Lorg/apache/hadoop/io/file/tfile/TFile$Reader;Lorg/apache/hadoop/io/file/tfile/RawComparable;Lorg/apache/hadoop/io/file/tfile/RawComparable;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method close()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local blkID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer$KeyRegister:
method close()V:
local key:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$ScalarLong:
method <init>(J)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method writeChunk([BIIZ)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method seekToEnd()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method reset()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getKey([BI)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method addEntry(Lorg/apache/hadoop/io/file/tfile/TFile$TFileIndexEntry;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndex:
method addEntry(Lorg/apache/hadoop/io/file/tfile/BCFile$MetaIndexEntry;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getLocationNear(J)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local e *4:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$RBlockState:
method finish()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local entrySet:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method isValueLengthKnown()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local metaBlkEntrySet:
type:
inner-type 3,0, 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
field conf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local key:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method getBlockIndex()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method getComparator()Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method getCodec()Lorg/apache/hadoop/io/compress/CompressionCodec;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
parameter 2:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer$State:
field CLOSED:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method compareKeys([BII[BII)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getEntryComparator()Ljava/util/Comparator;:
return:
inner-type 3,0, 1,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method read()I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$MemcmpRawComparator:
method compare([BII[BII)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression:
method getSupportedAlgorithms()[Ljava/lang/String;:
local algos:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeVLong(Ljava/io/DataOutput;J)V:
typecast *7: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getValue(Lorg/apache/hadoop/io/BytesWritable;)J:
local size:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
field tfileIndex:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$BlockRegion:
method <init>(Ljava/io/DataInput;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$WBlockState:
field compressAlgo:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method lowerBound(Lorg/apache/hadoop/io/file/tfile/RawComparable;)I:
insert-annotation Block.statement 2, Variable.initializer, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;)I:
local low:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$FinishOnFlushCompressionStream:
method flush()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method advance()Z:
local entriesInBlock:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$FinishOnFlushCompressionStream:
method write([BII)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$BlockRegion:
method write(Ljava/io/DataOutput;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$BlockRegion:
method getRawSize()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class SimpleBufferedOutputStream:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method prepareAppendValue(I)Ljava/io/DataOutputStream;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getKey([B)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method writeChunk([BIIZ)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method getFirstKey()Lorg/apache/hadoop/io/file/tfile/RawComparable;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method isSupported()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method isSupported()Z:
local clazz:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndexEntry:
field compressionAlgorithm:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
field API_VERSION:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method <init>(Ljava/io/DataOutputStream;[B)V:
parameter 1:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method getRecordNumByLocation(LReader/Location;)J:
local lastRecNum:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
field AB_MAGIC_BCFILE:
typecast *12: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeVLong(Ljava/io/DataOutput;J)V:
typecast *10: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;)I:
local midVal:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local it *2:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local it *2:
type:
inner-type 3,0, 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local blkLen *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method upperBound([BII)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
field recordIndex:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
field blockIndex:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method readVInt(Ljava/io/DataInput;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeVLong(Ljava/io/DataOutput;J)V:
typecast *11: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method read([BII)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method <init>(Ljava/io/DataInput;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local nameWidth:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getComparator()Ljava/util/Comparator;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
field in:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method getName()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local miscSize:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method seekTo([B)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method setFirstKey([BII)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$WBlockState:
method <init>(Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;Lorg/apache/hadoop/fs/FSDataOutputStream;Lorg/apache/hadoop/io/BytesWritable;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method compareTo(Lorg/apache/hadoop/io/file/tfile/RawComparable;)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareDataBlock()Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method createDecompressionStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;I)Ljava/io/InputStream;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
method main([Ljava/lang/String;)V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
local low:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method getFirstKey()Lorg/apache/hadoop/io/file/tfile/RawComparable;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$WBlockState:
method getCompressedSize()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndex:
method getMetaByName(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/BCFile$MetaIndexEntry;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method getDecompressor()Lorg/apache/hadoop/io/compress/Decompressor;:
local decompressor:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$MemcmpRawComparator:
implements 1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndex:
method <init>(Ljava/io/DataInput;)V:
local indexEntry:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
field currentKeyBufferOS:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
field closed:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method append([BII[BII)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndexEntry:
method <init>(Ljava/io/DataInput;)V:
local fullMetaName:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getKey([BI)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$MemcmpRawComparator:
method compare([BII[BII)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScanner()Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method set(IJ)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$MetaBlockRegister:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$SingleChunkEncoder:
method write([BII)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
field errorCount:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method write(Ljava/io/DataOutput;)V:
local entry:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method append([BII[BII)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
field reader:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;)I:
parameter 0:
type:
inner-type 3,0, 2,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method read()I:
local ret:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getKey([B)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$RBlockState:
field in:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper$Align:
field CENTER:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(ILjava/io/DataInput;Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
new *7: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class MetaBlockAlreadyExists:
method <init>(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression:
method getSupportedAlgorithms()[Ljava/lang/String;:
local a:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareDataBlock()Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method getBlockIndexNear(J)I:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getBlockContainsKey(Lorg/apache/hadoop/io/file/tfile/RawComparable;Z)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method readVLong(Ljava/io/DataInput;)J:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
field closed:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
local high:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression:
method getSupportedAlgorithms()[Ljava/lang/String;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeVLong(Ljava/io/DataOutput;J)V:
typecast *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
field recordNumIndex:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScannerByByteRange(JJ)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method prepareAppendValue(I)Ljava/io/DataOutputStream;:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method <init>(Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/conf/Configuration;)V:
local brMeta:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method createDecompressionStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;I)Ljava/io/InputStream;:
local bis2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method write(I)V:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class ByteArray:
method <init>([B)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getLocationByRecordNum(J)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method prepareMetaBlock(Ljava/lang/String;Ljava/lang/String;)Ljava/io/DataOutputStream;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$DataIndex:
method <init>(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method getRecordNumByLocation(LReader/Location;)J:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$RBlockState:
method getInputStream()Ljava/io/InputStream;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method read([BII)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$BlockRegion:
method getRawSize()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method atEnd()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$BlockReader:
method <init>(Lorg/apache/hadoop/io/file/tfile/BCFile$Reader$RBlockState;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method getBlockIndexNear(J)I:
local list:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method readVLong(Ljava/io/DataInput;)J:
local len:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method <init>(Lorg/apache/hadoop/io/file/tfile/TFile$Reader;Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
method buffer()[B:
return:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method <init>(Lorg/apache/hadoop/fs/FSDataInputStream;JJ)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$BlockRegion:
method <init>(JJJ)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method createCompressionStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;I)Ljava/io/OutputStream;:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$WBlockState:
method <init>(Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;Lorg/apache/hadoop/fs/FSDataOutputStream;Lorg/apache/hadoop/io/BytesWritable;Lorg/apache/hadoop/conf/Configuration;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$BlockAppender:
field wBlkState:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$ScalarComparator:
method compare(Lorg/apache/hadoop/io/file/tfile/CompareUtils$Scalar;Lorg/apache/hadoop/io/file/tfile/CompareUtils$Scalar;)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
local mid:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method createCompressionStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;I)Ljava/io/OutputStream;:
local bos2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method <init>(Lorg/apache/hadoop/fs/FSDataOutputStream;ILjava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method compareTo(IJ)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class SimpleBufferedOutputStream:
method write([BII)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getValue([BI)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method <init>(Lorg/apache/hadoop/fs/FSDataOutputStream;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method prepareAppendValue(I)Ljava/io/DataOutputStream;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method <init>(Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method <init>(Lorg/apache/hadoop/fs/FSDataInputStream;JJ)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method write(Ljava/io/DataOutput;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$MetaBlockRegister:
method register(JJJ)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareDataBlock()Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
local ba:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
method getMajor()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getRecordNumNear(J)J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer$KeyRegister:
method <init>(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(ILjava/io/DataInput;Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getRecordNumNear(J)J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndex:
method write(Ljava/io/DataOutput;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method getDataBlock(I)Lorg/apache/hadoop/io/file/tfile/BCFile$Reader$BlockReader;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$MemcmpRawComparator:
method compare([BII[BII)I:
parameter 3:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method compareKeys(Lorg/apache/hadoop/io/file/tfile/RawComparable;Lorg/apache/hadoop/io/file/tfile/RawComparable;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$WBlockState:
field posStart:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndexEntry:
field defaultPrefix:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method write([BII)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getBlockContainsKey(Lorg/apache/hadoop/io/file/tfile/RawComparable;Z)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
parameter 0:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method createDecompressionStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;I)Ljava/io/InputStream;:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class MetaBlockDoesNotExist:
method <init>(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$WBlockState:
field fsBufferedOutput:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
field comparator:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$BlockRegion:
field offset:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method <init>(Lorg/apache/hadoop/io/file/tfile/TFile$Reader;JJ)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method close()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$BlockReader:
method getCompressionName()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$RBlockState:
method getCompressionName()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$RBlockState:
method getBlockRegion()Lorg/apache/hadoop/io/file/tfile/BCFile$BlockRegion;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method getDefaultCompressionName()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$ScalarComparator:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$1:
method compare(LScanner/Entry;LScanner/Entry;)I:
parameter 1:
type:
inner-type 1,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
field valueDataInputStream:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local e *4:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getRecordNumByLocation(Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;)J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local j:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper$Align:
field LEFT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(ILjava/io/DataInput;Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
local buffer:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method getDecompressor()Lorg/apache/hadoop/io/compress/Decompressor;:
local codec:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$DataIndex:
method write(Ljava/io/DataOutput;)V:
local region:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method write(Ljava/io/DataOutput;)V:
local dob:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method isSupported()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local it *3:
type:
inner-type 3,0, 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression:
method getSupportedAlgorithms()[Ljava/lang/String;:
new *1:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method prepareAppendKey(I)Ljava/io/DataOutputStream;:
local ret:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$BytesComparator:
method compare(Lorg/apache/hadoop/io/file/tfile/RawComparable;Lorg/apache/hadoop/io/file/tfile/RawComparable;)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
method write(Ljava/io/DataOutput;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getKey(Lorg/apache/hadoop/io/BytesWritable;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method getBlockCount()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local metaSize:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
method <init>([BIIJ)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression:
method getSupportedAlgorithms()[Ljava/lang/String;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$MetaBlockRegister:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method <init>(Ljava/io/DataOutputStream;[B)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method getDataBlock(I)Lorg/apache/hadoop/io/file/tfile/BCFile$Reader$BlockReader;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method readVLong(Ljava/io/DataInput;)J:
typecast *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
field lastKeyBufferOS:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$MemcmpRawComparator:
method compare(Ljava/lang/Object;Ljava/lang/Object;)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class MetaBlockAlreadyExists:
method <init>(Ljava/lang/String;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method prepareAppendValue(I)Ljava/io/DataOutputStream;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class RawComparable:
method offset()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
field DATA_OBUF_SIZE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method setFirstKey([BII)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method lowerBound([BII)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method getCodec()Lorg/apache/hadoop/io/compress/CompressionCodec;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method begin()Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method <init>(Lorg/apache/hadoop/fs/FSDataOutputStream;ILjava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getKeyLength()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class ByteArray:
method offset()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
field AB_MAGIC_BCFILE:
typecast *11: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method close()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScanner([B[B)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer$KeyRegister:
method close()V:
local lastLen:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareMetaBlock(Ljava/lang/String;Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;)Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$FinishOnFlushCompressionStream:
method write([BII)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method getMetaBlock(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/BCFile$Reader$BlockReader;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getValueLength()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method skip(J)J:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeVLong(Ljava/io/DataOutput;J)V:
typecast *9: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method lowerBound([BII)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeVLong(Ljava/io/DataOutput;J)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method compareTo([BII)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getKeyBuffer()[B:
return:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class ByteArray:
method <init>(Lorg/apache/hadoop/io/BytesWritable;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$DataIndex:
method addBlockRegion(Lorg/apache/hadoop/io/file/tfile/BCFile$BlockRegion;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method checkEOF()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndex:
method getMetaByName(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/BCFile$MetaIndexEntry;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
method readAndVerify(Ljava/io/DataInput;)V:
local abMagic:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$ScalarLong:
method magnitude()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer$State:
field IN_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local fsdis:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
local low:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
field index:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method append([B[B)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method write(Ljava/io/DataOutput;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method writeValue(Ljava/io/OutputStream;)J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScannerByKey(Lorg/apache/hadoop/io/file/tfile/RawComparable;Lorg/apache/hadoop/io/file/tfile/RawComparable;)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareMetaBlock(Ljava/lang/String;Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;)Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
local ba:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method lowerBound([B)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method prepareAppendKey(I)Ljava/io/DataOutputStream;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$MetaBlockRegister:
method <init>(Ljava/lang/String;Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getValue(Lorg/apache/hadoop/io/BytesWritable;)J:
local dis:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$BlockAppender:
field blockRegister:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$ScalarLong:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method set(IJ)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local e *3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$BlockReader:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
method <init>(Ljava/io/DataInput;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method <init>(Lorg/apache/hadoop/io/file/tfile/TFile$Reader;Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method getRemain()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
field compressName:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$FinishOnFlushCompressionStream:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
field sum:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method isValueLengthKnown()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$RBlockState:
method getInputStream()Ljava/io/InputStream;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method compareKeys([BII[BII)I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getValue([B)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndexEntry:
method <init>(Ljava/lang/String;Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;Lorg/apache/hadoop/io/file/tfile/BCFile$BlockRegion;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$MetaBlockRegister:
field name:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression:
method getSupportedAlgorithms()[Ljava/lang/String;:
local ret:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndexEntry:
method getMetaName()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper$Align:
method format(JILorg/apache/hadoop/io/file/tfile/TFileDumper$Align;)Ljava/lang/String;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method writeChunk([BIIZ)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer$KeyRegister:
method close()V:
local len:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method <init>(Ljava/lang/String;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;)I:
parameter 0:
type:
inner-type 3,0, 2,0, 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndex:
method <init>(Ljava/io/DataInput;)V:
local count:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class ByteArray:
method buffer()[B:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method flush()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method prepareAppendValue(I)Ljava/io/DataOutputStream;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method write([BII)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(ILjava/io/DataInput;Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
new *2:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local fs:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method inBlockAdvance(Lorg/apache/hadoop/io/file/tfile/RawComparable;Z)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression:
method getSupportedAlgorithms()[Ljava/lang/String;:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method upperBound(Lorg/apache/hadoop/io/file/tfile/RawComparable;)I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local rawSize *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScanner()Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$RBlockState:
field region:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper$Align:
method format(Ljava/lang/String;ILorg/apache/hadoop/io/file/tfile/TFileDumper$Align;)Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local rawSizeWidth *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScannerByRecordNum(JJ)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local endKeyWidth:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getEntryCount()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
new *2:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScannerByRecordNum(JJ)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$SingleChunkEncoder:
field closed:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper$Align:
method format(Ljava/lang/String;ILorg/apache/hadoop/io/file/tfile/TFileDumper$Align;)Ljava/lang/String;:
local half:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method close()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeString(Ljava/io/DataOutput;Ljava/lang/String;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method compareTo([B)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
field metaBlkSeen:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getValueLength()I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
method makeComparator(Ljava/lang/String;)Ljava/util/Comparator;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method close()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method <init>(Lorg/apache/hadoop/io/file/tfile/TFile$Reader;Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;)V:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
field COMPRESSION_GZ:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
method write(Ljava/io/DataOutput;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer$KeyRegister:
field closed:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method incRecordCount()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local blockCnt:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndex:
method <init>(Ljava/io/DataInput;)V:
new *0:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile:
field API_VERSION:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method setFirstKey([BII)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method seekTo(Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method prepareMetaBlock(Ljava/lang/String;)Ljava/io/DataOutputStream;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
new *2:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method <init>(Lorg/apache/hadoop/fs/FSDataOutputStream;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$SingleChunkEncoder:
field remain:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class SimpleBufferedOutputStream:
method size()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getKey(Lorg/apache/hadoop/io/BytesWritable;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method write([B)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local e *3:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local blkIDWidth:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression:
method getSupportedAlgorithms()[Ljava/lang/String;:
insert-annotation Block.statement 3, Return.expression, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getKeyStream()Ljava/io/DataInputStream;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$SingleChunkEncoder:
method <init>(Ljava/io/DataOutputStream;I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method read([BII)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method createCompressionStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;I)Ljava/io/OutputStream;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
field tfileMeta:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;)I:
bound 0 & 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$SingleChunkEncoder:
method write([B)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class ByteArray:
method buffer()[B:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local it *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method seekTo(Lorg/apache/hadoop/io/file/tfile/RawComparable;Z)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local it *3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareDataBlock()Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
new *4: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class ByteArray:
method <init>([BII)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;)I:
local high:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method <init>(Lorg/apache/hadoop/io/file/tfile/TFile$Reader;JJ)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class SimpleBufferedOutputStream:
method <init>(Ljava/io/OutputStream;[B)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method <init>(Lorg/apache/hadoop/fs/FSDataOutputStream;ILjava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$BlockRegister:
method register(JJJ)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer$KeyRegister:
method close()V:
local key:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method getComparator()Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method readLength()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method getCodec()Lorg/apache/hadoop/io/compress/CompressionCodec;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndex:
method <init>()V:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method writeKey(Ljava/io/OutputStream;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareMetaBlock(Ljava/lang/String;Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;)Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method prepareAppendValue(I)Ljava/io/DataOutputStream;:
local ret:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local it *2:
type:
inner-type 3,0, 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local asAscii:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method write(I)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method <init>(Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/conf/Configuration;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method skip(J)J:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeVLong(Ljava/io/DataOutput;J)V:
typecast *13: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method getLastKey()Lorg/apache/hadoop/io/file/tfile/RawComparable;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$DataIndex:
field BLOCK_NAME:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getValue(Lorg/apache/hadoop/io/BytesWritable;)J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method finishDataBlock(Z)V:
local keyLast:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method writeValue(Ljava/io/OutputStream;)J:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method getLastKey()Lorg/apache/hadoop/io/file/tfile/RawComparable;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
field firstKey:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method end()Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper$Align:
method format(JILorg/apache/hadoop/io/file/tfile/TFileDumper$Align;)Ljava/lang/String;:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local offsetWidth:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
method makeComparator(Ljava/lang/String;)Ljava/util/Comparator;:
return:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$BytesComparator:
method compare([BII[BII)I:
parameter 5:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method writeBufData([BII)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$BlockRegion:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScannerByKey([B[B)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
field API_VERSION:
typecast *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getValue([B)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScanner(Lorg/apache/hadoop/io/file/tfile/RawComparable;Lorg/apache/hadoop/io/file/tfile/RawComparable;)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local properties:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method getLocationByRecordNum(J)LReader/Location;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getValueStream()Ljava/io/DataInputStream;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method compareTo([BII)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method createDecompressionStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;I)Ljava/io/InputStream;:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method skip(J)J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method upperBound([B)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method <init>(Lorg/apache/hadoop/io/file/tfile/TFile$Reader;Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method write([BII)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method <init>(Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/conf/Configuration;)V:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScannerByKey([B[B)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
parameter 1:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method seekTo([BII)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
parameter 2:
type:
inner-type 3,0, 2,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local metaBlkEntrySet:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$BlockRegion:
field rawSize:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method read([B)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method compareKeys([BII[BII)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(ILjava/io/DataInput;Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
local size:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndexEntry:
method <init>(Ljava/lang/String;Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;Lorg/apache/hadoop/io/file/tfile/BCFile$BlockRegion;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method hashCode()I:
local prime:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$WBlockState:
method <init>(Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;Lorg/apache/hadoop/fs/FSDataOutputStream;Lorg/apache/hadoop/io/BytesWritable;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method prepareAppendKey(I)Ljava/io/DataOutputStream;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;)I:
parameter 0:
type:
inner-type 3,0, 2,0, 3,0, 2,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$BlockRegion:
method write(Ljava/io/DataOutput;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
method compatibleWith(Lorg/apache/hadoop/io/file/tfile/Utils$Version;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method isSorted()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeVLong(Ljava/io/DataOutput;J)V:
local un:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method getVersion()Lorg/apache/hadoop/io/file/tfile/Utils$Version;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method <init>(Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/conf/Configuration;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeVLong(Ljava/io/DataOutput;J)V:
local firstByte:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
method makeComparator(Ljava/lang/String;)Ljava/util/Comparator;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
field oneByte:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method append([BII[BII)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;)I:
parameter 0:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method makeComparator(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
method size()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method available()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method prepareMetaBlock(Ljava/lang/String;)Ljava/io/DataOutputStream;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper$Align:
method calculateWidth(Ljava/lang/String;J)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
field buf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$MetaBlockRegister:
method register(JJJ)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method createReader(Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;Lorg/apache/hadoop/io/file/tfile/BCFile$BlockRegion;)Lorg/apache/hadoop/io/file/tfile/BCFile$Reader$BlockReader;:
local rbs:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method <init>(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
method buffer()[B:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
field oneByte:
new *0:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method returnCompressor(Lorg/apache/hadoop/io/compress/Compressor;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
field comparator:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method prepareMetaBlock(Ljava/lang/String;Ljava/lang/String;)Ljava/io/DataOutputStream;:
local outputStream:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getFirstKey()Lorg/apache/hadoop/io/file/tfile/RawComparable;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method clone()Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local metaBlks:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method <init>(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method hashCode()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
field pos:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method makeComparator(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method read()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
field readerBCF:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getBlockReader(I)Lorg/apache/hadoop/io/file/tfile/BCFile$Reader$BlockReader;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method mark(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScannerByKey(Lorg/apache/hadoop/io/file/tfile/RawComparable;Lorg/apache/hadoop/io/file/tfile/RawComparable;)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$1:
method compare(LScanner/Entry;LScanner/Entry;)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method available()I:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method seekTo([BII)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$ScalarComparator:
method compare(Lorg/apache/hadoop/io/file/tfile/CompareUtils$Scalar;Lorg/apache/hadoop/io/file/tfile/CompareUtils$Scalar;)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method getName()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method upperBound(Lorg/apache/hadoop/io/file/tfile/RawComparable;)I:
local ret:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method <init>(Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/conf/Configuration;)V:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
parameter 0:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
method main([Ljava/lang/String;)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method <init>(Lorg/apache/hadoop/io/file/tfile/TFile$Reader;JJ)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method seekTo(Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
method readAndVerify(Ljava/io/DataInput;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method isSorted()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class SimpleBufferedOutputStream:
method <init>(Ljava/io/OutputStream;[B)V:
parameter 1:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method markSupported()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getKeyBuffer()[B:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
field klen:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getValue([BI)I:
local dis:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeVInt(Ljava/io/DataOutput;I)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$WBlockState:
method getOutputStream()Ljava/io/OutputStream;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$WBlockState:
method <init>(Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;Lorg/apache/hadoop/fs/FSDataOutputStream;Lorg/apache/hadoop/io/BytesWritable;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local metaBlkEntrySet:
type:
inner-type 3,0, 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareMetaBlock(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method lowerBound([B)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile:
field API_VERSION:
typecast *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$ScalarComparator:
implements 1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method readString(Ljava/io/DataInput;)Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper$Align:
method format(JILorg/apache/hadoop/io/file/tfile/TFileDumper$Align;)Ljava/lang/String;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method readString(Ljava/io/DataInput;)Ljava/lang/String;:
local length:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$DataIndex:
method addBlockRegion(Lorg/apache/hadoop/io/file/tfile/BCFile$BlockRegion;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local it:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
field blkRecordCount:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method compareKeys([BII[BII)I:
parameter 4:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;)I:
parameter 0:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
method size()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndex:
method write(Ljava/io/DataOutput;)V:
local indexEntry:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper$Align:
method format(Ljava/lang/String;ILorg/apache/hadoop/io/file/tfile/TFileDumper$Align;)Ljava/lang/String;:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method parkCursorAtEnd()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;)I:
local mid:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeVLong(Ljava/io/DataOutput;J)V:
typecast *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
method <init>([BIIJ)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndex:
method <init>(Ljava/io/DataInput;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
field errorCount:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local endKey:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;)I:
parameter 0:
type:
inner-type 3,0, 2,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeVLong(Ljava/io/DataOutput;J)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$ScalarLong:
method <init>(J)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
field major:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
method getMajor()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeVInt(Ljava/io/DataOutput;I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
field conf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getValue([BI)I:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method seekTo([B)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method createDecompressionStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;I)Ljava/io/InputStream;:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression:
method getCompressionAlgorithmByName(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;:
local algos:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method checkTFileDataIndex()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$ScalarComparator:
method compare(Lorg/apache/hadoop/io/file/tfile/CompareUtils$Scalar;Lorg/apache/hadoop/io/file/tfile/CompareUtils$Scalar;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method getLocationByRecordNum(J)LReader/Location;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$ScalarComparator:
implements 0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method seekTo(Lorg/apache/hadoop/io/file/tfile/RawComparable;Z)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method <init>(Lorg/apache/hadoop/io/file/tfile/TFile$Reader;Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(ILjava/io/DataInput;Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
new *5: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method hashCode()I:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getFirstKey()Lorg/apache/hadoop/io/file/tfile/RawComparable;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer$State:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method lowerBound([BII)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class ByteArray:
method <init>([BII)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(ILjava/io/DataInput;Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
local firstKeyInputStream:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method <init>(Ljava/lang/String;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$DataBlockRegister:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScannerByKey(Lorg/apache/hadoop/io/file/tfile/RawComparable;Lorg/apache/hadoop/io/file/tfile/RawComparable;)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class SimpleBufferedOutputStream:
method flushBuffer()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getBlockEntryCount(I)J:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$DataIndex:
method <init>(Ljava/io/DataInput;)V:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method getAPIVersion()Lorg/apache/hadoop/io/file/tfile/Utils$Version;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
field version:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method seekTo([B)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndex:
method getMetaByName(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/BCFile$MetaIndexEntry;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer$ValueRegister:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method <init>(Lorg/apache/hadoop/io/file/tfile/TFile$Reader;Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;)V:
new *5: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method makeComparator(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;:
new *4: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method atEnd()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$WBlockState:
field out:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method getRecordNum()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method advance()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class ByteArray:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method close()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
method getMinor()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local it *1:
type:
inner-type 3,0, 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method <init>(Lorg/apache/hadoop/io/file/tfile/TFile$Reader;Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;)V:
new *1:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$MemcmpRawComparator:
method compare(Ljava/lang/Object;Ljava/lang/Object;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
field AB_MAGIC_BCFILE:
typecast *4: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local i *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$RBlockState:
field compressAlgo:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method compareCursorKeyTo(Lorg/apache/hadoop/io/file/tfile/RawComparable;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method <init>(Ljava/io/DataOutputStream;[B)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper$Align:
method format(Ljava/lang/String;ILorg/apache/hadoop/io/file/tfile/TFileDumper$Align;)Ljava/lang/String;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$BytesComparator:
method compare([BII[BII)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
local midVal:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method <init>(Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/conf/Configuration;)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method readVLong(Ljava/io/DataInput;)J:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method compareTo([BII)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method get(Lorg/apache/hadoop/io/BytesWritable;Lorg/apache/hadoop/io/BytesWritable;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$BlockRegion:
method <init>(JJJ)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getBlockEntryCount(I)J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method makeComparator(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method createReader(Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;Lorg/apache/hadoop/io/file/tfile/BCFile$BlockRegion;)Lorg/apache/hadoop/io/file/tfile/BCFile$Reader$BlockReader;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method equals(Ljava/lang/Object;)Z:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
parameter 0:
type:
inner-type 3,0, 2,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method available()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method prepareMetaBlock(Ljava/lang/String;)Ljava/io/DataOutputStream;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper$Align:
method format(Ljava/lang/String;ILorg/apache/hadoop/io/file/tfile/TFileDumper$Align;)Ljava/lang/String;:
local room:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$BytesComparator:
method compare([BII[BII)I:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method readString(Ljava/io/DataInput;)Ljava/lang/String;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndexEntry:
field metaName:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method createDecompressionStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;I)Ljava/io/InputStream;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method compareCursorKeyTo(Lorg/apache/hadoop/io/file/tfile/RawComparable;)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getLocationNear(J)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local properties:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getBlockReader(I)Lorg/apache/hadoop/io/file/tfile/BCFile$Reader$BlockReader;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper$Align:
method format(Ljava/lang/String;ILorg/apache/hadoop/io/file/tfile/TFileDumper$Align;)Ljava/lang/String;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression:
method getSupportedAlgorithms()[Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
field keyBuffer:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method inBlockAdvance(Lorg/apache/hadoop/io/file/tfile/RawComparable;Z)Z:
local cmp:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local reader:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
field sizeMinBlock:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$BytesComparator:
method compare([BII[BII)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer$ValueRegister:
method close()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$BytesComparator:
method <init>(Lorg/apache/hadoop/io/RawComparator;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local e *2:
type:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$FinishOnFlushCompressionStream:
method <init>(Lorg/apache/hadoop/io/compress/CompressionOutputStream;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$1:
method compare(LScanner/Entry;LScanner/Entry;)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
field key:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$RBlockState:
method <init>(Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;Lorg/apache/hadoop/fs/FSDataInputStream;Lorg/apache/hadoop/io/file/tfile/BCFile$BlockRegion;Lorg/apache/hadoop/conf/Configuration;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
field checked:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$ScalarComparator:
method compare(Lorg/apache/hadoop/io/file/tfile/CompareUtils$Scalar;Lorg/apache/hadoop/io/file/tfile/CompareUtils$Scalar;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method equals(Ljava/lang/Object;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$DataBlockRegister:
method register(JJJ)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method write(Ljava/io/DataOutput;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getKeyNear(J)Lorg/apache/hadoop/io/file/tfile/RawComparable;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method compareKeys([BII[BII)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$BlockRegion:
method magnitude()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
typeparam 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method inBlockAdvance(Lorg/apache/hadoop/io/file/tfile/RawComparable;Z)Z:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method read()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$DataBlockRegister:
method register(JJJ)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method lowerBound(Lorg/apache/hadoop/io/file/tfile/RawComparable;)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;)I:
local midVal:
type:
inner-type 3,0, 2,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method createDecompressionStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;I)Ljava/io/InputStream;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getKey([BI)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$DataIndex:
method write(Ljava/io/DataOutput;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
method <init>(Ljava/io/DataInput;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method append([BII[BII)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method readVInt(Ljava/io/DataInput;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method inBlockAdvance(J)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method readString(Ljava/io/DataInput;)Ljava/lang/String;:
local buffer:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer$ValueRegister:
method <init>(Ljava/io/OutputStream;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;)I:
local midVal:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method createReader(Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;Lorg/apache/hadoop/io/file/tfile/BCFile$BlockRegion;)Lorg/apache/hadoop/io/file/tfile/BCFile$Reader$BlockReader;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method compareTo(Lorg/apache/hadoop/io/file/tfile/RawComparable;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndexEntry:
method getMetaName()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
field kvEntries:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$1:
method compare(LScanner/Entry;LScanner/Entry;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
field comparator:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method compareCursorKeyTo(Lorg/apache/hadoop/io/file/tfile/RawComparable;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$BlockReader:
method getRawSize()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$DataIndex:
method <init>(Ljava/io/DataInput;)V:
local i:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method getCompressor()Lorg/apache/hadoop/io/compress/Compressor;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareMetaBlock(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeVLong(Ljava/io/DataOutput;J)V:
typecast *8: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method append([BII[BII)V:
parameter 3:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile:
field API_VERSION:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareDataBlock()Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method read([BII)I:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScannerByByteRange(JJ)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method <init>(Lorg/apache/hadoop/io/file/tfile/TFile$Reader;Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;)V:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local compression:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method getLocationByRecordNum(J)LReader/Location;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$RBlockState:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method prepareAppendKey(I)Ljava/io/DataOutputStream;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class SimpleBufferedOutputStream:
method write([BII)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getComparatorName()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method compareKeys([BII[BII)I:
parameter 5:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local region *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method read([BII)I:
local ret:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getValue([B)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method read([B)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
method <init>(SS)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method set(Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
field key:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method append([BII[BII)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(ILjava/io/DataInput;Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method prepareAppendValue(I)Ljava/io/DataOutputStream;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(ILjava/io/DataInput;Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
new *7:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method set(IJ)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$MemcmpRawComparator:
method compare([BII[BII)I:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method makeComparator(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method returnCompressor(Lorg/apache/hadoop/io/compress/Compressor;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method <init>(Lorg/apache/hadoop/io/file/tfile/TFile$Reader;Lorg/apache/hadoop/io/file/tfile/RawComparable;Lorg/apache/hadoop/io/file/tfile/RawComparable;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer$ValueRegister:
method flush()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method createDecompressionStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;I)Ljava/io/InputStream;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local j *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$DataIndex:
method <init>(Ljava/lang/String;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method <init>(IJ)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$BlockAppender:
method <init>(Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockRegister;Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$WBlockState;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method upperBound(Lorg/apache/hadoop/io/file/tfile/RawComparable;)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeString(Ljava/io/DataOutput;Ljava/lang/String;)V:
local len:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
field version:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
method readAndVerify(Ljava/io/DataInput;)V:
new *0:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScannerByByteRange(JJ)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getValue([BI)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeVLong(Ljava/io/DataOutput;J)V:
local len:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$MemcmpRawComparator:
method compare([BII[BII)I:
parameter 4:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$BlockReader:
method getCompressionName()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;)I:
local high:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareMetaBlock(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getBlockReader(I)Lorg/apache/hadoop/io/file/tfile/BCFile$Reader$BlockReader;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method getBlockIndexNear(J)I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method write(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
field buf:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareMetaBlock(Ljava/lang/String;Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;)Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
local mbr:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method createCompressionStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;I)Ljava/io/OutputStream;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method read()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$SingleChunkEncoder:
method write(I)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method makeComparator(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local region:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer$KeyRegister:
method close()V:
local lastKey:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(ILjava/io/DataInput;Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
new *6: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method getBlockIndexNear(J)I:
local list:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method set(IJ)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method isClosed()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getMetaBlock(Ljava/lang/String;)Ljava/io/DataInputStream;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method append([BII[BII)V:
local dosKey:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method upperBound([BII)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method getComparatorString()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareMetaBlock(Ljava/lang/String;Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;)Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method inBlockAdvance(J)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method writeChunk([BIIZ)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method read([B)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method <init>(Lorg/apache/hadoop/fs/FSDataInputStream;JJ)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$RBlockState:
method <init>(Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;Lorg/apache/hadoop/fs/FSDataInputStream;Lorg/apache/hadoop/io/file/tfile/BCFile$BlockRegion;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression:
method getCompressionAlgorithmByName(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScannerByRecordNum(JJ)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method read([BII)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
field lastChunk:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method equals(Ljava/lang/Object;)Z:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method createCompressionStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;I)Ljava/io/OutputStream;:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
field fsOutputBuffer:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(ILjava/io/DataInput;Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method prepareAppendValue(I)Ljava/io/DataOutputStream;:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
field AB_MAGIC_BCFILE:
typecast *10: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method getBlockIndexNear(J)I:
local idx:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class ByteArray:
method <init>([B)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method <init>(Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/conf/Configuration;)V:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
field end:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getLastKey()Lorg/apache/hadoop/io/file/tfile/RawComparable;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method upperBound(Lorg/apache/hadoop/io/file/tfile/RawComparable;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method checkKey()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method <init>(Ljava/io/DataOutputStream;[B)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method getRecordNumByLocation(LReader/Location;)J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method <init>(Lorg/apache/hadoop/fs/FSDataOutputStream;ILjava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method write([BII)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
method toString()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;)I:
local mid:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareDataBlock()Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
local dbr:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local offset *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method <init>(Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/conf/Configuration;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer$KeyRegister:
field expectedLength:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$BytesComparator:
method <init>(Lorg/apache/hadoop/io/RawComparator;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method <init>(Lorg/apache/hadoop/fs/FSDataOutputStream;ILjava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
typecast *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndexEntry:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$Scalar:
method magnitude()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getKey([B)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
field valueBufferInputStream:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
method getFSInputBufferSize(Lorg/apache/hadoop/conf/Configuration;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method hashCode()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$ScalarLong:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getEntryComparator()Ljava/util/Comparator;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(ILjava/io/DataInput;Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
local buffer:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$RBlockState:
method <init>(Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;Lorg/apache/hadoop/fs/FSDataInputStream;Lorg/apache/hadoop/io/file/tfile/BCFile$BlockRegion;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method <init>(Lorg/apache/hadoop/io/file/tfile/TFile$Reader;Lorg/apache/hadoop/io/file/tfile/RawComparable;Lorg/apache/hadoop/io/file/tfile/RawComparable;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method compareTo([B)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$BytesComparator:
method compare(Lorg/apache/hadoop/io/file/tfile/RawComparable;Lorg/apache/hadoop/io/file/tfile/RawComparable;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndex:
method <init>(Ljava/io/DataInput;)V:
local nx:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method <init>(Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/conf/Configuration;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScanner([B[B)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
parameter 1:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method initBlock(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local e *1:
type:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method seekTo([BII)Z:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method isSupported()Z:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
method compareTo(Lorg/apache/hadoop/io/file/tfile/Utils$Version;)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local it *4:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareMetaBlock(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScannerByRecordNum(JJ)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndex:
method <init>(Ljava/io/DataInput;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
method compareTo(Lorg/apache/hadoop/io/file/tfile/Utils$Version;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
method <init>(Ljava/io/DataInput;)V:
local len:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method createReader(Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;Lorg/apache/hadoop/io/file/tfile/BCFile$BlockRegion;)Lorg/apache/hadoop/io/file/tfile/BCFile$Reader$BlockReader;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
method equals(Ljava/lang/Object;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method skip(J)J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getKey([BI)I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
field recordCount:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$BlockAppender:
method flush()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local i:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method append([BII[BII)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getBlockEntryCount(I)J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
field blkAppender:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(ILjava/io/DataInput;Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
new *10: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method readVLong(Ljava/io/DataInput;)J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$BlockAppender:
method getRawSize()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method reset(Ljava/io/DataInputStream;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method read([BII)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
method <init>(Ljava/io/DataInput;)V:
new *0:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$BytesComparator:
field cmp:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeVLong(Ljava/io/DataOutput;J)V:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class SimpleBufferedOutputStream:
field buf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression:
method getSupportedAlgorithms()[Ljava/lang/String;:
local ret:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper$Align:
method format(JILorg/apache/hadoop/io/file/tfile/TFileDumper$Align;)Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method available()I:
local avail:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getEntryComparator()Ljava/util/Comparator;:
new *1:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method readVInt(Ljava/io/DataInput;)I:
local ret:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
method <init>(Ljava/io/DataInput;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
method getFSOutputBufferSize(Lorg/apache/hadoop/conf/Configuration;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getLastKey()Lorg/apache/hadoop/io/file/tfile/RawComparable;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method prepareAppendKey(I)Ljava/io/DataOutputStream;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method getBlockIndex()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareMetaBlock(Ljava/lang/String;Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;)Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$BlockReader:
method getStartPos()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method <init>(IJ)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$RBlockState:
method <init>(Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;Lorg/apache/hadoop/fs/FSDataInputStream;Lorg/apache/hadoop/io/file/tfile/BCFile$BlockRegion;Lorg/apache/hadoop/conf/Configuration;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeVLong(Ljava/io/DataOutput;J)V:
typecast *5: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeVLong(Ljava/io/DataOutput;J)V:
typecast *4: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
method offset()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method <init>(Ljava/io/DataInput;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method upperBound([BII)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
parameter 2:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getRecordNumByLocation(Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;)J:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndexEntry:
method write(Ljava/io/DataOutput;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method <init>(Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/conf/Configuration;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method lowerBound([BII)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method createDecompressionStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;I)Ljava/io/InputStream;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScanner([B[B)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class ByteArray:
field offset:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$WBlockState:
field fsOut:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
field count:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$MemcmpRawComparator:
method compare([BII[BII)I:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndex:
field index:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndexEntry:
field region:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method makeComparator(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;:
local compClassName:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$DataIndex:
method write(Ljava/io/DataOutput;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$BlockReader:
field rBlkState:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$BlockAppender:
field closed:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
field defaultClazz:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method append([B[B)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method createDecompressionStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;I)Ljava/io/InputStream;:
local bis1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local entrySet:
type:
inner-type 3,0, 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScanner([B[B)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$DataIndex:
method <init>(Ljava/io/DataInput;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method isLastChunk()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$BlockRegister:
method register(JJJ)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class SimpleBufferedOutputStream:
method write(I)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method begin()Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer$State:
field READY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$MemcmpRawComparator:
method compare([BII[BII)I:
parameter 5:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method getEntry(I)Lorg/apache/hadoop/io/file/tfile/TFile$TFileIndexEntry;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method seekTo([BII)Z:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class ByteArray:
field buffer:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method makeComparator(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;:
local compClass:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
method offset()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$DataIndex:
method <init>(Ljava/io/DataInput;)V:
local region:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local metaBlkCnt:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
field AB_MAGIC_BCFILE:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$WBlockState:
method getCompressedSize()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method inBlockAdvance(Lorg/apache/hadoop/io/file/tfile/RawComparable;Z)Z:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method read([BII)I:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method createCompressionStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;I)Ljava/io/OutputStream;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method writeChunk([BIIZ)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method seekTo([B)Z:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method compareTo([B)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;)I:
local midVal:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$MemcmpRawComparator:
method compare(Ljava/lang/Object;Ljava/lang/Object;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getEntryCount()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
field beginLocation:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method readVLong(Ljava/io/DataInput;)J:
local firstByte:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local rawSizeWidth:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method writeKey(Ljava/io/OutputStream;)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method getBCFileVersion()Lorg/apache/hadoop/io/file/tfile/Utils$Version;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class SimpleBufferedOutputStream:
method write(I)V:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method inBlockAdvance(Lorg/apache/hadoop/io/file/tfile/RawComparable;Z)Z:
local entryInBlock:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
field COMPARATOR_JCLASS:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method getDataBlock(I)Lorg/apache/hadoop/io/file/tfile/BCFile$Reader$BlockReader;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
field FS_INPUT_BUF_SIZE_ATTR:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method getComparatorString()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method readVLong(Ljava/io/DataInput;)J:
typecast *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getValue([BI)I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$SingleChunkEncoder:
method write(I)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
field LZO:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method skip(J)J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
field end:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndexEntry:
method <init>(Ljava/lang/String;Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;Lorg/apache/hadoop/io/file/tfile/BCFile$BlockRegion;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method <init>(Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/conf/Configuration;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndex:
method <init>(Ljava/io/DataInput;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$FinishOnFlushCompressionStream:
method write([BII)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method createCompressionStream(Ljava/io/OutputStream;Lorg/apache/hadoop/io/compress/Compressor;I)Ljava/io/OutputStream;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method upperBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm$1:
method isSupported()Z:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method <init>(Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/conf/Configuration;)V:
local blockR:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
field AB_MAGIC_BCFILE:
typecast *14: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method read([BII)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
method compareTo(Lorg/apache/hadoop/io/file/tfile/Utils$Version;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
field FS_OUTPUT_BUF_SIZE_ATTR:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndexEntry:
method write(Ljava/io/DataOutput;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method equals(Ljava/lang/Object;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method read([B)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$BytesComparator:
method compare([BII[BII)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method compareKeys([BII[BII)I:
parameter 3:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(ILjava/io/DataInput;Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local path:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
field oneByte:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
field AB_MAGIC_BCFILE:
typecast *9: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndexEntry:
method getRegion()Lorg/apache/hadoop/io/file/tfile/BCFile$BlockRegion;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method writeBufData([BII)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method lowerBound([B)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method seekTo([BII)Z:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
method equals(Ljava/lang/Object;)Z:
instanceof *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
method readAndVerify(Ljava/io/DataInput;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class ByteArray:
method <init>([B)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class MetaBlockDoesNotExist:
method <init>(Ljava/lang/String;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local it *2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareMetaBlock(Ljava/lang/String;Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;)Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method equals(Ljava/lang/Object;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScannerByKey(Lorg/apache/hadoop/io/file/tfile/RawComparable;Lorg/apache/hadoop/io/file/tfile/RawComparable;)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
implements 1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method createDecompressionStream(Ljava/io/InputStream;Lorg/apache/hadoop/io/compress/Decompressor;I)Ljava/io/InputStream;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method read()I:
local ret:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method readVLong(Ljava/io/DataInput;)J:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$BytesComparator:
method compare(Lorg/apache/hadoop/io/file/tfile/RawComparable;Lorg/apache/hadoop/io/file/tfile/RawComparable;)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getRecordNumByLocation(Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;)J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method <init>(ILjava/io/DataInput;Lorg/apache/hadoop/io/file/tfile/CompareUtils$BytesComparator;)V:
local firstKeyLength:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method createScanner(Lorg/apache/hadoop/io/file/tfile/RawComparable;Lorg/apache/hadoop/io/file/tfile/RawComparable;)Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Scanner;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method returnDecompressor(Lorg/apache/hadoop/io/compress/Decompressor;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class ByteArray:
method <init>([BII)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
method prepareMetaBlock(Ljava/lang/String;Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;)Lorg/apache/hadoop/io/file/tfile/BCFile$Writer$BlockAppender;:
local wbs:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeString(Ljava/io/DataOutput;Ljava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method getRemain()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method skip(J)J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method append([BII[BII)V:
parameter 5:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile:
field CHUNK_BUF_SIZE_ATTR:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method getLocationByRecordNum(J)LReader/Location;:
local lastRecNum:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method close()V:
local outMeta:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local region *2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndexEntry:
method <init>(Ljava/io/DataInput;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method getDataBlock(I)Lorg/apache/hadoop/io/file/tfile/BCFile$Reader$BlockReader;:
local region:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local name:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndex:
method <init>()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
method <init>(Lorg/apache/hadoop/fs/FSDataOutputStream;ILjava/lang/String;Ljava/lang/String;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
field AB_MAGIC_BCFILE:
typecast *6: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method read([BII)I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method write([BII)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$SingleChunkEncoder:
method write([B)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method createReader(Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;Lorg/apache/hadoop/io/file/tfile/BCFile$BlockRegion;)Lorg/apache/hadoop/io/file/tfile/BCFile$Reader$BlockReader;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method mark(I)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
method buffer()[B:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$ScalarComparator:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
field GZ:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndexEntry:
method <init>(Ljava/lang/String;Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;Lorg/apache/hadoop/io/file/tfile/BCFile$BlockRegion;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Location:
method <init>(Lorg/apache/hadoop/io/file/tfile/TFile$Reader$Location;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
method compatibleWith(Lorg/apache/hadoop/io/file/tfile/Utils$Version;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$SingleChunkEncoder:
method write([B)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local metaBlks:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method getBlockIndexNear(J)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$MetaIndex:
method <init>(Ljava/io/DataInput;)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$MemcmpRawComparator:
implements 0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class RawComparable:
method buffer()[B:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local blkLenWidth *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
method toString()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getEntryComparator()Ljava/util/Comparator;:
new *1:
inner-type 3,0, 1,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Writer:
field tfileMeta:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
field remain:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$DataIndex:
method <init>(Ljava/io/DataInput;)V:
local n:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class ByteArray:
method <init>([BII)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$BytesComparator:
method compare(Lorg/apache/hadoop/io/file/tfile/RawComparable;Lorg/apache/hadoop/io/file/tfile/RawComparable;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$BlockAppender:
method getCompressedSize()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression$Algorithm:
method getCodec()Lorg/apache/hadoop/io/compress/CompressionCodec;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Compression:
method getCompressionAlgorithmByName(Ljava/lang/String;)Lorg/apache/hadoop/io/file/tfile/Compression$Algorithm;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkEncoder:
method writeBufData([BII)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Magic:
method readAndVerify(Ljava/io/DataInput;)V:
local abMagic:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method initBlock(I)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local indexEntry:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method writeValue(Ljava/io/OutputStream;)J:
local chunkSize:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method <init>(Ljava/io/DataInput;)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
method equals(Ljava/lang/Object;)Z:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method writeVLong(Ljava/io/DataOutput;J)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
method <init>(SS)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getEntryComparator()Ljava/util/Comparator;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BoundedRangeFileInputStream:
method markSupported()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndexEntry:
method <init>([BIIJ)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
method isSorted()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$SingleChunkEncoder:
method close()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local length:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader:
method <init>(Lorg/apache/hadoop/fs/FSDataInputStream;JLorg/apache/hadoop/conf/Configuration;)V:
local offsetIndexMeta:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Reader$BlockReader:
method getCompressedSize()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
local mid:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$DataBlockRegister:
method register(JJJ)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$SingleChunkEncoder:
method write([BII)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils:
method lowerBound(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I:
local ret:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$MemcmpRawComparator:
method compare([BII[BII)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$WBlockState:
method finish()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method upperBound([B)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader:
method getKeyNear(J)Lorg/apache/hadoop/io/file/tfile/RawComparable;:
local blockIndex:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer$WBlockState:
method getCompressedSize()J:
local ret:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileIndex:
method getLocationByRecordNum(J)LReader/Location;:
local idx:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class BCFile$Writer:
field dataIndex:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Chunk$ChunkDecoder:
method read([BII)I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner:
method inBlockAdvance(Lorg/apache/hadoop/io/file/tfile/RawComparable;Z)Z:
local curBid:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local offsetWidth *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFileDumper:
method dumpInfo(Ljava/lang/String;Ljava/io/PrintStream;Lorg/apache/hadoop/conf/Configuration;)V:
local it:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$Reader$Scanner$Entry:
method getValue(Lorg/apache/hadoop/io/BytesWritable;)J:
local remain:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class CompareUtils$ScalarLong:
field magnitude:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class Utils$Version:
method equals(Ljava/lang/Object;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.file.tfile:
class TFile$TFileMeta:
field strComparator:
type: @ostrusted.quals.OsUntrusted

