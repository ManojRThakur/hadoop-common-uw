
package ostrusted.quals:
annotation @OsUntrusted:
package ostrusted.quals:
annotation @OsTrusted:


package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method compareTo(Ljava/lang/Object;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method genericReadTypeID(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)Lorg/apache/hadoop/record/meta/TypeID;:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
method getTypeVal()B:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID$RIOType:
field BUFFER:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
field StringTypeID:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method equals(Ljava/lang/Object;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class FieldTypeInfo:
method equals(Ljava/lang/Object;)Z:
local fti:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class MapTypeID:
method getValueTypeID()Lorg/apache/hadoop/record/meta/TypeID;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method genericReadTypeID(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)Lorg/apache/hadoop/record/meta/TypeID;:
local stID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method compareTo(Ljava/lang/Object;)I:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method getNestedStructTypeInfo(Ljava/lang/String;)Lorg/apache/hadoop/record/meta/RecordTypeInfo;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
field DoubleTypeID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class FieldTypeInfo:
method write(Lorg/apache/hadoop/record/RecordOutput;Ljava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
field BoolTypeID:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class MapTypeID:
method <init>(Lorg/apache/hadoop/record/meta/TypeID;Lorg/apache/hadoop/record/meta/TypeID;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method getFieldTypeInfos()Ljava/util/Collection;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID$RIOType:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class VectorTypeID:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID$RIOType:
field LONG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class FieldTypeInfo:
method equals(Lorg/apache/hadoop/record/meta/FieldTypeInfo;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
extends:
inner-type 1,0, 1,0, 1,0, 1,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method genericReadTypeID(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)Lorg/apache/hadoop/record/meta/TypeID;:
local numElems:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
field name:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method deserialize(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class VectorTypeID:
method hashCode()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class FieldTypeInfo:
method <init>(Ljava/lang/String;Lorg/apache/hadoop/record/meta/TypeID;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method findStruct(Ljava/lang/String;)Lorg/apache/hadoop/record/meta/StructTypeID;:
local ti:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class FieldTypeInfo:
method hashCode()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
field StringTypeID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class Utils:
method skip(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;Lorg/apache/hadoop/record/meta/TypeID;)V:
local midx1:
type:
inner-type 1,0, 1,0, 1,0, 1,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class Utils:
method skip(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;Lorg/apache/hadoop/record/meta/TypeID;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method addField(Ljava/lang/String;Lorg/apache/hadoop/record/meta/TypeID;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method findStruct(Ljava/lang/String;)Lorg/apache/hadoop/record/meta/StructTypeID;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method addField(Ljava/lang/String;Lorg/apache/hadoop/record/meta/TypeID;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class Utils:
method skip(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;Lorg/apache/hadoop/record/meta/TypeID;)V:
local vtID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID$RIOType:
field MAP:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method genericReadTypeID(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)Lorg/apache/hadoop/record/meta/TypeID;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method getName()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method read(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class Utils:
method skip(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;Lorg/apache/hadoop/record/meta/TypeID;)V:
local vidx1:
type:
inner-type 1,0, 1,0, 1,0, 1,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class FieldTypeInfo:
method equals(Ljava/lang/Object;)Z:
instanceof *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class FieldTypeInfo:
method <init>(Ljava/lang/String;Lorg/apache/hadoop/record/meta/TypeID;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class VectorTypeID:
method hashCode()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class Utils:
method skip(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;Lorg/apache/hadoop/record/meta/TypeID;)V:
local tInfo:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method setName(Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
field typeInfos:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method setName(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
method hashCode()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class FieldTypeInfo:
method equals(Lorg/apache/hadoop/record/meta/FieldTypeInfo;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method genericReadTypeInfo(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)Lorg/apache/hadoop/record/meta/FieldTypeInfo;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class MapTypeID:
method hashCode()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
method getTypeVal()B:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class VectorTypeID:
method equals(Ljava/lang/Object;)Z:
local vti:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
method write(Lorg/apache/hadoop/record/RecordOutput;Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method genericReadTypeID(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)Lorg/apache/hadoop/record/meta/TypeID;:
local tIDValue:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
field sTid:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class Utils:
method skip(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;Lorg/apache/hadoop/record/meta/TypeID;)V:
local it:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method genericReadTypeID(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)Lorg/apache/hadoop/record/meta/TypeID;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class MapTypeID:
method <init>(Lorg/apache/hadoop/record/meta/TypeID;Lorg/apache/hadoop/record/meta/TypeID;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method findStruct(Ljava/lang/String;)Lorg/apache/hadoop/record/meta/StructTypeID;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method write(Lorg/apache/hadoop/record/RecordOutput;Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method getNestedStructTypeInfo(Ljava/lang/String;)Lorg/apache/hadoop/record/meta/RecordTypeInfo;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
method equals(Ljava/lang/Object;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class MapTypeID:
method equals(Ljava/lang/Object;)Z:
local mti:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
field LongTypeID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class Utils:
method skip(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;Lorg/apache/hadoop/record/meta/TypeID;)V:
local stID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method addAll(Ljava/util/Collection;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class MapTypeID:
method write(Lorg/apache/hadoop/record/RecordOutput;Ljava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method genericReadTypeID(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)Lorg/apache/hadoop/record/meta/TypeID;:
local typeVal:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method genericReadTypeInfo(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)Lorg/apache/hadoop/record/meta/FieldTypeInfo;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
field IntTypeID:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class FieldTypeInfo:
method <init>(Ljava/lang/String;Lorg/apache/hadoop/record/meta/TypeID;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class Utils:
method skip(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;Lorg/apache/hadoop/record/meta/TypeID;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
field BufferTypeID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method deserialize(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class VectorTypeID:
method equals(Ljava/lang/Object;)Z:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method <init>(Lorg/apache/hadoop/record/meta/RecordTypeInfo;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method getNestedStructTypeInfo(Ljava/lang/String;)Lorg/apache/hadoop/record/meta/RecordTypeInfo;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
method write(Lorg/apache/hadoop/record/RecordOutput;Ljava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class MapTypeID:
method write(Lorg/apache/hadoop/record/RecordOutput;Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method writeRest(Lorg/apache/hadoop/record/RecordOutput;Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method genericReadTypeID(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)Lorg/apache/hadoop/record/meta/TypeID;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
field FloatTypeID:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class FieldTypeInfo:
method equals(Lorg/apache/hadoop/record/meta/FieldTypeInfo;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
method hashCode()I:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method writeRest(Lorg/apache/hadoop/record/RecordOutput;Ljava/lang/String;)V:
local ti:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
field typeInfos:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class FieldTypeInfo:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
field FloatTypeID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method genericReadTypeID(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)Lorg/apache/hadoop/record/meta/TypeID;:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method genericReadTypeID(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)Lorg/apache/hadoop/record/meta/TypeID;:
local i:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class FieldTypeInfo:
method equals(Ljava/lang/Object;)Z:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID$RIOType:
field VECTOR:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class Utils:
method skip(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;Lorg/apache/hadoop/record/meta/TypeID;)V:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method genericReadTypeID(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)Lorg/apache/hadoop/record/meta/TypeID;:
local tID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
method equals(Ljava/lang/Object;)Z:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
field typeInfos:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class MapTypeID:
method equals(Ljava/lang/Object;)Z:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method write(Lorg/apache/hadoop/record/RecordOutput;Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method <init>(Ljava/lang/String;Lorg/apache/hadoop/record/meta/StructTypeID;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class VectorTypeID:
method write(Lorg/apache/hadoop/record/RecordOutput;Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method serialize(Lorg/apache/hadoop/record/RecordOutput;Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class MapTypeID:
method getValueTypeID()Lorg/apache/hadoop/record/meta/TypeID;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
field IntTypeID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class VectorTypeID:
method write(Lorg/apache/hadoop/record/RecordOutput;Ljava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class MapTypeID:
method getKeyTypeID()Lorg/apache/hadoop/record/meta/TypeID;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class VectorTypeID:
method equals(Ljava/lang/Object;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID$RIOType:
field BYTE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class Utils:
method skip(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;Lorg/apache/hadoop/record/meta/TypeID;)V:
typecast *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method genericReadTypeInfo(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)Lorg/apache/hadoop/record/meta/FieldTypeInfo;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method genericReadTypeID(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)Lorg/apache/hadoop/record/meta/TypeID;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class FieldTypeInfo:
field fieldID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
method <init>(B)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
field BufferTypeID:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method genericReadTypeInfo(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)Lorg/apache/hadoop/record/meta/FieldTypeInfo;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method genericReadTypeInfo(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)Lorg/apache/hadoop/record/meta/FieldTypeInfo;:
local fieldName:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method <init>(Ljava/lang/String;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method read(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class FieldTypeInfo:
method equals(Ljava/lang/Object;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method getNestedStructTypeInfo(Ljava/lang/String;)Lorg/apache/hadoop/record/meta/RecordTypeInfo;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
field typeVal:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method findStruct(Ljava/lang/String;)Lorg/apache/hadoop/record/meta/StructTypeID;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class VectorTypeID:
field typeIDElement:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method <init>(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method getFieldTypeInfos()Ljava/util/Collection;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method write(Lorg/apache/hadoop/record/RecordOutput;Ljava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class VectorTypeID:
method equals(Ljava/lang/Object;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID$RIOType:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class VectorTypeID:
method equals(Ljava/lang/Object;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method read(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)V:
local i:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
method <init>(B)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method <init>()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method equals(Ljava/lang/Object;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class FieldTypeInfo:
method getFieldID()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class Utils:
method skip(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;Lorg/apache/hadoop/record/meta/TypeID;)V:
typecast *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method getName()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method hashCode()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method compareTo(Ljava/lang/Object;)I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
field DoubleTypeID:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class Utils:
method skip(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;Lorg/apache/hadoop/record/meta/TypeID;)V:
local mtID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method genericReadTypeID(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)Lorg/apache/hadoop/record/meta/TypeID;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class MapTypeID:
method <init>(Lorg/apache/hadoop/record/meta/TypeID;Lorg/apache/hadoop/record/meta/TypeID;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class MapTypeID:
method hashCode()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class FieldTypeInfo:
method hashCode()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
field ByteTypeID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method getNestedStructTypeInfo(Ljava/lang/String;)Lorg/apache/hadoop/record/meta/RecordTypeInfo;:
local stid:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class VectorTypeID:
method <init>(Lorg/apache/hadoop/record/meta/TypeID;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class Utils:
method skip(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;Lorg/apache/hadoop/record/meta/TypeID;)V:
local it:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class MapTypeID:
field typeIDKey:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class FieldTypeInfo:
method getFieldID()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method genericReadTypeID(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)Lorg/apache/hadoop/record/meta/TypeID;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class MapTypeID:
method equals(Ljava/lang/Object;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method getFieldTypeInfos()Ljava/util/Collection;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method addField(Ljava/lang/String;Lorg/apache/hadoop/record/meta/TypeID;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class VectorTypeID:
method <init>(Lorg/apache/hadoop/record/meta/TypeID;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method read(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)V:
local numElems:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
field typeInfos:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method hashCode()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID$RIOType:
field FLOAT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method deserialize(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
field ByteTypeID:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method genericReadTypeInfo(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)Lorg/apache/hadoop/record/meta/FieldTypeInfo;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method read(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class Utils:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method addAll(Ljava/util/Collection;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class MapTypeID:
method equals(Ljava/lang/Object;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
method write(Lorg/apache/hadoop/record/RecordOutput;Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class MapTypeID:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method addAll(Ljava/util/Collection;)V:
parameter 0:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method <init>(Ljava/lang/String;Lorg/apache/hadoop/record/meta/StructTypeID;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
method equals(Ljava/lang/Object;)Z:
local oTypeID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID$RIOType:
field STRING:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class MapTypeID:
method write(Lorg/apache/hadoop/record/RecordOutput;Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method <init>(Ljava/lang/String;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
field LongTypeID:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method getFieldTypeInfos()Ljava/util/Collection;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class MapTypeID:
field typeIDValue:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method <init>(Ljava/lang/String;Lorg/apache/hadoop/record/meta/StructTypeID;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class VectorTypeID:
method getElementTypeID()Lorg/apache/hadoop/record/meta/TypeID;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class VectorTypeID:
method getElementTypeID()Lorg/apache/hadoop/record/meta/TypeID;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID$RIOType:
field BOOL:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method getFieldTypeInfos()Ljava/util/Collection;:
return:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method addField(Ljava/lang/String;Lorg/apache/hadoop/record/meta/TypeID;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
method hashCode()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
method equals(Ljava/lang/Object;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
field BoolTypeID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class FieldTypeInfo:
method getTypeID()Lorg/apache/hadoop/record/meta/TypeID;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class FieldTypeInfo:
method write(Lorg/apache/hadoop/record/RecordOutput;Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method writeRest(Lorg/apache/hadoop/record/RecordOutput;Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID$RIOType:
field STRUCT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class VectorTypeID:
method write(Lorg/apache/hadoop/record/RecordOutput;Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID:
method equals(Ljava/lang/Object;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class FieldTypeInfo:
method equals(Ljava/lang/Object;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method writeRest(Lorg/apache/hadoop/record/RecordOutput;Ljava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method compareTo(Ljava/lang/Object;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method add(Lorg/apache/hadoop/record/meta/FieldTypeInfo;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method <init>(Lorg/apache/hadoop/record/meta/RecordTypeInfo;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method genericReadTypeInfo(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)Lorg/apache/hadoop/record/meta/FieldTypeInfo;:
local id:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method add(Lorg/apache/hadoop/record/meta/FieldTypeInfo;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class Utils:
method skip(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;Lorg/apache/hadoop/record/meta/TypeID;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method serialize(Lorg/apache/hadoop/record/RecordOutput;Ljava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class FieldTypeInfo:
method getTypeID()Lorg/apache/hadoop/record/meta/TypeID;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class Utils:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method equals(Ljava/lang/Object;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class Utils:
method skip(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;Lorg/apache/hadoop/record/meta/TypeID;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method serialize(Lorg/apache/hadoop/record/RecordOutput;Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method compareTo(Ljava/lang/Object;)I:
instanceof *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class FieldTypeInfo:
method write(Lorg/apache/hadoop/record/RecordOutput;Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class FieldTypeInfo:
field typeID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class MapTypeID:
method equals(Ljava/lang/Object;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method genericReadTypeID(Lorg/apache/hadoop/record/RecordInput;Ljava/lang/String;)Lorg/apache/hadoop/record/meta/TypeID;:
local tIDKey:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method getFieldTypeInfos()Ljava/util/Collection;:
return:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID$RIOType:
field DOUBLE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class RecordTypeInfo:
method compareTo(Ljava/lang/Object;)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class MapTypeID:
method getKeyTypeID()Lorg/apache/hadoop/record/meta/TypeID;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class TypeID$RIOType:
field INT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class StructTypeID:
method findStruct(Ljava/lang/String;)Lorg/apache/hadoop/record/meta/StructTypeID;:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.record.meta:
class FieldTypeInfo:
method equals(Ljava/lang/Object;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted

