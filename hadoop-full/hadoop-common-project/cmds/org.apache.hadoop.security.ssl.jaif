
package ostrusted.quals:
annotation @OsUntrusted:
package ostrusted.quals:
annotation @OsTrusted:


package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
field SSL_REQUIRE_CLIENT_CERT_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
field SSLCERTIFICATE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;Ljava/security/cert/X509Certificate;)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V:
local spue:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method getKeystoresFactory()Lorg/apache/hadoop/security/ssl/KeyStoresFactory;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
field password:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getCNs(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
local i *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method getTrustManagers()[Ljavax/net/ssl/TrustManager;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method verify(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method needsReload()Z:
local reload:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$5:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 2:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class KeyStoresFactory:
method getKeyManagers()[Ljavax/net/ssl/KeyManager;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method configure(Ljava/net/HttpURLConnection;)Ljava/net/HttpURLConnection;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method readSSLConfiguration(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;)Lorg/apache/hadoop/conf/Configuration;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
field DEFAULT_SSL_REQUIRE_CLIENT_CERT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
field EMPTY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 2:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
local names:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
field trustManager:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$4:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
field conf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check(Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getDNSSubjectAlts(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method verify(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method loadTrustManager()Ljavax/net/ssl/X509TrustManager;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method createSSLSocketFactory()Ljavax/net/ssl/SSLSocketFactory;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$3:
method toString()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method check(Ljava/lang/String;Ljava/security/cert/X509Certificate;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method run()V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method getHostnameVerifier()Ljavax/net/ssl/HostnameVerifier;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method loadTrustManager()Ljavax/net/ssl/X509TrustManager;:
local ks:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method checkClientTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method init(LSSLFactory/Mode;)V:
local requireClientCert:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
field EMPTY:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$3:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$2:
method toString()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
field DEFAULT_SSL_TRUSTSTORE_RELOAD_INTERVAL:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method verify(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z:
new *0:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method resolvePropertyName(LSSLFactory/Mode;Ljava/lang/String;)Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getCNs(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
local x:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method loadTrustManager()Ljavax/net/ssl/X509TrustManager;:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$1:
method toString()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method getHostnameVerifier(Lorg/apache/hadoop/conf/Configuration;)Ljavax/net/ssl/HostnameVerifier;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
field BAD_COUNTRY_2LDS:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getDNSSubjectAlts(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
local it:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getDNSSubjectAlts(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method <init>(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Lorg/apache/hadoop/conf/Configuration;)V:
local klass:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method getAcceptedIssuers()[Ljava/security/cert/X509Certificate;:
return:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$1:
method toString()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method getAcceptedIssuers()[Ljava/security/cert/X509Certificate;:
local issuers:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
field SSL_KEYSTORE_LOCATION_TPL_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getDNSSubjectAlts(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
local type:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method isIP4Address(Ljava/lang/String;)Z:
local i:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method check([Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$4:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getDNSSubjectAlts(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory$Mode:
field CLIENT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
local buf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
field LOCALHOSTS:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method check(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 1:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method configure(Ljava/net/HttpURLConnection;)Ljava/net/HttpURLConnection;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method check(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
local hostName:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getCNs(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method createSSLSocketFactory()Ljavax/net/ssl/SSLSocketFactory;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method check(Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method <init>(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Lorg/apache/hadoop/conf/Configuration;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method verify(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method configure(Ljava/net/HttpURLConnection;)Ljava/net/HttpURLConnection;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method readSSLConfiguration(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;)Lorg/apache/hadoop/conf/Configuration;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 1:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method init()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method check(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$2:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 2:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method init(LSSLFactory/Mode;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory$Mode:
field SERVER:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getDNSSubjectAlts(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
local subjectAltList:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getDNSSubjectAlts(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
local subjectAlts:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method init(LSSLFactory/Mode;)V:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getCNs(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
local cns:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$2:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
field type:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;Ljava/security/cert/X509Certificate;)V:
local subjectAlts:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method getReloadInterval()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method configure(Ljava/net/HttpURLConnection;)Ljava/net/HttpURLConnection;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method getAcceptedIssuers()[Ljava/security/cert/X509Certificate;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
local hostnames:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method <init>(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method getHostnameVerifier(Lorg/apache/hadoop/conf/Configuration;)Ljavax/net/ssl/HostnameVerifier;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$3:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 1:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method check(Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$5:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
field STRICT_IE6:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
field SSL_HOSTNAME_VERIFIER_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method <init>(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Lorg/apache/hadoop/conf/Configuration;)V:
local klass:
type:
inner-type 3,0, 2,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method verify(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
new *4: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method isLocalhost(Ljava/lang/String;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;Ljava/security/cert/X509Certificate;)V:
local cns:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method getHostnameVerifier()Ljavax/net/ssl/HostnameVerifier;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method run()V:
local ex:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method init(LSSLFactory/Mode;)V:
local locationProperty:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method checkClientTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method isIP4Address(Ljava/lang/String;)Z:
local tld:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method init(LSSLFactory/Mode;)V:
local keystoreLocation:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$4:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method <init>(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Lorg/apache/hadoop/conf/Configuration;)V:
local klass:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method acceptableCountryWildcard(Ljava/lang/String;)Z:
local cnLen:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method countDots(Ljava/lang/String;)I:
local i:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$3:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 2:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;Ljava/security/cert/X509Certificate;)V:
local subjectAlts:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method createSSLServerSocketFactory()Ljavax/net/ssl/SSLServerSocketFactory;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$4:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
field file:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method configure(Ljava/net/HttpURLConnection;)Ljava/net/HttpURLConnection;:
local ex:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method loadTrustManager()Ljavax/net/ssl/X509TrustManager;:
local trustManagerFactory:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V:
local certs:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method checkClientTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V:
local tm:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
field trustManagers:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method init(LSSLFactory/Mode;)V:
local truststorePassword:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
field context:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method check([Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method init(LSSLFactory/Mode;)V:
local truststoreType:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$2:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method checkClientTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
field SSL_TRUSTSTORE_TYPE_TPL_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method resolvePropertyName(LSSLFactory/Mode;Ljava/lang/String;)Ljava/lang/String;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method check([Ljava/lang/String;Ljava/security/cert/X509Certificate;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method loadTrustManager()Ljavax/net/ssl/X509TrustManager;:
local in:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method isIP4Address(Ljava/lang/String;)Z:
local isIP4:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check(Ljava/lang/String;Ljava/security/cert/X509Certificate;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method getHostnameVerifier(Lorg/apache/hadoop/conf/Configuration;)Ljavax/net/ssl/HostnameVerifier;:
local hostnameVerifier:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method setConf(Lorg/apache/hadoop/conf/Configuration;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method check(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method init(LSSLFactory/Mode;)V:
new *5: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method init(LSSLFactory/Mode;)V:
new *4: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
field lastLoaded:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
field DEFAULT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method init(LSSLFactory/Mode;)V:
local keyPasswordProperty:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getDNSSubjectAlts(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
return:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
field reloadInterval:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getDNSSubjectAlts(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
local list:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
field DEFAULT_KEYSTORE_TYPE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method getReloadInterval()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method init(LSSLFactory/Mode;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check(Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V:
new *0:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method <init>(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Lorg/apache/hadoop/conf/Configuration;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$5:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 1:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method getKeyManagers()[Ljavax/net/ssl/KeyManager;:
return:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method configure(Ljava/net/HttpURLConnection;)Ljava/net/HttpURLConnection;:
local sslConn:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method getTrustManagers()[Ljavax/net/ssl/TrustManager;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$3:
method toString()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check(Ljava/lang/String;Ljava/security/cert/X509Certificate;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method readSSLConfiguration(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;)Lorg/apache/hadoop/conf/Configuration;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$4:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 2:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V:
new *1:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$1:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getDNSSubjectAlts(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
typecast *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method getKeyManagers()[Ljavax/net/ssl/KeyManager;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$1:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method loadTrustManager()Ljavax/net/ssl/X509TrustManager;:
local trustManager1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getDNSSubjectAlts(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
local s:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method check(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method acceptableCountryWildcard(Ljava/lang/String;)Z:
local x:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method isIP4Address(Ljava/lang/String;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
field BAD_COUNTRY_2LDS:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
field DEFAULT_AND_LOCALHOST:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method init(LSSLFactory/Mode;)V:
local passwordProperty:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$4:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$4:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method countDots(Ljava/lang/String;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
field BAD_COUNTRY_2LDS:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$1:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
field EMPTY:
new *0:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method init(LSSLFactory/Mode;)V:
local truststoreLocation:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method verify(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z:
local certs:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method loadTrustManager()Ljavax/net/ssl/X509TrustManager;:
local trustManagers:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method countDots(Ljava/lang/String;)I:
local count:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;Ljava/security/cert/X509Certificate;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method readSSLConfiguration(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;)Lorg/apache/hadoop/conf/Configuration;:
local sslConfResource:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method <init>(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Lorg/apache/hadoop/conf/Configuration;)V:
insert-annotation Block.statement 7, ExpressionStatement.expression, Assignment.expression, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getCNs(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
new *2:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check(Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method checkServerTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method getAcceptedIssuers()[Ljava/security/cert/X509Certificate;:
local tm:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method createSSLEngine()Ljavax/net/ssl/SSLEngine;:
local sslEngine:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
parameter 1:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
field trustManagerRef:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
field keyManagers:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method init(LSSLFactory/Mode;)V:
local keystoreKeyPassword:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method getHostnameVerifier(Lorg/apache/hadoop/conf/Configuration;)Ljavax/net/ssl/HostnameVerifier;:
local verifier:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method readSSLConfiguration(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;)Lorg/apache/hadoop/conf/Configuration;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method getTrustManagers()[Ljavax/net/ssl/TrustManager;:
return:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
local h:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
implements 1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getDNSSubjectAlts(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
local subjectAlts:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$2:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
local it:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method init(LSSLFactory/Mode;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;Ljava/security/cert/X509Certificate;)V:
local cns:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method createSSLEngine()Ljavax/net/ssl/SSLEngine;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 1:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$5:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method destroy()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
field SSL_TRUSTSTORE_LOCATION_TPL_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method needsReload()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$3:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method init(LSSLFactory/Mode;)V:
local truststoreReloadInterval:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method check(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 2:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method getConf()Lorg/apache/hadoop/conf/Configuration;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
field LOCALHOSTS:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method init(LSSLFactory/Mode;)V:
local keyMgrFactory:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method countDots(Ljava/lang/String;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method createSSLServerSocketFactory()Ljavax/net/ssl/SSLServerSocketFactory;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check(Ljava/lang/String;Ljava/security/cert/X509Certificate;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method checkServerTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory$Mode:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getDNSSubjectAlts(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method configure(Ljava/net/HttpURLConnection;)Ljava/net/HttpURLConnection;:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method acceptableCountryWildcard(Ljava/lang/String;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method verify(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory$Mode:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
field conf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method verify(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method getHostnameVerifier(Lorg/apache/hadoop/conf/Configuration;)Ljavax/net/ssl/HostnameVerifier;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check(Ljava/lang/String;Ljava/security/cert/X509Certificate;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$5:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class KeyStoresFactory:
method getTrustManagers()[Ljavax/net/ssl/TrustManager;:
return:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getCNs(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method isClientCertRequired()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
field keyManagers:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method init(LSSLFactory/Mode;)V:
local is:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method setConf(Lorg/apache/hadoop/conf/Configuration;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method init(LSSLFactory/Mode;)V:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getDNSSubjectAlts(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
local c:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method init(LSSLFactory/Mode;)V:
local keystoreType:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$3:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method init(LSSLFactory/Mode;)V:
new *6: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method verify(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method checkServerTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;Ljava/security/cert/X509Certificate;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
local i *2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method init(LSSLFactory/Mode;)V:
new *6:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getCNs(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
return:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getCNs(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
local st:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method init(LSSLFactory/Mode;)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$5:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$1:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 2:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method init(LSSLFactory/Mode;)V:
local locationProperty *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method resolvePropertyName(LSSLFactory/Mode;Ljava/lang/String;)Ljava/lang/String;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
field SSL_KEYSTORE_TYPE_TPL_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$3:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method getKeyManagers()[Ljavax/net/ssl/KeyManager;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method getAcceptedIssuers()[Ljava/security/cert/X509Certificate;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getCNs(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method isLocalhost(Ljava/lang/String;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class KeyStoresFactory:
method getKeyManagers()[Ljavax/net/ssl/KeyManager;:
return:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method checkClientTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method isClientCertRequired()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method needsReload()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getCNs(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
local cnList:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V:
local session:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$1:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method getConf()Lorg/apache/hadoop/conf/Configuration;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
parameter 4:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class KeyStoresFactory:
method getKeyManagers()[Ljavax/net/ssl/KeyManager;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method <init>(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method check(Ljava/lang/String;Ljava/security/cert/X509Certificate;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
field running:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
local msg:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check(Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
local doWildcard:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getDNSSubjectAlts(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
local cpe:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method init(LSSLFactory/Mode;)V:
local keystorePassword:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
field STRICT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class KeyStoresFactory:
method destroy()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method init()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method createSSLEngine()Ljavax/net/ssl/SSLEngine;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method loadTrustManager()Ljavax/net/ssl/X509TrustManager;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
local i:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$1:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method verify(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z:
local x509:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
field LOCALHOSTS:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method isLocalhost(Ljava/lang/String;)Z:
local x:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
field mode:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
field hostnameVerifier:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method isLocalhost(Ljava/lang/String;)Z:
local x *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
field trustManagers:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
local cn:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getCNs(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
local subjectPrincipal:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check(Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method verify(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class KeyStoresFactory:
method getTrustManagers()[Ljavax/net/ssl/TrustManager;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method checkServerTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method verify(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 2:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
new *0:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V:
local in *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getCNs(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
insert-annotation Block.statement 4, If.thenStatement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$2:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 1:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method check([Ljava/lang/String;Ljava/security/cert/X509Certificate;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method loadTrustManager()Ljavax/net/ssl/X509TrustManager;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method createSSLServerSocketFactory()Ljavax/net/ssl/SSLServerSocketFactory;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
field requireClientCert:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
field SSL_CLIENT_CONF_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$2:
method toString()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method <init>(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Lorg/apache/hadoop/conf/Configuration;)V:
local sslConf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$1:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method run()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method acceptableCountryWildcard(Ljava/lang/String;)Z:
local s:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
field EMPTY:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
field keystoresFactory:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
field reloader:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method getAcceptedIssuers()[Ljava/security/cert/X509Certificate;:
local issuers:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
parameter 2:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;Ljava/security/cert/X509Certificate;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
field trustManagerRef:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method init(LSSLFactory/Mode;)V:
local passwordProperty *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method <init>(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;Lorg/apache/hadoop/conf/Configuration;)V:
insert-annotation Block.statement 6, Variable.initializer, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class KeyStoresFactory:
method getTrustManagers()[Ljavax/net/ssl/TrustManager;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getDNSSubjectAlts(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class KeyStoresFactory:
method init(LSSLFactory/Mode;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$4:
method toString()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$5:
method toString()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
field SSL_KEYSTORE_KEYPASSWORD_TPL_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getCNs(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
local cns:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method check([Ljava/lang/String;Ljava/security/cert/X509Certificate;)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V:
local certs:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$4:
method toString()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method getHostnameVerifier(Lorg/apache/hadoop/conf/Configuration;)Ljavax/net/ssl/HostnameVerifier;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
local match:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method acceptableCountryWildcard(Ljava/lang/String;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
field SSL_TRUSTSTORE_PASSWORD_TPL_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method checkServerTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V:
local tm:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$2:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method configure(Ljava/net/HttpURLConnection;)Ljava/net/HttpURLConnection;:
instanceof *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
local i *3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
implements 0:
inner-type 1,0, 1,0, 1,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getDNSSubjectAlts(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
insert-annotation Block.statement 4, If.thenStatement, Block.statement 1, ExpressionStatement.expression, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getCNs(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method isIP4Address(Ljava/lang/String;)Z:
local x:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
field ALLOW_ALL:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
field KEYSTORES_FACTORY_CLASS_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
field SSL_SERVER_CONF_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$4:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 1:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$5:
method toString()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
field SSL_TRUSTSTORE_RELOAD_INTERVAL_TPL_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method init()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V:
local x509:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZZ)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method checkClientTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method loadTrustManager()Ljavax/net/ssl/X509TrustManager;:
local trustManagers:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$2:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method loadTrustManager()Ljavax/net/ssl/X509TrustManager;:
instanceof *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method readSSLConfiguration(Lorg/apache/hadoop/security/ssl/SSLFactory$Mode;)Lorg/apache/hadoop/conf/Configuration;:
local sslConf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class KeyStoresFactory:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method verify(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z:
local certs:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check(Ljava/lang/String;Ljava/security/cert/X509Certificate;)V:
new *0:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method verify(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method isIP4Address(Ljava/lang/String;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method check(Ljava/lang/String;Ljava/security/cert/X509Certificate;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method createSSLSocketFactory()Ljavax/net/ssl/SSLSocketFactory;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method destroy()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method getHostnameVerifier()Ljavax/net/ssl/HostnameVerifier;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$5:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$AbstractVerifier:
method check([Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V:
local in:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method check(Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
field SSL_KEYSTORE_PASSWORD_TPL_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method destroy()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method loadTrustManager()Ljavax/net/ssl/X509TrustManager;:
local trustManager:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$2:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method check([Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class KeyStoresFactory:
method init(LSSLFactory/Mode;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$3:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getCNs(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
local tok:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method verify(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getDNSSubjectAlts(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
new *1:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$5:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method check([Ljava/lang/String;Ljava/security/cert/X509Certificate;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier:
method check([Ljava/lang/String;Ljavax/net/ssl/SSLSocket;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$Certificates:
method getDNSSubjectAlts(Ljava/security/cert/X509Certificate;)[Ljava/lang/String;:
typecast *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$1:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 1:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class ReloadingX509TrustManager:
method checkServerTrusted([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLHostnameVerifier$3:
method check([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class SSLFactory:
method getKeystoresFactory()Lorg/apache/hadoop/security/ssl/KeyStoresFactory;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.security.ssl:
class FileBasedKeyStoresFactory:
method init(LSSLFactory/Mode;)V:
local keystore:
type: @ostrusted.quals.OsUntrusted

