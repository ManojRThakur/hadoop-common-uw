
package ostrusted.quals:
annotation @OsUntrusted:
package ostrusted.quals:
annotation @OsTrusted:


package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$CachedName:
method <init>(Ljava/lang/String;J)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getShareDeleteFileInputStream(Ljava/io/File;J)Ljava/io/FileInputStream;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field SYNC_FILE_RANGE_WAIT_BEFORE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field WORKAROUND_NON_THREADSAFE_CALLS_DEFAULT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method posixFadviseIfPossible(Ljava/lang/String;Ljava/io/FileDescriptor;JJI)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
field S_ISGID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$CachedName:
field name:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method getName(Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache;I)Ljava/lang/String;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field ENFILE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method getUserName(I)Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
field FILE_END:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method sync_file_range(Ljava/io/FileDescriptor;JJI)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
field FILE_SHARE_WRITE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
field S_IFCHR:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$CachedName:
method <init>(Ljava/lang/String;J)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field UNKNOWN:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method getUserName(J)Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field SYNC_FILE_RANGE_WAIT_AFTER:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field POSIX_FADV_DONTNEED:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$CachedUid:
method <init>(Ljava/lang/String;J)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method posix_fadvise(Ljava/io/FileDescriptor;JJI)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
method createFile(Ljava/lang/String;JJJ)Ljava/io/FileDescriptor;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field EFBIG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
method access0(Ljava/lang/String;I)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getShareDeleteFileInputStream(Ljava/io/File;J)Ljava/io/FileInputStream;:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
method access(Ljava/lang/String;Lorg/apache/hadoop/io/nativeio/NativeIO$Windows$AccessRight;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method posixFadviseIfPossible(Ljava/lang/String;Ljava/io/FileDescriptor;JJI)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method renameTo0(Ljava/lang/String;Ljava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method getName(Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache;I)Ljava/lang/String;:
local now:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method syncFileRangeIfPossible(Ljava/io/FileDescriptor;JJI)V:
local ule:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
field FILE_BEGIN:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
method getOwner()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method chmod(Ljava/lang/String;I)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getOwner(Ljava/io/FileDescriptor;)Ljava/lang/String;:
local uid:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field GROUP_ID_NAME_CACHE:
type:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
method <init>(Ljava/lang/String;Ljava/lang/String;I)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getShareDeleteFileInputStream(Ljava/io/File;)Ljava/io/FileInputStream;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
method getOwner(Ljava/io/FileDescriptor;)Ljava/lang/String;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method fstat(Ljava/io/FileDescriptor;)Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field EAGAIN:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
field S_ISVTX:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method sync_file_range(Ljava/io/FileDescriptor;JJI)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getShareDeleteFileInputStream(Ljava/io/File;J)Ljava/io/FileInputStream;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$CachedName:
method <init>(Ljava/lang/String;J)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getShareDeleteFileInputStream(Ljava/io/File;)Ljava/io/FileInputStream;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
method getOwner(Ljava/io/FileDescriptor;)Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method getName(Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache;I)Ljava/lang/String;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field O_FSYNC:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field ENODEV:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field ECHILD:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field nativeLoaded:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
field S_ISUID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
field GENERIC_READ:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field cacheTracker:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field GROUP_ID_NAME_CACHE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
method setFilePointer(Ljava/io/FileDescriptor;JJ)J:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows$AccessRight:
field ACCESS_WRITE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIOException:
method getErrno()Lorg/apache/hadoop/io/nativeio/Errno;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getCreateForWriteFileOutputStream(Ljava/io/File;I)Ljava/io/FileOutputStream;:
local nioe:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIOException:
method <init>(Ljava/lang/String;I)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field WORKAROUND_NON_THREADSAFE_CALLS_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method open(Ljava/lang/String;II)Ljava/io/FileDescriptor;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getCreateForWriteFileOutputStream(Ljava/io/File;I)Ljava/io/FileOutputStream;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method isAvailable()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field fadvisePossible:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getCreateForWriteFileOutputStream(Ljava/io/File;I)Ljava/io/FileOutputStream;:
local nioe *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field USER_ID_NAME_CACHE:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
method setFilePointer(Ljava/io/FileDescriptor;JJ)J:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$CacheTracker:
method fadvise(Ljava/lang/String;JJI)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method getName(Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache;I)Ljava/lang/String;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field GROUP_ID_NAME_CACHE:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method stripDomain(Ljava/lang/String;)Ljava/lang/String;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field O_NOCTTY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getCreateForWriteFileOutputStream(Ljava/io/File;I)Ljava/io/FileOutputStream;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getShareDeleteFileInputStream(Ljava/io/File;J)Ljava/io/FileInputStream;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field O_RDWR:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method isAvailable()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method getFstat(Ljava/io/FileDescriptor;)Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
field workaroundNonThreadSafePasswdCalls:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
field initialized:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field EPIPE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
method createFile(Ljava/lang/String;JJJ)Ljava/io/FileDescriptor;:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
field CREATE_NEW:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$IdCache:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$IdCache:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
field uidCache:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$CachedUid:
method <init>(Ljava/lang/String;J)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getCreateForWriteFileOutputStream(Ljava/io/File;I)Ljava/io/FileOutputStream;:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field O_TRUNC:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
field S_IWUSR:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method getName(Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache;I)Ljava/lang/String;:
local idNameCache:
type:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
field S_IFSOCK:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
field S_IFIFO:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field EACCES:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method posixFadviseIfPossible(Ljava/lang/String;Ljava/io/FileDescriptor;JJI)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method syncFileRangeIfPossible(Ljava/io/FileDescriptor;JJI)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$CachedUid:
field timestamp:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field ENOTBLK:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field EBUSY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field SYNC_FILE_RANGE_WRITE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field EMLINK:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method open(Ljava/lang/String;II)Ljava/io/FileDescriptor;:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method getFstat(Ljava/io/FileDescriptor;)Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
method getMode()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field GROUP_ID_NAME_CACHE:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field EEXIST:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field cacheTimeout:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getCreateForWriteFileOutputStream(Ljava/io/File;I)Ljava/io/FileOutputStream;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getCreateForWriteFileOutputStream(Ljava/io/File;I)Ljava/io/FileOutputStream;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field ENOTEMPTY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field E2BIG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method getName(Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache;I)Ljava/lang/String;:
local idNameCache:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method posix_fadvise(Ljava/io/FileDescriptor;JJI)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
field TRUNCATE_EXISTING:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method posixFadviseIfPossible(Ljava/lang/String;Ljava/io/FileDescriptor;JJI)V:
local uoe:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIOException:
method <init>(Ljava/lang/String;Lorg/apache/hadoop/io/nativeio/Errno;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
method <init>(III)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
method <init>(Ljava/lang/String;Ljava/lang/String;I)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method getName(Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache;I)Ljava/lang/String;:
local cachedName:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field EPERM:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method chmodImpl(Ljava/lang/String;I)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field EBADF:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method renameTo0(Ljava/lang/String;Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field ENAMETOOLONG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
method getGroup()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
method <init>(Ljava/lang/String;Ljava/lang/String;I)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
field FILE_SHARE_DELETE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows$AccessRight:
field accessRight:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows$AccessRight:
method accessRight()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
field S_IFWHT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$CacheTracker:
method fadvise(Ljava/lang/String;JJI)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field ENOTTY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
field ownerId:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$CacheTracker:
method fadvise(Ljava/lang/String;JJI)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field ESRCH:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIOException:
method toString()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
field OPEN_EXISTING:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field EISDIR:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method getName(Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache;I)Ljava/lang/String;:
local type:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getOwner(Ljava/io/FileDescriptor;)Ljava/lang/String;:
local user:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field POSIX_FADV_NORMAL:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method stripDomain(Ljava/lang/String;)Ljava/lang/String;:
local i:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$CachedName:
field timestamp:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method getName(Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache;I)Ljava/lang/String;:
local idNameCache:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$CachedName:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method getName(Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache;I)Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows$AccessRight:
field ACCESS_EXECUTE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getOwner(Ljava/io/FileDescriptor;)Ljava/lang/String;:
local cUid:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getShareDeleteFileInputStream(Ljava/io/File;)Ljava/io/FileInputStream;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIOException:
field errorCode:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIOException:
method getErrorCode()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
field S_IXUSR:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method chmod(Ljava/lang/String;I)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIOException:
method toString()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method posixFadviseIfPossible(Ljava/lang/String;Ljava/io/FileDescriptor;JJI)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
method toString()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
method createFile(Ljava/lang/String;JJJ)Ljava/io/FileDescriptor;:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field POSIX_FADV_SEQUENTIAL:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
staticinit *0:
local conf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field EDOM:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$CachedUid:
field username:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
field S_IFMT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field syncFileRangePossible:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
staticinit *0:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getCreateForWriteFileOutputStream(Ljava/io/File;I)Ljava/io/FileOutputStream;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows$AccessRight:
method <init>(I)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method getFstat(Ljava/io/FileDescriptor;)Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
method access(Ljava/lang/String;Lorg/apache/hadoop/io/nativeio/NativeIO$Windows$AccessRight;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$CachedUid:
method <init>(Ljava/lang/String;J)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
field FILE_CURRENT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field GROUP_ID_NAME_CACHE:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method posix_fadvise(Ljava/io/FileDescriptor;JJI)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIOException:
method getErrorCode()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
method access0(Ljava/lang/String;I)Z:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows$AccessRight:
method <init>(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
method getMode()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getShareDeleteFileInputStream(Ljava/io/File;J)Ljava/io/FileInputStream;:
local fd:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getShareDeleteFileInputStream(Ljava/io/File;)Ljava/io/FileInputStream;:
local fd:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method open(Ljava/lang/String;II)Ljava/io/FileDescriptor;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field EXDEV:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field O_SYNC:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIOException:
field serialVersionUID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows$AccessRight:
method accessRight()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
field S_IFLNK:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
method <init>(III)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getOwner(Ljava/io/FileDescriptor;)Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method syncFileRangeIfPossible(Ljava/io/FileDescriptor;JJI)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
staticinit *0:
local t:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$CachedUid:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field O_EXCL:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method chmod(Ljava/lang/String;I)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method syncFileRangeIfPossible(Ljava/io/FileDescriptor;JJI)V:
local uoe:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
method access0(Ljava/lang/String;I)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getOwner(Ljava/io/FileDescriptor;)Ljava/lang/String;:
local owner:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
field GENERIC_WRITE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field ERANGE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method getFstat(Ljava/io/FileDescriptor;)Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat;:
local nioe:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method renameTo(Ljava/io/File;Ljava/io/File;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
method <init>(III)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field O_APPEND:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
field S_IFDIR:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getShareDeleteFileInputStream(Ljava/io/File;)Ljava/io/FileInputStream;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
field uidCache:
type:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field EIO:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method sync_file_range(Ljava/io/FileDescriptor;JJI)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
field CREATE_ALWAYS:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field USER_ID_NAME_CACHE:
new *0:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
method <init>(III)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIOException:
method <init>(Ljava/lang/String;Lorg/apache/hadoop/io/nativeio/Errno;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
field OPEN_ALWAYS:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
method toString()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method getFstat(Ljava/io/FileDescriptor;)Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat;:
local stat:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method getUserName(J)Ljava/lang/String;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method syncFileRangeIfPossible(Ljava/io/FileDescriptor;JJI)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method renameTo(Ljava/io/File;Ljava/io/File;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method getUIDforFDOwnerforOwner(Ljava/io/FileDescriptor;)J:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
field uidCache:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getShareDeleteFileInputStream(Ljava/io/File;J)Ljava/io/FileInputStream;:
local rf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
method <init>(Ljava/lang/String;Ljava/lang/String;I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field POSIX_FADV_NOREUSE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method getFstat(Ljava/io/FileDescriptor;)Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field EFAULT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
field nativeLoaded:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIOException:
method <init>(Ljava/lang/String;I)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field USER_ID_NAME_CACHE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field ENXIO:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$CacheTracker:
method fadvise(Ljava/lang/String;JJI)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$CacheTracker:
method fadvise(Ljava/lang/String;JJI)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field USER_ID_NAME_CACHE:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
staticinit *2:
local t:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getOwner(Ljava/io/FileDescriptor;)Ljava/lang/String;:
local now:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
field mode:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field ESPIPE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getShareDeleteFileInputStream(Ljava/io/File;J)Ljava/io/FileInputStream;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows$AccessRight:
field ACCESS_READ:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
field S_IFBLK:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
method getGroup()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field O_WRONLY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method getGroupName(I)Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
method getOwner()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field O_RDONLY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
method createFile(Ljava/lang/String;JJJ)Ljava/io/FileDescriptor;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
field uidCache:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method fstat(Ljava/io/FileDescriptor;)Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$Stat;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
field cacheTimeout:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field USER_ID_NAME_CACHE:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getCreateForWriteFileOutputStream(Ljava/io/File;I)Ljava/io/FileOutputStream;:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field ELOOP:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIOException:
method getErrno()Lorg/apache/hadoop/io/nativeio/Errno;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
field uidCache:
new *0:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field O_CREAT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field POSIX_FADV_RANDOM:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
field FILE_SHARE_READ:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method chmodImpl(Ljava/lang/String;I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method posixFadviseIfPossible(Ljava/lang/String;Ljava/io/FileDescriptor;JJI)V:
parameter 4:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method open(Ljava/lang/String;II)Ljava/io/FileDescriptor;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method syncFileRangeIfPossible(Ljava/io/FileDescriptor;JJI)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method getUserName(I)Ljava/lang/String;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field EINTR:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows$AccessRight:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method stripDomain(Ljava/lang/String;)Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method posixFadviseIfPossible(Ljava/lang/String;Ljava/io/FileDescriptor;JJI)V:
local ule:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
field uidCache:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
method access(Ljava/lang/String;Lorg/apache/hadoop/io/nativeio/NativeIO$Windows$AccessRight;)Z:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field ENOENT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
field S_IRUSR:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
method createFile(Ljava/lang/String;JJJ)Ljava/io/FileDescriptor;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getOwner(Ljava/io/FileDescriptor;)Ljava/lang/String;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method posix_fadvise(Ljava/io/FileDescriptor;JJI)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field ENOSPC:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
method setFilePointer(Ljava/io/FileDescriptor;JJ)J:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field O_ASYNC:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$IdCache:
field USER:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method ensureInitialized()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field ETXTBSY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field USER_ID_NAME_CACHE:
type:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method sync_file_range(Ljava/io/FileDescriptor;JJI)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field ENOEXEC:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIOException:
field errno:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field O_NONBLOCK:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method chmod(Ljava/lang/String;I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field EROFS:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method getGroupName(I)Ljava/lang/String;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$Windows:
method setFilePointer(Ljava/io/FileDescriptor;JJ)J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
field S_IFREG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field EINVAL:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method getUIDforFDOwnerforOwner(Ljava/io/FileDescriptor;)J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIOException:
method <init>(Ljava/lang/String;I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIOException:
method <init>(Ljava/lang/String;Lorg/apache/hadoop/io/nativeio/Errno;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
field owner:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field ENOTDIR:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$Stat:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getCreateForWriteFileOutputStream(Ljava/io/File;I)Ljava/io/FileOutputStream;:
local fd *1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field POSIX_FADV_WILLNEED:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getCreateForWriteFileOutputStream(Ljava/io/File;I)Ljava/io/FileOutputStream;:
local fd:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field EMFILE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
staticinit *0:
local t:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class Errno:
field ENOMEM:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIOException:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method chmod(Ljava/lang/String;I)V:
local nioe:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getOwner(Ljava/io/FileDescriptor;)Ljava/lang/String;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
method getName(Lorg/apache/hadoop/io/nativeio/NativeIO$POSIX$IdCache;I)Ljava/lang/String;:
local name:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX$IdCache:
field GROUP:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method getShareDeleteFileInputStream(Ljava/io/File;J)Ljava/io/FileInputStream;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO:
method renameTo(Ljava/io/File;Ljava/io/File;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field GROUP_ID_NAME_CACHE:
new *0:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.io.nativeio:
class NativeIO$POSIX:
field O_NDELAY:
type: @ostrusted.quals.OsUntrusted

