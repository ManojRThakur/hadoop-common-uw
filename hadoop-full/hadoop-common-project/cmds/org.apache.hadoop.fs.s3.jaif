
package ostrusted.quals:
annotation @OsUntrusted:
package ostrusted.quals:
annotation @OsTrusted:


package org.apache.hadoop.fs.s3:
class S3OutputStream:
method endBlock()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method listAllPaths()Ljava/util/Set;:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
field blockSize:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local srcINode:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method listAllPaths()Ljava/util/Set;:
local prefix:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method getDefaultBlockSize()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method deleteINode(Lorg/apache/hadoop/fs/Path;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
local parent:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method read([BII)I:
local result:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
field closed:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystemConfigKeys:
field S3_BYTES_PER_CHECKSUM_DEFAULT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method delete(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method storeINode(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/s3/INode;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Block:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method migrate(Lorg/apache/hadoop/fs/s3/MigrationTool$Store;Lorg/apache/hadoop/fs/s3/FileSystemStore;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method flushData(I)V:
local workingPos:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local absoluteDst:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
field METADATA:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
local awsCredentials:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method read()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method append(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method blockToKey(J)Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3Credentials:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3Credentials:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
local secretAccessKeyProperty:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/s3/FileSystemStore;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/util/Progressable;I)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method createDefaultStore(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/s3/FileSystemStore;:
new *2:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$Store:
method retrieveINode(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/s3/INode;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method run([Ljava/lang/String;)I:
local root:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
field METADATA:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method purge()V:
local objects:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method isDirectory()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method createDefaultStore(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/s3/FileSystemStore;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method read()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method mkdirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
local p:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method read([BII)I:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method read([BII)I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method append(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
field bufferSize:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method reset()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method createDefaultStore(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/s3/FileSystemStore;:
local exceptionToPolicyMap:
type:
inner-type 3,0, 3,0, 2,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method listAllPaths()Ljava/util/Set;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method close()V:
local b:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method put(Ljava/lang/String;Ljava/io/InputStream;JZ)V:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method get(Ljava/lang/String;)Ljava/io/InputStream;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystemConfigKeys:
field S3_STREAM_BUFFER_SIZE_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method migrate(Lorg/apache/hadoop/fs/s3/MigrationTool$Store;Lorg/apache/hadoop/fs/s3/FileSystemStore;)V:
local inode:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$Store:
method deleteINode(Lorg/apache/hadoop/fs/Path;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method blockSeekTo(J)V:
local blockLength:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method keyToPath(Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Block:
method <init>(JJ)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method dump()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem$S3FileStatus:
method findBlocksize(Lorg/apache/hadoop/fs/s3/INode;)J:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method initialize(Ljava/net/URI;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method blockSeekTo(J)V:
local targetBlockEnd:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method getUri()Ljava/net/URI;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class VersionMismatchException:
method <init>(Ljava/lang/String;Ljava/lang/String;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/s3/FileSystemStore;Lorg/apache/hadoop/fs/s3/INode;LFileSystem/Statistics;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method delete(Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method getFileStatus(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method makeAbsolute(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method newBackupFile()Ljava/io/File;:
local dir:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method run([Ljava/lang/String;)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method checkMetadata(Lorg/jets3t/service/model/S3Object;)V:
local name:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method checkMetadata(Lorg/jets3t/service/model/S3Object;)V:
typecast *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method write([BII)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method inodeExists(Lorg/apache/hadoop/fs/Path;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method listDeepSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method retrieveBlock(Lorg/apache/hadoop/fs/s3/Block;J)Ljava/io/File;:
local in:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method reset()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
return:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method getUri()Ljava/net/URI;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method flush()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method listSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method makeAbsolute(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
local inode:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method closeQuietly(Ljava/io/Closeable;)V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method delete(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
field bucket:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local dstParentINode:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method getVersion()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem$S3FileStatus:
method findBlocksize(Lorg/apache/hadoop/fs/s3/INode;)J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
local prefixes:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method read([BII)I:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method blockExists(J)Z:
local in:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method deserialize(Ljava/io/InputStream;)Lorg/apache/hadoop/fs/s3/INode;:
local numBlocks:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
field METADATA:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method serialize()Ljava/io/InputStream;:
local out:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystemConfigKeys:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method get(Ljava/lang/String;)Ljava/io/InputStream;:
instanceof *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method retrieveBlock(Lorg/apache/hadoop/fs/s3/Block;J)Ljava/io/File;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listDeepSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method checkFile(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/s3/INode;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
field FILE_SYSTEM_NAME:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method main([Ljava/lang/String;)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method get(Ljava/lang/String;Z)Ljava/io/InputStream;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
local prefixes:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method renameRecursive(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
field uri:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method mkdirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method getVersion()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method close()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method get(Ljava/lang/String;Z)Ljava/io/InputStream;:
local object:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method keyToPath(Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local dstParent:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method createDefaultStore(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/s3/FileSystemStore;:
insert-annotation Block.statement 9, Return.expression, TypeCast.expression, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method mkdir(Lorg/apache/hadoop/fs/Path;)Z:
local absolutePath:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
field FILE_TYPES:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method listAllPaths()Ljava/util/Set;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method blockExists(J)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3Credentials:
method getSecretAccessKey()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
local p:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method mkdirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
field closed:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method deserialize(Ljava/io/InputStream;)Lorg/apache/hadoop/fs/s3/INode;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method internalClose()V:
new *1:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method read([BII)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method read()I:
local result:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method newBackupFile()Ljava/io/File;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method urlDecode(Ljava/lang/String;)Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method write(I)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method retrieveBlock(Lorg/apache/hadoop/fs/s3/Block;J)Ljava/io/File;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method get(Ljava/lang/String;J)Ljava/io/InputStream;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method run([Ljava/lang/String;)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method retrieveBlock(Lorg/apache/hadoop/fs/s3/Block;J)Ljava/io/File;:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
field METADATA:
type:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method keyToPath(Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method getFileType()Lorg/apache/hadoop/fs/s3/INode$FileType;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method internalClose()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method run([Ljava/lang/String;)I:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method deserialize(Ljava/io/InputStream;)Lorg/apache/hadoop/fs/s3/INode;:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
new *3:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method append(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method initialize(Ljava/net/URI;)V:
local accessKey:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method nextBlockOutputStream()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3Credentials:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
local accessKeyProperty:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method listAllPaths()Ljava/util/Set;:
return:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method get(Ljava/lang/String;Z)Ljava/io/InputStream;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method write([BII)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Block:
method <init>(JJ)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/s3/FileSystemStore;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/util/Progressable;I)V:
parameter 5:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method delete(Lorg/apache/hadoop/fs/Path;Z)Z:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystemConfigKeys:
field S3_REPLICATION_DEFAULT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method deserialize(Ljava/io/InputStream;)Lorg/apache/hadoop/fs/s3/INode;:
local blocks:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method initialize(Ljava/net/URI;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method deserialize(Ljava/io/InputStream;)Lorg/apache/hadoop/fs/s3/INode;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$Store:
method listAllPaths()Ljava/util/Set;:
return:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method blockSeekTo(J)V:
local offsetIntoBlock:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
field bytesWrittenToBlock:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method initialize(Ljava/net/URI;)V:
new *4: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local destIsDir:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/s3/FileSystemStore;Lorg/apache/hadoop/fs/s3/INode;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method retrieveBlock(Lorg/apache/hadoop/fs/s3/Block;J)Ljava/io/File;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method write([BII)V:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method delete(Ljava/lang/String;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method createDefaultStore(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/s3/FileSystemStore;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
field backupStream:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Block:
method toString()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$Store:
method retrieveINode(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/s3/INode;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method isFile(Lorg/apache/hadoop/fs/Path;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3Credentials:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method newBackupFile()Ljava/io/File;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
instanceof *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method retrieveBlock(Lorg/apache/hadoop/fs/s3/Block;J)Ljava/io/File;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method retrieveBlock(Lorg/apache/hadoop/fs/s3/Block;J)Ljava/io/File;:
local buf:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
field FILE_SYSTEM_VALUE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method setWorkingDirectory(Lorg/apache/hadoop/fs/Path;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method getScheme()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method dump()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method getScheme()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3Credentials:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
local scheme:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
return:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local renamingOnToSelf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method purge()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
field pos:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method mkdir(Lorg/apache/hadoop/fs/Path;)Z:
local inode:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method delete(Lorg/apache/hadoop/fs/Path;Z)Z:
local contents:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method createDefaultStore(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/s3/FileSystemStore;:
local methodNameToPolicyMap:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method internalClose()V:
local inode:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method urlEncode(Ljava/lang/String;)Ljava/lang/String;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
field r:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method deleteINode(Lorg/apache/hadoop/fs/Path;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/s3/FileSystemStore;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/util/Progressable;I)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method dump()V:
local objects:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method pathToKey(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystemException:
field serialVersionUID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method delete(Lorg/apache/hadoop/fs/Path;Z)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method storeBlock(Lorg/apache/hadoop/fs/s3/Block;Ljava/io/File;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3Credentials:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method isFile()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method get(Ljava/lang/String;)Ljava/io/InputStream;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method createDefaultStore(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/s3/FileSystemStore;:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method retrieveBlock(Lorg/apache/hadoop/fs/s3/Block;J)Ljava/io/File;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method inodeExists(Lorg/apache/hadoop/fs/Path;)Z:
local in:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method dump()V:
local m:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3Credentials:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method deserialize(Ljava/io/InputStream;)Lorg/apache/hadoop/fs/s3/INode;:
local fileType:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
field BLOCK_PREFIX:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local destExists:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method mkdirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
local result:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method retrieveINode(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/s3/INode;:
local key:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method createDefaultStore(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/s3/FileSystemStore;:
local store:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem$S3FileStatus:
method <init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/s3/INode;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method delete(Ljava/lang/String;)V:
instanceof *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method listAllPaths()Ljava/util/Set;:
instanceof *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method seekToNewSource(J)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
field s3Service:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3Exception:
method <init>(Ljava/lang/Throwable;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method serialize()Ljava/io/InputStream;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/s3/FileSystemStore;Lorg/apache/hadoop/fs/s3/INode;LFileSystem/Statistics;)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method read([BII)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class VersionMismatchException:
method <init>(Ljava/lang/String;Ljava/lang/String;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method newBackupFile()Ljava/io/File;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method get(Ljava/lang/String;)Lorg/jets3t/service/model/S3Object;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
field bufferSize:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method createDefaultStore(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/s3/FileSystemStore;:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method storeBlock(Lorg/apache/hadoop/fs/s3/Block;Ljava/io/File;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method blockSeekTo(J)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method get(Ljava/lang/String;)Lorg/jets3t/service/model/S3Object;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method blockToKey(J)Ljava/lang/String;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method available()I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method getWorkingDirectory()Lorg/apache/hadoop/fs/Path;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method mkdir(Lorg/apache/hadoop/fs/Path;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method mkdirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
local absolutePath:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method deserialize(Ljava/io/InputStream;)Lorg/apache/hadoop/fs/s3/INode;:
local blocks:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method get(Ljava/lang/String;)Lorg/jets3t/service/model/S3Object;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method initialize(Ljava/net/URI;)V:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method put(Ljava/lang/String;Ljava/io/InputStream;JZ)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method isDirectory()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
field outBuf:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method delete(Ljava/lang/String;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method seek(J)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystemConfigKeys:
field S3_STREAM_BUFFER_SIZE_DEFAULT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method serialize()Ljava/io/InputStream;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method get(Ljava/lang/String;J)Ljava/io/InputStream;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method listAllPaths()Ljava/util/Set;:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method endBlock()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method dump()V:
instanceof *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method deserialize(Ljava/io/InputStream;)Lorg/apache/hadoop/fs/s3/INode;:
local length:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method endBlock()V:
local b:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method delete(Ljava/lang/String;)V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
field METADATA:
new *0:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local dstINode:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class VersionMismatchException:
method <init>(Ljava/lang/String;Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
field bucket:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method deserialize(Ljava/io/InputStream;)Lorg/apache/hadoop/fs/s3/INode;:
local i:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method get(Ljava/lang/String;)Ljava/io/InputStream;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/s3/FileSystemStore;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/util/Progressable;I)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
field FILE_TYPES:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem$S3FileStatus:
method <init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/s3/INode;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method run([Ljava/lang/String;)I:
local oldStore:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method deleteINode(Lorg/apache/hadoop/fs/Path;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$Store:
method deleteINode(Lorg/apache/hadoop/fs/Path;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method delete(Lorg/apache/hadoop/fs/Path;Z)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
field conf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method closeQuietly(Ljava/io/Closeable;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method delete(Ljava/lang/String;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method storeBlock(Lorg/apache/hadoop/fs/s3/Block;Ljava/io/File;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method createDefaultStore(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/s3/FileSystemStore;:
local exceptionToPolicyMap:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method listDeepSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method dump()V:
local i:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method read([BII)I:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method blockSeekTo(J)V:
local i:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method blockSeekTo(J)V:
local targetBlock:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method urlDecode(Ljava/lang/String;)Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
parameter 5:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
local ret:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystemConfigKeys:
field S3_REPLICATION_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class VersionMismatchException:
field serialVersionUID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method getPos()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem$S3FileStatus:
method <init>(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/s3/INode;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method storeINode(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/s3/INode;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method blockToKey(Lorg/apache/hadoop/fs/s3/Block;)Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
field workingDir:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method retrieveBlock(Lorg/apache/hadoop/fs/s3/Block;J)Ljava/io/File;:
new *2:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method getVersion()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3Exception:
method <init>(Ljava/lang/Throwable;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method pathToKey(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
field blocks:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listDeepSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
local objects:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method put(Ljava/lang/String;Ljava/io/InputStream;JZ)V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listDeepSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
local objects:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem$S3FileStatus:
method findLength(Lorg/apache/hadoop/fs/s3/INode;)J:
local length:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method migrate(Lorg/apache/hadoop/fs/s3/MigrationTool$Store;Lorg/apache/hadoop/fs/s3/FileSystemStore;)V:
local path:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method createDefaultStore(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/s3/FileSystemStore;:
new *1:
inner-type 3,0, 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method urlDecode(Ljava/lang/String;)Ljava/lang/String;:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method deserialize(Ljava/io/InputStream;)Lorg/apache/hadoop/fs/s3/INode;:
new *4: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method deserialize(Ljava/io/InputStream;)Lorg/apache/hadoop/fs/s3/INode;:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method get(Ljava/lang/String;)Ljava/io/InputStream;:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method blockToKey(Lorg/apache/hadoop/fs/s3/Block;)Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method <init>(Lorg/apache/hadoop/fs/s3/INode$FileType;[Lorg/apache/hadoop/fs/s3/Block;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
field blockEnd:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method createDefaultStore(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/s3/FileSystemStore;:
local methodNameToPolicyMap:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3Credentials:
field secretAccessKey:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method nextBlockOutputStream()V:
local blockId:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method retrieveINode(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/s3/INode;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method isFile(Lorg/apache/hadoop/fs/Path;)Z:
local inode:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3Credentials:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
local userInfo:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem$S3FileStatus:
method findLength(Lorg/apache/hadoop/fs/s3/INode;)J:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3Credentials:
method getAccessKey()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
local prefix:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method mkdirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method purge()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method mkdirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
local paths:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
field blocks:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listDeepSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method retrieveINode(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/s3/INode;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method delete(Ljava/lang/String;)V:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method getFileStatus(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method internalClose()V:
insert-annotation Block.statement 0, Variable.initializer, NewClass.argument 1, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method retrieveINode(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/s3/INode;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listDeepSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method available()I:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method renameRecursive(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method isRoot(Ljava/lang/String;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listDeepSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method storeINode(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/s3/INode;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method blockExists(J)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listDeepSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
instanceof *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode$FileType:
field DIRECTORY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method append(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method initialize(Ljava/net/URI;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method append(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystemException:
method <init>(Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method listSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
return:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method mark(I)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method retrieveINode(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/s3/INode;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method renameRecursive(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local srcPath:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method mkdir(Lorg/apache/hadoop/fs/Path;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method keyToPath(Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method purge()V:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method listSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method migrate(Lorg/apache/hadoop/fs/s3/MigrationTool$Store;Lorg/apache/hadoop/fs/s3/FileSystemStore;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method getPos()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method getWorkingDirectory()Lorg/apache/hadoop/fs/Path;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
local objects:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method dump()V:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method makeAbsolute(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method mkdir(Lorg/apache/hadoop/fs/Path;)Z:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method createDefaultStore(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/s3/FileSystemStore;:
new *1:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method serialize()Ljava/io/InputStream;:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method storeBlock(Lorg/apache/hadoop/fs/s3/Block;Ljava/io/File;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
field fileLength:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method listSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystemConfigKeys:
field S3_BLOCK_SIZE_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method retrieveBlock(Lorg/apache/hadoop/fs/s3/Block;J)Ljava/io/File;:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method write(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listDeepSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
local prefix:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method listAllPaths()Ljava/util/Set;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method newBackupFile()Ljava/io/File;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method flush()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method checkMetadata(Lorg/jets3t/service/model/S3Object;)V:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
field FILE_SYSTEM_TYPE_NAME:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method deserialize(Ljava/io/InputStream;)Lorg/apache/hadoop/fs/s3/INode;:
local id:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method purge()V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method pathToKey(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method newBackupFile()Ljava/io/File;:
local dir:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method delete(Ljava/lang/String;)V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3Credentials:
field accessKey:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3Exception:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystemException:
method <init>(Ljava/lang/String;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method listAllPaths()Ljava/util/Set;:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
local i:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method retrieveINode(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/s3/INode;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method urlDecode(Ljava/lang/String;)Ljava/lang/String;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method write([BII)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Block:
method getLength()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method delete(Lorg/apache/hadoop/fs/Path;Z)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode$FileType:
field FILE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method closeQuietly(Ljava/io/Closeable;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3Credentials:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class VersionMismatchException:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method deserialize(Ljava/io/InputStream;)Lorg/apache/hadoop/fs/s3/INode;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method listAllPaths()Ljava/util/Set;:
local objects:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
field blocks:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method initialize(Ljava/net/URI;)V:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
instanceof *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method deleteBlock(Lorg/apache/hadoop/fs/s3/Block;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method delete(Lorg/apache/hadoop/fs/Path;Z)Z:
local fnfe:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method mark(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method dump()V:
local sb:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3Credentials:
method getSecretAccessKey()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3Credentials:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method newBackupFile()Ljava/io/File;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method keyToPath(Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
field blockFile:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method deleteINode(Lorg/apache/hadoop/fs/Path;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/s3/FileSystemStore;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/util/Progressable;I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
field blocks:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
field nextBlock:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listDeepSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method renameRecursive(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
field DIRECTORY_INODE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listDeepSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method serialize()Ljava/io/InputStream;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method renameRecursive(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local oldSrc:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method storeINode(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/s3/INode;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method <init>(Lorg/apache/hadoop/fs/s3/INode$FileType;[Lorg/apache/hadoop/fs/s3/Block;)V:
parameter 1:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method put(Ljava/lang/String;Ljava/io/InputStream;JZ)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method delete(Lorg/apache/hadoop/fs/Path;Z)Z:
local absolutePath:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
field store:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method retrieveINode(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/s3/INode;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method getPos()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method read([BII)I:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method getFileStatus(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method get(Ljava/lang/String;)Ljava/io/InputStream;:
local object:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method keyToPath(Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method pathToKey(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method blockSeekTo(J)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method get(Ljava/lang/String;J)Ljava/io/InputStream;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method createDefaultStore(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/s3/FileSystemStore;:
local basePolicy:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystemConfigKeys:
field S3_BLOCK_SIZE_DEFAULT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method get(Ljava/lang/String;J)Ljava/io/InputStream;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method get(Ljava/lang/String;J)Ljava/io/InputStream;:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;:
local inode:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method initialize(Ljava/net/URI;)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method renameRecursive(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local newDst:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method dump()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method retrieveBlock(Lorg/apache/hadoop/fs/s3/Block;J)Ljava/io/File;:
local fileBlock:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method checkFile(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/s3/INode;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
local objects:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
field DIRECTORY_INODE:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem$S3FileStatus:
method findBlocksize(Lorg/apache/hadoop/fs/s3/INode;)J:
local ret:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method put(Ljava/lang/String;Ljava/io/InputStream;JZ)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method listAllPaths()Ljava/util/Set;:
local objects:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/s3/FileSystemStore;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/util/Progressable;I)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method seekToNewSource(J)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method initialize(Ljava/net/URI;)V:
new *5: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method initialize(Ljava/net/URI;)V:
local secretAccessKey:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
field store:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
local absolutePath:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listDeepSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
local i:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method purge()V:
local objects:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method setWorkingDirectory(Lorg/apache/hadoop/fs/Path;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Block:
field id:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/s3/FileSystemStore;Lorg/apache/hadoop/fs/s3/INode;LFileSystem/Statistics;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method purge()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method retrieveBlock(Lorg/apache/hadoop/fs/s3/Block;J)Ljava/io/File;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method deleteINode(Lorg/apache/hadoop/fs/Path;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method write([BII)V:
local toWrite:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method newBackupFile()Ljava/io/File;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method mkdirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method blockSeekTo(J)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method main([Ljava/lang/String;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method checkFile(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/s3/INode;:
local inode:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method run([Ljava/lang/String;)I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method initialize(Ljava/net/URI;)V:
new *6: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method markSupported()Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/s3/FileSystemStore;Lorg/apache/hadoop/fs/s3/INode;LFileSystem/Statistics;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method delete(Lorg/apache/hadoop/fs/Path;Z)Z:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method checkFile(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/s3/INode;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
field conf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
field outBuf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
parameter 4:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$Store:
method listAllPaths()Ljava/util/Set;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method deserialize(Ljava/io/InputStream;)Lorg/apache/hadoop/fs/s3/INode;:
new *1:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method getFileStatus(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
insert-annotation Block.statement 6, Return.expression, MethodInvocation.typeArgument 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method isFile()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
field path:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method initialize(Ljava/net/URI;)V:
local index:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method blockExists(J)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method getDefaultBlockSize()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/s3/FileSystemStore;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/util/Progressable;I)V:
parameter 4:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3Exception:
field serialVersionUID:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method blockSeekTo(J)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method retrieveINode(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/s3/INode;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method put(Ljava/lang/String;Ljava/io/InputStream;JZ)V:
instanceof *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method dump()V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method write(I)V:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method checkFile(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/s3/INode;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method deserialize(Ljava/io/InputStream;)Lorg/apache/hadoop/fs/s3/INode;:
local dataIn:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method run([Ljava/lang/String;)I:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method dump()V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode$FileType:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method get(Ljava/lang/String;J)Ljava/io/InputStream;:
local object:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method read([BII)I:
local realLen:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method checkMetadata(Lorg/jets3t/service/model/S3Object;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method newBackupFile()Ljava/io/File;:
local result:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method initialize(Ljava/net/URI;)V:
local awsCredentials:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method renameRecursive(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local srcINode:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method renameRecursive(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local inode:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
field stats:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method get(Ljava/lang/String;J)Ljava/io/InputStream;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method storeBlock(Lorg/apache/hadoop/fs/s3/Block;Ljava/io/File;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method run([Ljava/lang/String;)I:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
parameter 6:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method retrieveBlock(Lorg/apache/hadoop/fs/s3/Block;J)Ljava/io/File;:
local numRead:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method deleteBlock(Lorg/apache/hadoop/fs/s3/Block;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
local s3Credentials:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystemException:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method pathToKey(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method storeINode(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/s3/INode;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method seekToNewSource(J)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
field pos:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
field s3Service:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
field backupFile:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
field blocks:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method blockSeekTo(J)V:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method blockSeekTo(J)V:
local targetBlockStart:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method retrieveINode(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/s3/INode;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method get(Ljava/lang/String;J)Ljava/io/InputStream;:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method listDeepSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method getVersion()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method newBackupFile()Ljava/io/File;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method urlEncode(Ljava/lang/String;)Ljava/lang/String;:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method isRoot(Ljava/lang/String;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
field LOG:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method get(Ljava/lang/String;Z)Ljava/io/InputStream;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method createDefaultStore(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/s3/FileSystemStore;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method createDefaultStore(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/s3/FileSystemStore;:
local exceptionToPolicyMap:
type:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method retrieveBlock(Lorg/apache/hadoop/fs/s3/Block;J)Ljava/io/File;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method <init>(Lorg/apache/hadoop/fs/s3/INode$FileType;[Lorg/apache/hadoop/fs/s3/Block;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method checkMetadata(Lorg/jets3t/service/model/S3Object;)V:
local type:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method nextBlockOutputStream()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method write(I)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/s3/FileSystemStore;Lorg/apache/hadoop/fs/s3/INode;LFileSystem/Statistics;)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local absoluteSrc:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method initialize(Ljava/net/URI;)V:
local userInfo:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode$FileType:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method listAllPaths()Ljava/util/Set;:
local prefixes:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Block:
field length:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method dump()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method listAllPaths()Ljava/util/Set;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method deleteBlock(Lorg/apache/hadoop/fs/s3/Block;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method main([Ljava/lang/String;)V:
local res:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method write([BII)V:
local remaining:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3Credentials:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method renameRecursive(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local oldSrcPath:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method close()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method run([Ljava/lang/String;)I:
local version:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method checkFile(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/s3/INode;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method initialize(Ljava/net/URI;)V:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/s3/FileSystemStore;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/util/Progressable;I)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method put(Ljava/lang/String;Ljava/io/InputStream;JZ)V:
local object:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method retrieveBlock(Lorg/apache/hadoop/fs/s3/Block;J)Ljava/io/File;:
local buf:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/s3/FileSystemStore;Lorg/apache/hadoop/fs/s3/INode;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method isRoot(Ljava/lang/String;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method dump()V:
local objects:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method initialize(Ljava/net/URI;)V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$Store:
method retrieveINode(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/s3/INode;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method urlDecode(Ljava/lang/String;)Ljava/lang/String;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method newBackupFile()Ljava/io/File;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
field FILE_SYSTEM_TYPE_VALUE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/s3/FileSystemStore;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/util/Progressable;I)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
field store:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
field fileType:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Block:
method toString()Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem$S3FileStatus:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
field PATH_DELIMITER:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
field blockStream:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method inodeExists(Lorg/apache/hadoop/fs/Path;)Z:
local key:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method purge()V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
field r:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3Credentials:
method getAccessKey()Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method get(Ljava/lang/String;J)Ljava/io/InputStream;:
instanceof *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method read([BII)I:
parameter 0:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3Credentials:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
new *2: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystemConfigKeys:
field S3_CLIENT_WRITE_PACKET_SIZE_DEFAULT:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
field filePos:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method delete(Lorg/apache/hadoop/fs/Path;Z)Z:
local block:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method listAllPaths()Ljava/util/Set;:
local prefixes:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
local ret:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method pathToKey(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
local inode:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method get(Ljava/lang/String;)Ljava/io/InputStream;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method makeAbsolute(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method flushData(I)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Block:
method getId()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method <init>(Lorg/apache/hadoop/fs/s3/INode$FileType;[Lorg/apache/hadoop/fs/s3/Block;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method close()V:
local b:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method run([Ljava/lang/String;)I:
local newStore:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method initialize(Ljava/net/URI;)V:
instanceof *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method isFile(Lorg/apache/hadoop/fs/Path;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method createDefaultStore(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/s3/FileSystemStore;:
local exceptionToPolicyMap:
type:
inner-type 3,0, 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listDeepSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
return:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method delete(Lorg/apache/hadoop/fs/Path;Z)Z:
local p:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method mkdir(Lorg/apache/hadoop/fs/Path;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method keyToPath(Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method getFileStatus(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystemConfigKeys:
field S3_BYTES_PER_CHECKSUM_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method urlEncode(Ljava/lang/String;)Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method urlEncode(Ljava/lang/String;)Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method storeINode(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/s3/INode;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method get(Ljava/lang/String;Z)Ljava/io/InputStream;:
instanceof *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method isFile(Lorg/apache/hadoop/fs/Path;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method read()I:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method createDefaultStore(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/s3/FileSystemStore;:
local exceptionToPolicyMap:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method flushData(I)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method inodeExists(Lorg/apache/hadoop/fs/Path;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method retrieveINode(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/s3/INode;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method getPos()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3Credentials:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Block:
method getId()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method getSerializedLength()J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method serialize()Ljava/io/InputStream;:
local bytes:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method createDefaultStore(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/s3/FileSystemStore;:
local methodNameToPolicyMap:
type:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem$S3FileStatus:
method findBlocksize(Lorg/apache/hadoop/fs/s3/INode;)J:
local ret:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method retrieveBlock(Lorg/apache/hadoop/fs/s3/Block;J)Ljava/io/File;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method storeBlock(Lorg/apache/hadoop/fs/s3/Block;Ljava/io/File;)V:
local in:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method deleteINode(Lorg/apache/hadoop/fs/Path;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method blockExists(J)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method get(Ljava/lang/String;)Ljava/io/InputStream;:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listDeepSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method blockExists(J)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystemConfigKeys:
field S3_CLIENT_WRITE_PACKET_SIZE_KEY:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method blockToKey(J)Ljava/lang/String;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method run([Ljava/lang/String;)I:
local newVersion:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method purge()V:
instanceof *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method retrieveBlock(Lorg/apache/hadoop/fs/s3/Block;J)Ljava/io/File;:
local out:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystemConfigKeys:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method getFileType()Lorg/apache/hadoop/fs/s3/INode$FileType;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method inodeExists(Lorg/apache/hadoop/fs/Path;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method pathToKey(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listDeepSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
local prefixes:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method run([Ljava/lang/String;)I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method listAllPaths()Ljava/util/Set;:
local i:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method delete(Ljava/lang/String;)V:
instanceof *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$UnversionedStore:
method urlEncode(Ljava/lang/String;)Ljava/lang/String;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local srcIsFile:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method pathToKey(Lorg/apache/hadoop/fs/Path;)Ljava/lang/String;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method seek(J)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method inodeExists(Lorg/apache/hadoop/fs/Path;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method mkdirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method getSerializedLength()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method getFileStatus(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FileStatus;:
local inode:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
field blocks:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method migrate(Lorg/apache/hadoop/fs/s3/MigrationTool$Store;Lorg/apache/hadoop/fs/s3/FileSystemStore;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/s3/FileSystemStore;Lorg/apache/hadoop/fs/s3/INode;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method createDefaultStore(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/s3/FileSystemStore;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method getBlocks()[Lorg/apache/hadoop/fs/s3/Block;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method createDefaultStore(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/s3/FileSystemStore;:
local methodPolicy:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem$S3FileStatus:
method findLength(Lorg/apache/hadoop/fs/s3/INode;)J:
local block:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method checkMetadata(Lorg/jets3t/service/model/S3Object;)V:
local dataVersion:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method create(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;ZISJLorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
field METADATA:
new *0:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method append(Lorg/apache/hadoop/fs/Path;ILorg/apache/hadoop/util/Progressable;)Lorg/apache/hadoop/fs/FSDataOutputStream;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method checkMetadata(Lorg/jets3t/service/model/S3Object;)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method serialize()Ljava/io/InputStream;:
local i:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method listDeepSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
return:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method serialize()Ljava/io/InputStream;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
new *3: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method renameRecursive(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method put(Ljava/lang/String;Ljava/io/InputStream;JZ)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method flush()V:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method storeBlock(Lorg/apache/hadoop/fs/s3/Block;Ljava/io/File;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method retrieveBlock(Lorg/apache/hadoop/fs/s3/Block;J)Ljava/io/File;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method inodeExists(Lorg/apache/hadoop/fs/Path;)Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Block:
method getLength()J:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
field FILE_SYSTEM_VERSION_NAME:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method checkMetadata(Lorg/jets3t/service/model/S3Object;)V:
typecast *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local debugEnabled:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
field blocks:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method checkMetadata(Lorg/jets3t/service/model/S3Object;)V:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method run([Ljava/lang/String;)I:
local uri:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method newBackupFile()Ljava/io/File;:
local result:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method createDefaultStore(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/s3/FileSystemStore;:
new *2:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method inodeExists(Lorg/apache/hadoop/fs/Path;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method checkMetadata(Lorg/jets3t/service/model/S3Object;)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/s3/FileSystemStore;Lorg/apache/hadoop/fs/Path;JLorg/apache/hadoop/util/Progressable;I)V:
new *1:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method internalClose()V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method <init>(Lorg/apache/hadoop/fs/s3/INode$FileType;[Lorg/apache/hadoop/fs/s3/Block;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
field FILE_SYSTEM_VERSION_VALUE:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method available()I:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method main([Ljava/lang/String;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
implements 0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method delete(Lorg/apache/hadoop/fs/Path;Z)Z:
local inode:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3Credentials:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
local index:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method checkMetadata(Lorg/jets3t/service/model/S3Object;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method dump()V:
local path:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method open(Lorg/apache/hadoop/fs/Path;I)Lorg/apache/hadoop/fs/FSDataInputStream;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method internalClose()V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method get(Ljava/lang/String;)Lorg/jets3t/service/model/S3Object;:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method getBlocks()[Lorg/apache/hadoop/fs/s3/Block;:
return:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method put(Ljava/lang/String;Ljava/io/InputStream;JZ)V:
parameter 3:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method storeBlock(Lorg/apache/hadoop/fs/s3/Block;Ljava/io/File;)V:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method write([BII)V:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/s3/FileSystemStore;Lorg/apache/hadoop/fs/s3/INode;LFileSystem/Statistics;)V:
local block:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method createDefaultStore(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/s3/FileSystemStore;:
new *1:
inner-type 3,0, 3,0, 2,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method retrieveINode(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/s3/INode;:
local in:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method keyToPath(Ljava/lang/String;)Lorg/apache/hadoop/fs/Path;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
extends: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method <init>(Lorg/apache/hadoop/fs/s3/FileSystemStore;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method storeBlock(Lorg/apache/hadoop/fs/s3/Block;Ljava/io/File;)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method <init>(Lorg/apache/hadoop/fs/s3/FileSystemStore;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method get(Ljava/lang/String;Z)Ljava/io/InputStream;:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
method write([BII)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method mkdirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
local paths:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method createDefaultStore(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/s3/FileSystemStore;:
new *1:
inner-type 3,1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method blockExists(J)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method put(Ljava/lang/String;Ljava/io/InputStream;JZ)V:
parameter 2:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
field FILE_TYPES:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method purge()V:
local i:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method deleteBlock(Lorg/apache/hadoop/fs/s3/Block;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
new *4: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listDeepSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method getBlocks()[Lorg/apache/hadoop/fs/s3/Block;:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Block:
method <init>(JJ)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method retrieveBlock(Lorg/apache/hadoop/fs/s3/Block;J)Ljava/io/File;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method renameRecursive(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local dstPath:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class INode:
method deserialize(Ljava/io/InputStream;)Lorg/apache/hadoop/fs/s3/INode;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
new *4:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class FileSystemStore:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method delete(Ljava/lang/String;)V:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method listDeepSubPaths(Lorg/apache/hadoop/fs/Path;)Ljava/util/Set;:
local prefixes:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method get(Ljava/lang/String;Z)Ljava/io/InputStream;:
local e:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
new *1:
inner-type 0,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method get(Ljava/lang/String;Z)Ljava/io/InputStream;:
typecast *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method put(Ljava/lang/String;Ljava/io/InputStream;JZ)V:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method get(Ljava/lang/String;Z)Ljava/io/InputStream;:
new *0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method <init>(Lorg/apache/hadoop/conf/Configuration;Lorg/apache/hadoop/fs/s3/FileSystemStore;Lorg/apache/hadoop/fs/s3/INode;)V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method initialize(Ljava/net/URI;Lorg/apache/hadoop/conf/Configuration;)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem$S3FileStatus:
method findLength(Lorg/apache/hadoop/fs/s3/INode;)J:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3OutputStream:
field blocks:
type:
inner-type 3,0: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method markSupported()Z:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class MigrationTool$Store:
method listAllPaths()Ljava/util/Set;:
receiver:  @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method retrieveBlock(Lorg/apache/hadoop/fs/s3/Block;J)Ljava/io/File;:
local b:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method rename(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
local debugPreamble:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method renameRecursive(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/Path;)Z:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method dump()V:
local j:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method mkdirs(Lorg/apache/hadoop/fs/Path;Lorg/apache/hadoop/fs/permission/FsPermission;)Z:
parameter 1:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
new *4: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3InputStream:
method seek(J)V:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method listStatus(Lorg/apache/hadoop/fs/Path;)[Lorg/apache/hadoop/fs/FileStatus;:
new *1: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method <init>()V:
return: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class Jets3tFileSystemStore:
method blockToKey(Lorg/apache/hadoop/fs/s3/Block;)Ljava/lang/String;:
parameter 0:
type: @ostrusted.quals.OsUntrusted
package org.apache.hadoop.fs.s3:
class S3FileSystem:
method delete(Lorg/apache/hadoop/fs/Path;Z)Z:
local contents:
type:
inner-type 0,0: @ostrusted.quals.OsUntrusted

